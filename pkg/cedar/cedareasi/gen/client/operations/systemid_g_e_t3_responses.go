// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cmsgov/easi-app/pkg/cedar/cedareasi/gen/models"
)

// SystemidGET3Reader is a Reader for the SystemidGET3 structure.
type SystemidGET3Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SystemidGET3Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSystemidGET3OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSystemidGET3BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSystemidGET3Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSystemidGET3InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSystemidGET3OK creates a SystemidGET3OK with default headers values
func NewSystemidGET3OK() *SystemidGET3OK {
	return &SystemidGET3OK{}
}

/*SystemidGET3OK handles this case with default header values.

OK
*/
type SystemidGET3OK struct {
	Payload *models.SystemidGETResponse
}

func (o *SystemidGET3OK) Error() string {
	return fmt.Sprintf("[GET /system/{id}][%d] systemidGET3OK  %+v", 200, o.Payload)
}

func (o *SystemidGET3OK) GetPayload() *models.SystemidGETResponse {
	return o.Payload
}

func (o *SystemidGET3OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SystemidGETResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemidGET3BadRequest creates a SystemidGET3BadRequest with default headers values
func NewSystemidGET3BadRequest() *SystemidGET3BadRequest {
	return &SystemidGET3BadRequest{}
}

/*SystemidGET3BadRequest handles this case with default header values.

Bad Request
*/
type SystemidGET3BadRequest struct {
}

func (o *SystemidGET3BadRequest) Error() string {
	return fmt.Sprintf("[GET /system/{id}][%d] systemidGET3BadRequest ", 400)
}

func (o *SystemidGET3BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSystemidGET3Unauthorized creates a SystemidGET3Unauthorized with default headers values
func NewSystemidGET3Unauthorized() *SystemidGET3Unauthorized {
	return &SystemidGET3Unauthorized{}
}

/*SystemidGET3Unauthorized handles this case with default header values.

Access Denied
*/
type SystemidGET3Unauthorized struct {
}

func (o *SystemidGET3Unauthorized) Error() string {
	return fmt.Sprintf("[GET /system/{id}][%d] systemidGET3Unauthorized ", 401)
}

func (o *SystemidGET3Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSystemidGET3InternalServerError creates a SystemidGET3InternalServerError with default headers values
func NewSystemidGET3InternalServerError() *SystemidGET3InternalServerError {
	return &SystemidGET3InternalServerError{}
}

/*SystemidGET3InternalServerError handles this case with default header values.

Internal Server Error
*/
type SystemidGET3InternalServerError struct {
	Payload *models.SystemidGETResponse
}

func (o *SystemidGET3InternalServerError) Error() string {
	return fmt.Sprintf("[GET /system/{id}][%d] systemidGET3InternalServerError  %+v", 500, o.Payload)
}

func (o *SystemidGET3InternalServerError) GetPayload() *models.SystemidGETResponse {
	return o.Payload
}

func (o *SystemidGET3InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SystemidGETResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
