// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cmsgov/easi-app/pkg/cedar/cedareasi/gen/models"
)

// SystemidGET4Reader is a Reader for the SystemidGET4 structure.
type SystemidGET4Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SystemidGET4Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSystemidGET4OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSystemidGET4BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSystemidGET4Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSystemidGET4InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSystemidGET4OK creates a SystemidGET4OK with default headers values
func NewSystemidGET4OK() *SystemidGET4OK {
	return &SystemidGET4OK{}
}

/*SystemidGET4OK handles this case with default header values.

OK
*/
type SystemidGET4OK struct {
	Payload *models.SystemidGETResponse
}

func (o *SystemidGET4OK) Error() string {
	return fmt.Sprintf("[GET /system/{id}][%d] systemidGET4OK  %+v", 200, o.Payload)
}

func (o *SystemidGET4OK) GetPayload() *models.SystemidGETResponse {
	return o.Payload
}

func (o *SystemidGET4OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SystemidGETResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemidGET4BadRequest creates a SystemidGET4BadRequest with default headers values
func NewSystemidGET4BadRequest() *SystemidGET4BadRequest {
	return &SystemidGET4BadRequest{}
}

/*SystemidGET4BadRequest handles this case with default header values.

Bad Request
*/
type SystemidGET4BadRequest struct {
	Payload *models.SystemidGETResponse
}

func (o *SystemidGET4BadRequest) Error() string {
	return fmt.Sprintf("[GET /system/{id}][%d] systemidGET4BadRequest  %+v", 400, o.Payload)
}

func (o *SystemidGET4BadRequest) GetPayload() *models.SystemidGETResponse {
	return o.Payload
}

func (o *SystemidGET4BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SystemidGETResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemidGET4Unauthorized creates a SystemidGET4Unauthorized with default headers values
func NewSystemidGET4Unauthorized() *SystemidGET4Unauthorized {
	return &SystemidGET4Unauthorized{}
}

/*SystemidGET4Unauthorized handles this case with default header values.

Access Denied
*/
type SystemidGET4Unauthorized struct {
	Payload *models.SystemidGETResponse
}

func (o *SystemidGET4Unauthorized) Error() string {
	return fmt.Sprintf("[GET /system/{id}][%d] systemidGET4Unauthorized  %+v", 401, o.Payload)
}

func (o *SystemidGET4Unauthorized) GetPayload() *models.SystemidGETResponse {
	return o.Payload
}

func (o *SystemidGET4Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SystemidGETResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemidGET4InternalServerError creates a SystemidGET4InternalServerError with default headers values
func NewSystemidGET4InternalServerError() *SystemidGET4InternalServerError {
	return &SystemidGET4InternalServerError{}
}

/*SystemidGET4InternalServerError handles this case with default header values.

Internal Server Error
*/
type SystemidGET4InternalServerError struct {
	Payload *models.SystemidGETResponse
}

func (o *SystemidGET4InternalServerError) Error() string {
	return fmt.Sprintf("[GET /system/{id}][%d] systemidGET4InternalServerError  %+v", 500, o.Payload)
}

func (o *SystemidGET4InternalServerError) GetPayload() *models.SystemidGETResponse {
	return o.Payload
}

func (o *SystemidGET4InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SystemidGETResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
