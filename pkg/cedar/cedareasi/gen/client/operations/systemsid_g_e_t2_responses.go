// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cmsgov/easi-app/pkg/cedar/cedareasi/gen/models"
)

// SystemsidGET2Reader is a Reader for the SystemsidGET2 structure.
type SystemsidGET2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SystemsidGET2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSystemsidGET2OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSystemsidGET2BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSystemsidGET2Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSystemsidGET2InternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSystemsidGET2OK creates a SystemsidGET2OK with default headers values
func NewSystemsidGET2OK() *SystemsidGET2OK {
	return &SystemsidGET2OK{}
}

/*SystemsidGET2OK handles this case with default header values.

OK
*/
type SystemsidGET2OK struct {
	Payload *models.SystemsidGETResponse
}

func (o *SystemsidGET2OK) Error() string {
	return fmt.Sprintf("[GET /systems/{id}][%d] systemsidGET2OK  %+v", 200, o.Payload)
}

func (o *SystemsidGET2OK) GetPayload() *models.SystemsidGETResponse {
	return o.Payload
}

func (o *SystemsidGET2OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SystemsidGETResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemsidGET2BadRequest creates a SystemsidGET2BadRequest with default headers values
func NewSystemsidGET2BadRequest() *SystemsidGET2BadRequest {
	return &SystemsidGET2BadRequest{}
}

/*SystemsidGET2BadRequest handles this case with default header values.

Bad Request
*/
type SystemsidGET2BadRequest struct {
}

func (o *SystemsidGET2BadRequest) Error() string {
	return fmt.Sprintf("[GET /systems/{id}][%d] systemsidGET2BadRequest ", 400)
}

func (o *SystemsidGET2BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSystemsidGET2Unauthorized creates a SystemsidGET2Unauthorized with default headers values
func NewSystemsidGET2Unauthorized() *SystemsidGET2Unauthorized {
	return &SystemsidGET2Unauthorized{}
}

/*SystemsidGET2Unauthorized handles this case with default header values.

Access Denied
*/
type SystemsidGET2Unauthorized struct {
}

func (o *SystemsidGET2Unauthorized) Error() string {
	return fmt.Sprintf("[GET /systems/{id}][%d] systemsidGET2Unauthorized ", 401)
}

func (o *SystemsidGET2Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSystemsidGET2InternalServerError creates a SystemsidGET2InternalServerError with default headers values
func NewSystemsidGET2InternalServerError() *SystemsidGET2InternalServerError {
	return &SystemsidGET2InternalServerError{}
}

/*SystemsidGET2InternalServerError handles this case with default header values.

Internal Server Error
*/
type SystemsidGET2InternalServerError struct {
	Payload *models.SystemsidGETResponse
}

func (o *SystemsidGET2InternalServerError) Error() string {
	return fmt.Sprintf("[GET /systems/{id}][%d] systemsidGET2InternalServerError  %+v", 500, o.Payload)
}

func (o *SystemsidGET2InternalServerError) GetPayload() *models.SystemsidGETResponse {
	return o.Payload
}

func (o *SystemsidGET2InternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SystemsidGETResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
