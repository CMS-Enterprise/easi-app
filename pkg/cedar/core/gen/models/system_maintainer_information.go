// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SystemMaintainerInformation system maintainer information
//
// swagger:model SystemMaintainerInformation
type SystemMaintainerInformation struct {

	// agile used
	// Example: true
	AgileUsed bool `json:"agileUsed,omitempty"`

	// business artifacts on demand
	// Example: true
	BusinessArtifactsOnDemand bool `json:"businessArtifactsOnDemand,omitempty"`

	// deployment frequency
	// Example: Monthly
	DeploymentFrequency string `json:"deploymentFrequency,omitempty"`

	// dev completion percent
	// Example: 10-14%
	DevCompletionPercent string `json:"devCompletionPercent,omitempty"`

	// dev work description
	// Example: The type of development work underway...
	DevWorkDescription string `json:"devWorkDescription,omitempty"`

	// ecap participation
	// Example: true
	EcapParticipation bool `json:"ecapParticipation,omitempty"`

	// frontend access type
	// Example: IPv4 and IPv6
	FrontendAccessType string `json:"frontendAccessType,omitempty"`

	// hard coded Ip address
	// Example: true
	HardCodedIPAddress bool `json:"hardCodedIpAddress,omitempty"`

	// ip6 enabled asset percent
	// Example: Between 20% and 49%
	Ip6EnabledAssetPercent string `json:"ip6EnabledAssetPercent,omitempty"`

	// ip6 transition plan
	// Example: Yes, transition to IPv6
	Ip6TransitionPlan string `json:"ip6TransitionPlan,omitempty"`

	// ip enabled asset count
	// Example: 1
	IPEnabledAssetCount int32 `json:"ipEnabledAssetCount,omitempty"`

	// major refresh date
	// Format: date
	MajorRefreshDate strfmt.Date `json:"majorRefreshDate,omitempty"`

	// net accessibility
	// Example: Accessible to a CMS-internal network only
	NetAccessibility string `json:"netAccessibility,omitempty"`

	// om documentation on demand
	// Example: true
	OmDocumentationOnDemand bool `json:"omDocumentationOnDemand,omitempty"`

	// plans to retire replace
	// Example: Yes - Retire and Replace
	PlansToRetireReplace string `json:"plansToRetireReplace,omitempty"`

	// quarter to retire replace
	// Example: 3
	QuarterToRetireReplace string `json:"quarterToRetireReplace,omitempty"`

	// records management bucket
	RecordsManagementBucket []string `json:"recordsManagementBucket"`

	// source code on demand
	// Example: true
	SourceCodeOnDemand bool `json:"sourceCodeOnDemand,omitempty"`

	// system customization
	// Example: Less Than 20% Customization
	SystemCustomization string `json:"systemCustomization,omitempty"`

	// system design on demand
	// Example: true
	SystemDesignOnDemand bool `json:"systemDesignOnDemand,omitempty"`

	// system production date
	// Format: date
	SystemProductionDate strfmt.Date `json:"systemProductionDate,omitempty"`

	// system requirements on demand
	// Example: true
	SystemRequirementsOnDemand bool `json:"systemRequirementsOnDemand,omitempty"`

	// test plan on demand
	// Example: true
	TestPlanOnDemand bool `json:"testPlanOnDemand,omitempty"`

	// test reports on demand
	// Example: true
	TestReportsOnDemand bool `json:"testReportsOnDemand,omitempty"`

	// test scripts on demand
	// Example: true
	TestScriptsOnDemand bool `json:"testScriptsOnDemand,omitempty"`

	// year to retire replace
	// Example: 2023
	YearToRetireReplace string `json:"yearToRetireReplace,omitempty"`
}

// Validate validates this system maintainer information
func (m *SystemMaintainerInformation) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMajorRefreshDate(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSystemProductionDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SystemMaintainerInformation) validateMajorRefreshDate(formats strfmt.Registry) error {
	if swag.IsZero(m.MajorRefreshDate) { // not required
		return nil
	}

	if err := validate.FormatOf("majorRefreshDate", "body", "date", m.MajorRefreshDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *SystemMaintainerInformation) validateSystemProductionDate(formats strfmt.Registry) error {
	if swag.IsZero(m.SystemProductionDate) { // not required
		return nil
	}

	if err := validate.FormatOf("systemProductionDate", "body", "date", m.SystemProductionDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this system maintainer information based on context it is used
func (m *SystemMaintainerInformation) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SystemMaintainerInformation) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SystemMaintainerInformation) UnmarshalBinary(b []byte) error {
	var res SystemMaintainerInformation
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
