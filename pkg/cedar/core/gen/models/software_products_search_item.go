// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// SoftwareProductsSearchItem software products search item
//
// swagger:model SoftwareProductsSearchItem
type SoftwareProductsSearchItem struct {

	// api gateway use
	APIGatewayUse bool `json:"api_gateway_use,omitempty"`

	// ela purchase
	ElaPurchase string `json:"ela_purchase,omitempty"`

	// ela vendor id
	ElaVendorID string `json:"ela_vendor_id,omitempty"`

	// provides ai capability
	ProvidesAiCapability bool `json:"provides_ai_capability,omitempty"`

	// refstr
	Refstr string `json:"refstr,omitempty"`

	// software catagory connection Guid
	SoftwareCatagoryConnectionGUID string `json:"softwareCatagoryConnectionGuid,omitempty"`

	// software vendor connection Guid
	SoftwareVendorConnectionGUID string `json:"softwareVendorConnectionGuid,omitempty"`

	// software cost
	SoftwareCost string `json:"software_cost,omitempty"`

	// software ela organization
	SoftwareElaOrganization string `json:"software_ela_organization,omitempty"`

	// software name
	SoftwareName string `json:"software_name,omitempty"`

	// system software connection Guid
	SystemSoftwareConnectionGUID string `json:"systemSoftwareConnectionGuid,omitempty"`

	// technopedia category
	TechnopediaCategory string `json:"technopedia_category,omitempty"`

	// technopedia id
	TechnopediaID string `json:"technopedia_id,omitempty"`

	// vendor name
	VendorName string `json:"vendor_name,omitempty"`
}

// Validate validates this software products search item
func (m *SoftwareProductsSearchItem) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this software products search item based on context it is used
func (m *SoftwareProductsSearchItem) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SoftwareProductsSearchItem) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SoftwareProductsSearchItem) UnmarshalBinary(b []byte) error {
	var res SoftwareProductsSearchItem
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
