// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Products products
//
// swagger:model Products
type Products struct {

	// api gateway use
	APIGatewayUse bool `json:"api_gateway_use,omitempty"`

	// local component refstr
	LocalComponentRefstr string `json:"local_component_refstr,omitempty"`

	// provides ai capability
	ProvidesAiCapability bool `json:"provides_ai_capability,omitempty"`

	// technopedia id
	// Required: true
	TechnopediaID *string `json:"technopedia_id"`
}

// Validate validates this products
func (m *Products) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTechnopediaID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Products) validateTechnopediaID(formats strfmt.Registry) error {

	if err := validate.Required("technopedia_id", "body", m.TechnopediaID); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this products based on context it is used
func (m *Products) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Products) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Products) UnmarshalBinary(b []byte) error {
	var res Products
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
