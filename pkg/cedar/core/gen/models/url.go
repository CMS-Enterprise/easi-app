// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// URL Url
//
// swagger:model Url
type URL struct {

	// A valid and full system URL
	Link string `json:"link,omitempty"`

	// A boolean flag to indicate Does this URL provide access to a versioned code repository?
	// Example: Yes/No
	ProvidesVerCodeAccess string `json:"providesVerCodeAccess,omitempty"`

	// A boolean flag to indicate whether URL is an API Endpoint
	// Example: Yes/No
	URLAPIEndpoint string `json:"urlApiEndpoint,omitempty"`

	// A boolean flag to indicate whether application is behind a Web Application Firewall (WAF)
	// Example: Yes/No
	URLAPIWaf string `json:"urlApiWaf,omitempty"`

	// A string that contains What hosting environment is this URL for?
	URLHostingEnv string `json:"urlHostingEnv,omitempty"`

	// Unique key that uniquely identified the URL in database
	// Example: 218-10-0
	URLID string `json:"urlId,omitempty"`
}

// Validate validates this Url
func (m *URL) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this Url based on context it is used
func (m *URL) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *URL) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *URL) UnmarshalBinary(b []byte) error {
	var res URL
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
