// Code generated by go-swagger; DO NOT EDIT.

package system

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewSystemVersionFindByIDParams creates a new SystemVersionFindByIDParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewSystemVersionFindByIDParams() *SystemVersionFindByIDParams {
	return &SystemVersionFindByIDParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewSystemVersionFindByIDParamsWithTimeout creates a new SystemVersionFindByIDParams object
// with the ability to set a timeout on a request.
func NewSystemVersionFindByIDParamsWithTimeout(timeout time.Duration) *SystemVersionFindByIDParams {
	return &SystemVersionFindByIDParams{
		timeout: timeout,
	}
}

// NewSystemVersionFindByIDParamsWithContext creates a new SystemVersionFindByIDParams object
// with the ability to set a context for a request.
func NewSystemVersionFindByIDParamsWithContext(ctx context.Context) *SystemVersionFindByIDParams {
	return &SystemVersionFindByIDParams{
		Context: ctx,
	}
}

// NewSystemVersionFindByIDParamsWithHTTPClient creates a new SystemVersionFindByIDParams object
// with the ability to set a custom HTTPClient for a request.
func NewSystemVersionFindByIDParamsWithHTTPClient(client *http.Client) *SystemVersionFindByIDParams {
	return &SystemVersionFindByIDParams{
		HTTPClient: client,
	}
}

/* SystemVersionFindByIDParams contains all the parameters to send to the API endpoint
   for the system version find by Id operation.

   Typically these are written to a http.Request.
*/
type SystemVersionFindByIDParams struct {

	/* IctObjectIds.

	   Comma delimited list of ICT Object IDs of systems to retrieve.
	*/
	IctObjectIds []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the system version find by Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SystemVersionFindByIDParams) WithDefaults() *SystemVersionFindByIDParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the system version find by Id params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *SystemVersionFindByIDParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the system version find by Id params
func (o *SystemVersionFindByIDParams) WithTimeout(timeout time.Duration) *SystemVersionFindByIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the system version find by Id params
func (o *SystemVersionFindByIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the system version find by Id params
func (o *SystemVersionFindByIDParams) WithContext(ctx context.Context) *SystemVersionFindByIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the system version find by Id params
func (o *SystemVersionFindByIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the system version find by Id params
func (o *SystemVersionFindByIDParams) WithHTTPClient(client *http.Client) *SystemVersionFindByIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the system version find by Id params
func (o *SystemVersionFindByIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIctObjectIds adds the ictObjectIds to the system version find by Id params
func (o *SystemVersionFindByIDParams) WithIctObjectIds(ictObjectIds []string) *SystemVersionFindByIDParams {
	o.SetIctObjectIds(ictObjectIds)
	return o
}

// SetIctObjectIds adds the ictObjectIds to the system version find by Id params
func (o *SystemVersionFindByIDParams) SetIctObjectIds(ictObjectIds []string) {
	o.IctObjectIds = ictObjectIds
}

// WriteToRequest writes these params to a swagger request
func (o *SystemVersionFindByIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.IctObjectIds != nil {

		// binding items for ictObjectIds
		joinedIctObjectIds := o.bindParamIctObjectIds(reg)

		// query array param ictObjectIds
		if err := r.SetQueryParam("ictObjectIds", joinedIctObjectIds...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamSystemVersionFindByID binds the parameter ictObjectIds
func (o *SystemVersionFindByIDParams) bindParamIctObjectIds(formats strfmt.Registry) []string {
	ictObjectIdsIR := o.IctObjectIds

	var ictObjectIdsIC []string
	for _, ictObjectIdsIIR := range ictObjectIdsIR { // explode []string

		ictObjectIdsIIV := ictObjectIdsIIR // string as string
		ictObjectIdsIC = append(ictObjectIdsIC, ictObjectIdsIIV)
	}

	// items.CollectionFormat: "multi"
	ictObjectIdsIS := swag.JoinByFormat(ictObjectIdsIC, "multi")

	return ictObjectIdsIS
}
