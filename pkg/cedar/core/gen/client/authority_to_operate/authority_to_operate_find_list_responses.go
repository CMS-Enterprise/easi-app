// Code generated by go-swagger; DO NOT EDIT.

package authority_to_operate

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cmsgov/easi-app/pkg/cedar/core/gen/models"
)

// AuthorityToOperateFindListReader is a Reader for the AuthorityToOperateFindList structure.
type AuthorityToOperateFindListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AuthorityToOperateFindListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAuthorityToOperateFindListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAuthorityToOperateFindListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAuthorityToOperateFindListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAuthorityToOperateFindListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /authorityToOperate] authorityToOperateFindList", response, response.Code())
	}
}

// NewAuthorityToOperateFindListOK creates a AuthorityToOperateFindListOK with default headers values
func NewAuthorityToOperateFindListOK() *AuthorityToOperateFindListOK {
	return &AuthorityToOperateFindListOK{}
}

/*
AuthorityToOperateFindListOK describes a response with status code 200, with default header values.

OK
*/
type AuthorityToOperateFindListOK struct {
	Payload *models.AuthorityToOperateFindResponse
}

// IsSuccess returns true when this authority to operate find list o k response has a 2xx status code
func (o *AuthorityToOperateFindListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this authority to operate find list o k response has a 3xx status code
func (o *AuthorityToOperateFindListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this authority to operate find list o k response has a 4xx status code
func (o *AuthorityToOperateFindListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this authority to operate find list o k response has a 5xx status code
func (o *AuthorityToOperateFindListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this authority to operate find list o k response a status code equal to that given
func (o *AuthorityToOperateFindListOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the authority to operate find list o k response
func (o *AuthorityToOperateFindListOK) Code() int {
	return 200
}

func (o *AuthorityToOperateFindListOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /authorityToOperate][%d] authorityToOperateFindListOK %s", 200, payload)
}

func (o *AuthorityToOperateFindListOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /authorityToOperate][%d] authorityToOperateFindListOK %s", 200, payload)
}

func (o *AuthorityToOperateFindListOK) GetPayload() *models.AuthorityToOperateFindResponse {
	return o.Payload
}

func (o *AuthorityToOperateFindListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AuthorityToOperateFindResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthorityToOperateFindListBadRequest creates a AuthorityToOperateFindListBadRequest with default headers values
func NewAuthorityToOperateFindListBadRequest() *AuthorityToOperateFindListBadRequest {
	return &AuthorityToOperateFindListBadRequest{}
}

/*
AuthorityToOperateFindListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AuthorityToOperateFindListBadRequest struct {
	Payload *models.Response
}

// IsSuccess returns true when this authority to operate find list bad request response has a 2xx status code
func (o *AuthorityToOperateFindListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this authority to operate find list bad request response has a 3xx status code
func (o *AuthorityToOperateFindListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this authority to operate find list bad request response has a 4xx status code
func (o *AuthorityToOperateFindListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this authority to operate find list bad request response has a 5xx status code
func (o *AuthorityToOperateFindListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this authority to operate find list bad request response a status code equal to that given
func (o *AuthorityToOperateFindListBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the authority to operate find list bad request response
func (o *AuthorityToOperateFindListBadRequest) Code() int {
	return 400
}

func (o *AuthorityToOperateFindListBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /authorityToOperate][%d] authorityToOperateFindListBadRequest %s", 400, payload)
}

func (o *AuthorityToOperateFindListBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /authorityToOperate][%d] authorityToOperateFindListBadRequest %s", 400, payload)
}

func (o *AuthorityToOperateFindListBadRequest) GetPayload() *models.Response {
	return o.Payload
}

func (o *AuthorityToOperateFindListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthorityToOperateFindListUnauthorized creates a AuthorityToOperateFindListUnauthorized with default headers values
func NewAuthorityToOperateFindListUnauthorized() *AuthorityToOperateFindListUnauthorized {
	return &AuthorityToOperateFindListUnauthorized{}
}

/*
AuthorityToOperateFindListUnauthorized describes a response with status code 401, with default header values.

Access Denied
*/
type AuthorityToOperateFindListUnauthorized struct {
	Payload *models.Response
}

// IsSuccess returns true when this authority to operate find list unauthorized response has a 2xx status code
func (o *AuthorityToOperateFindListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this authority to operate find list unauthorized response has a 3xx status code
func (o *AuthorityToOperateFindListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this authority to operate find list unauthorized response has a 4xx status code
func (o *AuthorityToOperateFindListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this authority to operate find list unauthorized response has a 5xx status code
func (o *AuthorityToOperateFindListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this authority to operate find list unauthorized response a status code equal to that given
func (o *AuthorityToOperateFindListUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the authority to operate find list unauthorized response
func (o *AuthorityToOperateFindListUnauthorized) Code() int {
	return 401
}

func (o *AuthorityToOperateFindListUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /authorityToOperate][%d] authorityToOperateFindListUnauthorized %s", 401, payload)
}

func (o *AuthorityToOperateFindListUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /authorityToOperate][%d] authorityToOperateFindListUnauthorized %s", 401, payload)
}

func (o *AuthorityToOperateFindListUnauthorized) GetPayload() *models.Response {
	return o.Payload
}

func (o *AuthorityToOperateFindListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthorityToOperateFindListInternalServerError creates a AuthorityToOperateFindListInternalServerError with default headers values
func NewAuthorityToOperateFindListInternalServerError() *AuthorityToOperateFindListInternalServerError {
	return &AuthorityToOperateFindListInternalServerError{}
}

/*
AuthorityToOperateFindListInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type AuthorityToOperateFindListInternalServerError struct {
	Payload *models.Response
}

// IsSuccess returns true when this authority to operate find list internal server error response has a 2xx status code
func (o *AuthorityToOperateFindListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this authority to operate find list internal server error response has a 3xx status code
func (o *AuthorityToOperateFindListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this authority to operate find list internal server error response has a 4xx status code
func (o *AuthorityToOperateFindListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this authority to operate find list internal server error response has a 5xx status code
func (o *AuthorityToOperateFindListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this authority to operate find list internal server error response a status code equal to that given
func (o *AuthorityToOperateFindListInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the authority to operate find list internal server error response
func (o *AuthorityToOperateFindListInternalServerError) Code() int {
	return 500
}

func (o *AuthorityToOperateFindListInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /authorityToOperate][%d] authorityToOperateFindListInternalServerError %s", 500, payload)
}

func (o *AuthorityToOperateFindListInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /authorityToOperate][%d] authorityToOperateFindListInternalServerError %s", 500, payload)
}

func (o *AuthorityToOperateFindListInternalServerError) GetPayload() *models.Response {
	return o.Payload
}

func (o *AuthorityToOperateFindListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
