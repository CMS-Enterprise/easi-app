// Code generated by go-swagger; DO NOT EDIT.

package person

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cms-enterprise/easi-app/pkg/cedar/core/gen/models"
)

// PersonFindListReader is a Reader for the PersonFindList structure.
type PersonFindListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PersonFindListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPersonFindListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPersonFindListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPersonFindListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPersonFindListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /person] personFindList", response, response.Code())
	}
}

// NewPersonFindListOK creates a PersonFindListOK with default headers values
func NewPersonFindListOK() *PersonFindListOK {
	return &PersonFindListOK{}
}

/*
PersonFindListOK describes a response with status code 200, with default header values.

OK
*/
type PersonFindListOK struct {
	Payload *models.PersonFindResponse
}

// IsSuccess returns true when this person find list o k response has a 2xx status code
func (o *PersonFindListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this person find list o k response has a 3xx status code
func (o *PersonFindListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this person find list o k response has a 4xx status code
func (o *PersonFindListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this person find list o k response has a 5xx status code
func (o *PersonFindListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this person find list o k response a status code equal to that given
func (o *PersonFindListOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the person find list o k response
func (o *PersonFindListOK) Code() int {
	return 200
}

func (o *PersonFindListOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /person][%d] personFindListOK %s", 200, payload)
}

func (o *PersonFindListOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /person][%d] personFindListOK %s", 200, payload)
}

func (o *PersonFindListOK) GetPayload() *models.PersonFindResponse {
	return o.Payload
}

func (o *PersonFindListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PersonFindResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPersonFindListBadRequest creates a PersonFindListBadRequest with default headers values
func NewPersonFindListBadRequest() *PersonFindListBadRequest {
	return &PersonFindListBadRequest{}
}

/*
PersonFindListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PersonFindListBadRequest struct {
	Payload *models.Response
}

// IsSuccess returns true when this person find list bad request response has a 2xx status code
func (o *PersonFindListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this person find list bad request response has a 3xx status code
func (o *PersonFindListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this person find list bad request response has a 4xx status code
func (o *PersonFindListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this person find list bad request response has a 5xx status code
func (o *PersonFindListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this person find list bad request response a status code equal to that given
func (o *PersonFindListBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the person find list bad request response
func (o *PersonFindListBadRequest) Code() int {
	return 400
}

func (o *PersonFindListBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /person][%d] personFindListBadRequest %s", 400, payload)
}

func (o *PersonFindListBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /person][%d] personFindListBadRequest %s", 400, payload)
}

func (o *PersonFindListBadRequest) GetPayload() *models.Response {
	return o.Payload
}

func (o *PersonFindListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPersonFindListUnauthorized creates a PersonFindListUnauthorized with default headers values
func NewPersonFindListUnauthorized() *PersonFindListUnauthorized {
	return &PersonFindListUnauthorized{}
}

/*
PersonFindListUnauthorized describes a response with status code 401, with default header values.

Access Denied
*/
type PersonFindListUnauthorized struct {
	Payload *models.Response
}

// IsSuccess returns true when this person find list unauthorized response has a 2xx status code
func (o *PersonFindListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this person find list unauthorized response has a 3xx status code
func (o *PersonFindListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this person find list unauthorized response has a 4xx status code
func (o *PersonFindListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this person find list unauthorized response has a 5xx status code
func (o *PersonFindListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this person find list unauthorized response a status code equal to that given
func (o *PersonFindListUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the person find list unauthorized response
func (o *PersonFindListUnauthorized) Code() int {
	return 401
}

func (o *PersonFindListUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /person][%d] personFindListUnauthorized %s", 401, payload)
}

func (o *PersonFindListUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /person][%d] personFindListUnauthorized %s", 401, payload)
}

func (o *PersonFindListUnauthorized) GetPayload() *models.Response {
	return o.Payload
}

func (o *PersonFindListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPersonFindListInternalServerError creates a PersonFindListInternalServerError with default headers values
func NewPersonFindListInternalServerError() *PersonFindListInternalServerError {
	return &PersonFindListInternalServerError{}
}

/*
PersonFindListInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PersonFindListInternalServerError struct {
	Payload *models.Response
}

// IsSuccess returns true when this person find list internal server error response has a 2xx status code
func (o *PersonFindListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this person find list internal server error response has a 3xx status code
func (o *PersonFindListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this person find list internal server error response has a 4xx status code
func (o *PersonFindListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this person find list internal server error response has a 5xx status code
func (o *PersonFindListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this person find list internal server error response a status code equal to that given
func (o *PersonFindListInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the person find list internal server error response
func (o *PersonFindListInternalServerError) Code() int {
	return 500
}

func (o *PersonFindListInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /person][%d] personFindListInternalServerError %s", 500, payload)
}

func (o *PersonFindListInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /person][%d] personFindListInternalServerError %s", 500, payload)
}

func (o *PersonFindListInternalServerError) GetPayload() *models.Response {
	return o.Payload
}

func (o *PersonFindListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
