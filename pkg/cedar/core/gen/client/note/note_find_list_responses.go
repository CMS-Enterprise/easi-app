// Code generated by go-swagger; DO NOT EDIT.

package note

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cmsgov/easi-app/pkg/cedar/core/gen/models"
)

// NoteFindListReader is a Reader for the NoteFindList structure.
type NoteFindListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *NoteFindListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewNoteFindListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewNoteFindListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewNoteFindListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewNoteFindListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewNoteFindListOK creates a NoteFindListOK with default headers values
func NewNoteFindListOK() *NoteFindListOK {
	return &NoteFindListOK{}
}

/* NoteFindListOK describes a response with status code 200, with default header values.

OK
*/
type NoteFindListOK struct {
	Payload *models.NoteFindResponse
}

func (o *NoteFindListOK) Error() string {
	return fmt.Sprintf("[GET /note][%d] noteFindListOK  %+v", 200, o.Payload)
}
func (o *NoteFindListOK) GetPayload() *models.NoteFindResponse {
	return o.Payload
}

func (o *NoteFindListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NoteFindResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNoteFindListBadRequest creates a NoteFindListBadRequest with default headers values
func NewNoteFindListBadRequest() *NoteFindListBadRequest {
	return &NoteFindListBadRequest{}
}

/* NoteFindListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type NoteFindListBadRequest struct {
	Payload *models.Response
}

func (o *NoteFindListBadRequest) Error() string {
	return fmt.Sprintf("[GET /note][%d] noteFindListBadRequest  %+v", 400, o.Payload)
}
func (o *NoteFindListBadRequest) GetPayload() *models.Response {
	return o.Payload
}

func (o *NoteFindListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNoteFindListUnauthorized creates a NoteFindListUnauthorized with default headers values
func NewNoteFindListUnauthorized() *NoteFindListUnauthorized {
	return &NoteFindListUnauthorized{}
}

/* NoteFindListUnauthorized describes a response with status code 401, with default header values.

Access Denied
*/
type NoteFindListUnauthorized struct {
	Payload *models.Response
}

func (o *NoteFindListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /note][%d] noteFindListUnauthorized  %+v", 401, o.Payload)
}
func (o *NoteFindListUnauthorized) GetPayload() *models.Response {
	return o.Payload
}

func (o *NoteFindListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewNoteFindListInternalServerError creates a NoteFindListInternalServerError with default headers values
func NewNoteFindListInternalServerError() *NoteFindListInternalServerError {
	return &NoteFindListInternalServerError{}
}

/* NoteFindListInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type NoteFindListInternalServerError struct {
	Payload *models.Response
}

func (o *NoteFindListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /note][%d] noteFindListInternalServerError  %+v", 500, o.Payload)
}
func (o *NoteFindListInternalServerError) GetPayload() *models.Response {
	return o.Payload
}

func (o *NoteFindListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
