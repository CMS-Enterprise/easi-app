// Code generated by go-swagger; DO NOT EDIT.

package budget

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cms-enterprise/easi-app/pkg/cedar/core/gen/models"
)

// BudgetFindReader is a Reader for the BudgetFind structure.
type BudgetFindReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BudgetFindReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBudgetFindOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewBudgetFindBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewBudgetFindUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewBudgetFindInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /budget] budgetFind", response, response.Code())
	}
}

// NewBudgetFindOK creates a BudgetFindOK with default headers values
func NewBudgetFindOK() *BudgetFindOK {
	return &BudgetFindOK{}
}

/*
BudgetFindOK describes a response with status code 200, with default header values.

OK
*/
type BudgetFindOK struct {
	Payload *models.BudgetFindResponse
}

// IsSuccess returns true when this budget find o k response has a 2xx status code
func (o *BudgetFindOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this budget find o k response has a 3xx status code
func (o *BudgetFindOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this budget find o k response has a 4xx status code
func (o *BudgetFindOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this budget find o k response has a 5xx status code
func (o *BudgetFindOK) IsServerError() bool {
	return false
}

// IsCode returns true when this budget find o k response a status code equal to that given
func (o *BudgetFindOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the budget find o k response
func (o *BudgetFindOK) Code() int {
	return 200
}

func (o *BudgetFindOK) Error() string {
	return fmt.Sprintf("[GET /budget][%d] budgetFindOK  %+v", 200, o.Payload)
}

func (o *BudgetFindOK) String() string {
	return fmt.Sprintf("[GET /budget][%d] budgetFindOK  %+v", 200, o.Payload)
}

func (o *BudgetFindOK) GetPayload() *models.BudgetFindResponse {
	return o.Payload
}

func (o *BudgetFindOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BudgetFindResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBudgetFindBadRequest creates a BudgetFindBadRequest with default headers values
func NewBudgetFindBadRequest() *BudgetFindBadRequest {
	return &BudgetFindBadRequest{}
}

/*
BudgetFindBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type BudgetFindBadRequest struct {
	Payload *models.Response
}

// IsSuccess returns true when this budget find bad request response has a 2xx status code
func (o *BudgetFindBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this budget find bad request response has a 3xx status code
func (o *BudgetFindBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this budget find bad request response has a 4xx status code
func (o *BudgetFindBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this budget find bad request response has a 5xx status code
func (o *BudgetFindBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this budget find bad request response a status code equal to that given
func (o *BudgetFindBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the budget find bad request response
func (o *BudgetFindBadRequest) Code() int {
	return 400
}

func (o *BudgetFindBadRequest) Error() string {
	return fmt.Sprintf("[GET /budget][%d] budgetFindBadRequest  %+v", 400, o.Payload)
}

func (o *BudgetFindBadRequest) String() string {
	return fmt.Sprintf("[GET /budget][%d] budgetFindBadRequest  %+v", 400, o.Payload)
}

func (o *BudgetFindBadRequest) GetPayload() *models.Response {
	return o.Payload
}

func (o *BudgetFindBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBudgetFindUnauthorized creates a BudgetFindUnauthorized with default headers values
func NewBudgetFindUnauthorized() *BudgetFindUnauthorized {
	return &BudgetFindUnauthorized{}
}

/*
BudgetFindUnauthorized describes a response with status code 401, with default header values.

Access Denied
*/
type BudgetFindUnauthorized struct {
	Payload *models.Response
}

// IsSuccess returns true when this budget find unauthorized response has a 2xx status code
func (o *BudgetFindUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this budget find unauthorized response has a 3xx status code
func (o *BudgetFindUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this budget find unauthorized response has a 4xx status code
func (o *BudgetFindUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this budget find unauthorized response has a 5xx status code
func (o *BudgetFindUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this budget find unauthorized response a status code equal to that given
func (o *BudgetFindUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the budget find unauthorized response
func (o *BudgetFindUnauthorized) Code() int {
	return 401
}

func (o *BudgetFindUnauthorized) Error() string {
	return fmt.Sprintf("[GET /budget][%d] budgetFindUnauthorized  %+v", 401, o.Payload)
}

func (o *BudgetFindUnauthorized) String() string {
	return fmt.Sprintf("[GET /budget][%d] budgetFindUnauthorized  %+v", 401, o.Payload)
}

func (o *BudgetFindUnauthorized) GetPayload() *models.Response {
	return o.Payload
}

func (o *BudgetFindUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBudgetFindInternalServerError creates a BudgetFindInternalServerError with default headers values
func NewBudgetFindInternalServerError() *BudgetFindInternalServerError {
	return &BudgetFindInternalServerError{}
}

/*
BudgetFindInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type BudgetFindInternalServerError struct {
	Payload *models.Response
}

// IsSuccess returns true when this budget find internal server error response has a 2xx status code
func (o *BudgetFindInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this budget find internal server error response has a 3xx status code
func (o *BudgetFindInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this budget find internal server error response has a 4xx status code
func (o *BudgetFindInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this budget find internal server error response has a 5xx status code
func (o *BudgetFindInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this budget find internal server error response a status code equal to that given
func (o *BudgetFindInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the budget find internal server error response
func (o *BudgetFindInternalServerError) Code() int {
	return 500
}

func (o *BudgetFindInternalServerError) Error() string {
	return fmt.Sprintf("[GET /budget][%d] budgetFindInternalServerError  %+v", 500, o.Payload)
}

func (o *BudgetFindInternalServerError) String() string {
	return fmt.Sprintf("[GET /budget][%d] budgetFindInternalServerError  %+v", 500, o.Payload)
}

func (o *BudgetFindInternalServerError) GetPayload() *models.Response {
	return o.Payload
}

func (o *BudgetFindInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
