// Code generated by go-swagger; DO NOT EDIT.

package support_contact

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cmsgov/easi-app/pkg/cedar/core/gen/models"
)

// SupportContactFindListReader is a Reader for the SupportContactFindList structure.
type SupportContactFindListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SupportContactFindListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSupportContactFindListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSupportContactFindListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSupportContactFindListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSupportContactFindListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /supportContact] supportContactFindList", response, response.Code())
	}
}

// NewSupportContactFindListOK creates a SupportContactFindListOK with default headers values
func NewSupportContactFindListOK() *SupportContactFindListOK {
	return &SupportContactFindListOK{}
}

/*
SupportContactFindListOK describes a response with status code 200, with default header values.

OK
*/
type SupportContactFindListOK struct {
	Payload *models.SupportContactFindResponse
}

// IsSuccess returns true when this support contact find list o k response has a 2xx status code
func (o *SupportContactFindListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this support contact find list o k response has a 3xx status code
func (o *SupportContactFindListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this support contact find list o k response has a 4xx status code
func (o *SupportContactFindListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this support contact find list o k response has a 5xx status code
func (o *SupportContactFindListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this support contact find list o k response a status code equal to that given
func (o *SupportContactFindListOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the support contact find list o k response
func (o *SupportContactFindListOK) Code() int {
	return 200
}

func (o *SupportContactFindListOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /supportContact][%d] supportContactFindListOK %s", 200, payload)
}

func (o *SupportContactFindListOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /supportContact][%d] supportContactFindListOK %s", 200, payload)
}

func (o *SupportContactFindListOK) GetPayload() *models.SupportContactFindResponse {
	return o.Payload
}

func (o *SupportContactFindListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SupportContactFindResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSupportContactFindListBadRequest creates a SupportContactFindListBadRequest with default headers values
func NewSupportContactFindListBadRequest() *SupportContactFindListBadRequest {
	return &SupportContactFindListBadRequest{}
}

/*
SupportContactFindListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SupportContactFindListBadRequest struct {
	Payload *models.Response
}

// IsSuccess returns true when this support contact find list bad request response has a 2xx status code
func (o *SupportContactFindListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this support contact find list bad request response has a 3xx status code
func (o *SupportContactFindListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this support contact find list bad request response has a 4xx status code
func (o *SupportContactFindListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this support contact find list bad request response has a 5xx status code
func (o *SupportContactFindListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this support contact find list bad request response a status code equal to that given
func (o *SupportContactFindListBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the support contact find list bad request response
func (o *SupportContactFindListBadRequest) Code() int {
	return 400
}

func (o *SupportContactFindListBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /supportContact][%d] supportContactFindListBadRequest %s", 400, payload)
}

func (o *SupportContactFindListBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /supportContact][%d] supportContactFindListBadRequest %s", 400, payload)
}

func (o *SupportContactFindListBadRequest) GetPayload() *models.Response {
	return o.Payload
}

func (o *SupportContactFindListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSupportContactFindListUnauthorized creates a SupportContactFindListUnauthorized with default headers values
func NewSupportContactFindListUnauthorized() *SupportContactFindListUnauthorized {
	return &SupportContactFindListUnauthorized{}
}

/*
SupportContactFindListUnauthorized describes a response with status code 401, with default header values.

Access Denied
*/
type SupportContactFindListUnauthorized struct {
	Payload *models.Response
}

// IsSuccess returns true when this support contact find list unauthorized response has a 2xx status code
func (o *SupportContactFindListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this support contact find list unauthorized response has a 3xx status code
func (o *SupportContactFindListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this support contact find list unauthorized response has a 4xx status code
func (o *SupportContactFindListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this support contact find list unauthorized response has a 5xx status code
func (o *SupportContactFindListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this support contact find list unauthorized response a status code equal to that given
func (o *SupportContactFindListUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the support contact find list unauthorized response
func (o *SupportContactFindListUnauthorized) Code() int {
	return 401
}

func (o *SupportContactFindListUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /supportContact][%d] supportContactFindListUnauthorized %s", 401, payload)
}

func (o *SupportContactFindListUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /supportContact][%d] supportContactFindListUnauthorized %s", 401, payload)
}

func (o *SupportContactFindListUnauthorized) GetPayload() *models.Response {
	return o.Payload
}

func (o *SupportContactFindListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSupportContactFindListInternalServerError creates a SupportContactFindListInternalServerError with default headers values
func NewSupportContactFindListInternalServerError() *SupportContactFindListInternalServerError {
	return &SupportContactFindListInternalServerError{}
}

/*
SupportContactFindListInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type SupportContactFindListInternalServerError struct {
	Payload *models.Response
}

// IsSuccess returns true when this support contact find list internal server error response has a 2xx status code
func (o *SupportContactFindListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this support contact find list internal server error response has a 3xx status code
func (o *SupportContactFindListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this support contact find list internal server error response has a 4xx status code
func (o *SupportContactFindListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this support contact find list internal server error response has a 5xx status code
func (o *SupportContactFindListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this support contact find list internal server error response a status code equal to that given
func (o *SupportContactFindListInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the support contact find list internal server error response
func (o *SupportContactFindListInternalServerError) Code() int {
	return 500
}

func (o *SupportContactFindListInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /supportContact][%d] supportContactFindListInternalServerError %s", 500, payload)
}

func (o *SupportContactFindListInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /supportContact][%d] supportContactFindListInternalServerError %s", 500, payload)
}

func (o *SupportContactFindListInternalServerError) GetPayload() *models.Response {
	return o.Payload
}

func (o *SupportContactFindListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
