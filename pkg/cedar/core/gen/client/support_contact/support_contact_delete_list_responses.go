// Code generated by go-swagger; DO NOT EDIT.

package support_contact

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cmsgov/easi-app/pkg/cedar/core/gen/models"
)

// SupportContactDeleteListReader is a Reader for the SupportContactDeleteList structure.
type SupportContactDeleteListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SupportContactDeleteListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSupportContactDeleteListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSupportContactDeleteListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewSupportContactDeleteListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSupportContactDeleteListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSupportContactDeleteListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[DELETE /supportContact] supportContactDeleteList", response, response.Code())
	}
}

// NewSupportContactDeleteListOK creates a SupportContactDeleteListOK with default headers values
func NewSupportContactDeleteListOK() *SupportContactDeleteListOK {
	return &SupportContactDeleteListOK{}
}

/*
SupportContactDeleteListOK describes a response with status code 200, with default header values.

OK
*/
type SupportContactDeleteListOK struct {
	Payload *models.Response
}

// IsSuccess returns true when this support contact delete list o k response has a 2xx status code
func (o *SupportContactDeleteListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this support contact delete list o k response has a 3xx status code
func (o *SupportContactDeleteListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this support contact delete list o k response has a 4xx status code
func (o *SupportContactDeleteListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this support contact delete list o k response has a 5xx status code
func (o *SupportContactDeleteListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this support contact delete list o k response a status code equal to that given
func (o *SupportContactDeleteListOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the support contact delete list o k response
func (o *SupportContactDeleteListOK) Code() int {
	return 200
}

func (o *SupportContactDeleteListOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /supportContact][%d] supportContactDeleteListOK %s", 200, payload)
}

func (o *SupportContactDeleteListOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /supportContact][%d] supportContactDeleteListOK %s", 200, payload)
}

func (o *SupportContactDeleteListOK) GetPayload() *models.Response {
	return o.Payload
}

func (o *SupportContactDeleteListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSupportContactDeleteListBadRequest creates a SupportContactDeleteListBadRequest with default headers values
func NewSupportContactDeleteListBadRequest() *SupportContactDeleteListBadRequest {
	return &SupportContactDeleteListBadRequest{}
}

/*
SupportContactDeleteListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SupportContactDeleteListBadRequest struct {
	Payload *models.Response
}

// IsSuccess returns true when this support contact delete list bad request response has a 2xx status code
func (o *SupportContactDeleteListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this support contact delete list bad request response has a 3xx status code
func (o *SupportContactDeleteListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this support contact delete list bad request response has a 4xx status code
func (o *SupportContactDeleteListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this support contact delete list bad request response has a 5xx status code
func (o *SupportContactDeleteListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this support contact delete list bad request response a status code equal to that given
func (o *SupportContactDeleteListBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the support contact delete list bad request response
func (o *SupportContactDeleteListBadRequest) Code() int {
	return 400
}

func (o *SupportContactDeleteListBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /supportContact][%d] supportContactDeleteListBadRequest %s", 400, payload)
}

func (o *SupportContactDeleteListBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /supportContact][%d] supportContactDeleteListBadRequest %s", 400, payload)
}

func (o *SupportContactDeleteListBadRequest) GetPayload() *models.Response {
	return o.Payload
}

func (o *SupportContactDeleteListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSupportContactDeleteListUnauthorized creates a SupportContactDeleteListUnauthorized with default headers values
func NewSupportContactDeleteListUnauthorized() *SupportContactDeleteListUnauthorized {
	return &SupportContactDeleteListUnauthorized{}
}

/*
SupportContactDeleteListUnauthorized describes a response with status code 401, with default header values.

Access Denied
*/
type SupportContactDeleteListUnauthorized struct {
	Payload *models.Response
}

// IsSuccess returns true when this support contact delete list unauthorized response has a 2xx status code
func (o *SupportContactDeleteListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this support contact delete list unauthorized response has a 3xx status code
func (o *SupportContactDeleteListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this support contact delete list unauthorized response has a 4xx status code
func (o *SupportContactDeleteListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this support contact delete list unauthorized response has a 5xx status code
func (o *SupportContactDeleteListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this support contact delete list unauthorized response a status code equal to that given
func (o *SupportContactDeleteListUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the support contact delete list unauthorized response
func (o *SupportContactDeleteListUnauthorized) Code() int {
	return 401
}

func (o *SupportContactDeleteListUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /supportContact][%d] supportContactDeleteListUnauthorized %s", 401, payload)
}

func (o *SupportContactDeleteListUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /supportContact][%d] supportContactDeleteListUnauthorized %s", 401, payload)
}

func (o *SupportContactDeleteListUnauthorized) GetPayload() *models.Response {
	return o.Payload
}

func (o *SupportContactDeleteListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSupportContactDeleteListNotFound creates a SupportContactDeleteListNotFound with default headers values
func NewSupportContactDeleteListNotFound() *SupportContactDeleteListNotFound {
	return &SupportContactDeleteListNotFound{}
}

/*
SupportContactDeleteListNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SupportContactDeleteListNotFound struct {
	Payload *models.Response
}

// IsSuccess returns true when this support contact delete list not found response has a 2xx status code
func (o *SupportContactDeleteListNotFound) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this support contact delete list not found response has a 3xx status code
func (o *SupportContactDeleteListNotFound) IsRedirect() bool {
	return false
}

// IsClientError returns true when this support contact delete list not found response has a 4xx status code
func (o *SupportContactDeleteListNotFound) IsClientError() bool {
	return true
}

// IsServerError returns true when this support contact delete list not found response has a 5xx status code
func (o *SupportContactDeleteListNotFound) IsServerError() bool {
	return false
}

// IsCode returns true when this support contact delete list not found response a status code equal to that given
func (o *SupportContactDeleteListNotFound) IsCode(code int) bool {
	return code == 404
}

// Code gets the status code for the support contact delete list not found response
func (o *SupportContactDeleteListNotFound) Code() int {
	return 404
}

func (o *SupportContactDeleteListNotFound) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /supportContact][%d] supportContactDeleteListNotFound %s", 404, payload)
}

func (o *SupportContactDeleteListNotFound) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /supportContact][%d] supportContactDeleteListNotFound %s", 404, payload)
}

func (o *SupportContactDeleteListNotFound) GetPayload() *models.Response {
	return o.Payload
}

func (o *SupportContactDeleteListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSupportContactDeleteListInternalServerError creates a SupportContactDeleteListInternalServerError with default headers values
func NewSupportContactDeleteListInternalServerError() *SupportContactDeleteListInternalServerError {
	return &SupportContactDeleteListInternalServerError{}
}

/*
SupportContactDeleteListInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type SupportContactDeleteListInternalServerError struct {
	Payload *models.Response
}

// IsSuccess returns true when this support contact delete list internal server error response has a 2xx status code
func (o *SupportContactDeleteListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this support contact delete list internal server error response has a 3xx status code
func (o *SupportContactDeleteListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this support contact delete list internal server error response has a 4xx status code
func (o *SupportContactDeleteListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this support contact delete list internal server error response has a 5xx status code
func (o *SupportContactDeleteListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this support contact delete list internal server error response a status code equal to that given
func (o *SupportContactDeleteListInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the support contact delete list internal server error response
func (o *SupportContactDeleteListInternalServerError) Code() int {
	return 500
}

func (o *SupportContactDeleteListInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /supportContact][%d] supportContactDeleteListInternalServerError %s", 500, payload)
}

func (o *SupportContactDeleteListInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[DELETE /supportContact][%d] supportContactDeleteListInternalServerError %s", 500, payload)
}

func (o *SupportContactDeleteListInternalServerError) GetPayload() *models.Response {
	return o.Payload
}

func (o *SupportContactDeleteListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
