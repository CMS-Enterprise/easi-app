// Code generated by go-swagger; DO NOT EDIT.

package url

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cms-enterprise/easi-app/pkg/cedar/core/gen/models"
)

// URLFindListReader is a Reader for the URLFindList structure.
type URLFindListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *URLFindListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewURLFindListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewURLFindListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewURLFindListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewURLFindListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /url/{id}] urlFindList", response, response.Code())
	}
}

// NewURLFindListOK creates a URLFindListOK with default headers values
func NewURLFindListOK() *URLFindListOK {
	return &URLFindListOK{}
}

/*
URLFindListOK describes a response with status code 200, with default header values.

OK
*/
type URLFindListOK struct {
	Payload *models.URLFindResponse
}

// IsSuccess returns true when this url find list o k response has a 2xx status code
func (o *URLFindListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this url find list o k response has a 3xx status code
func (o *URLFindListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this url find list o k response has a 4xx status code
func (o *URLFindListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this url find list o k response has a 5xx status code
func (o *URLFindListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this url find list o k response a status code equal to that given
func (o *URLFindListOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the url find list o k response
func (o *URLFindListOK) Code() int {
	return 200
}

func (o *URLFindListOK) Error() string {
	return fmt.Sprintf("[GET /url/{id}][%d] urlFindListOK  %+v", 200, o.Payload)
}

func (o *URLFindListOK) String() string {
	return fmt.Sprintf("[GET /url/{id}][%d] urlFindListOK  %+v", 200, o.Payload)
}

func (o *URLFindListOK) GetPayload() *models.URLFindResponse {
	return o.Payload
}

func (o *URLFindListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.URLFindResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewURLFindListBadRequest creates a URLFindListBadRequest with default headers values
func NewURLFindListBadRequest() *URLFindListBadRequest {
	return &URLFindListBadRequest{}
}

/*
URLFindListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type URLFindListBadRequest struct {
	Payload *models.Response
}

// IsSuccess returns true when this url find list bad request response has a 2xx status code
func (o *URLFindListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this url find list bad request response has a 3xx status code
func (o *URLFindListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this url find list bad request response has a 4xx status code
func (o *URLFindListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this url find list bad request response has a 5xx status code
func (o *URLFindListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this url find list bad request response a status code equal to that given
func (o *URLFindListBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the url find list bad request response
func (o *URLFindListBadRequest) Code() int {
	return 400
}

func (o *URLFindListBadRequest) Error() string {
	return fmt.Sprintf("[GET /url/{id}][%d] urlFindListBadRequest  %+v", 400, o.Payload)
}

func (o *URLFindListBadRequest) String() string {
	return fmt.Sprintf("[GET /url/{id}][%d] urlFindListBadRequest  %+v", 400, o.Payload)
}

func (o *URLFindListBadRequest) GetPayload() *models.Response {
	return o.Payload
}

func (o *URLFindListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewURLFindListUnauthorized creates a URLFindListUnauthorized with default headers values
func NewURLFindListUnauthorized() *URLFindListUnauthorized {
	return &URLFindListUnauthorized{}
}

/*
URLFindListUnauthorized describes a response with status code 401, with default header values.

Access Denied
*/
type URLFindListUnauthorized struct {
	Payload *models.Response
}

// IsSuccess returns true when this url find list unauthorized response has a 2xx status code
func (o *URLFindListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this url find list unauthorized response has a 3xx status code
func (o *URLFindListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this url find list unauthorized response has a 4xx status code
func (o *URLFindListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this url find list unauthorized response has a 5xx status code
func (o *URLFindListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this url find list unauthorized response a status code equal to that given
func (o *URLFindListUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the url find list unauthorized response
func (o *URLFindListUnauthorized) Code() int {
	return 401
}

func (o *URLFindListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /url/{id}][%d] urlFindListUnauthorized  %+v", 401, o.Payload)
}

func (o *URLFindListUnauthorized) String() string {
	return fmt.Sprintf("[GET /url/{id}][%d] urlFindListUnauthorized  %+v", 401, o.Payload)
}

func (o *URLFindListUnauthorized) GetPayload() *models.Response {
	return o.Payload
}

func (o *URLFindListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewURLFindListInternalServerError creates a URLFindListInternalServerError with default headers values
func NewURLFindListInternalServerError() *URLFindListInternalServerError {
	return &URLFindListInternalServerError{}
}

/*
URLFindListInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type URLFindListInternalServerError struct {
	Payload *models.Response
}

// IsSuccess returns true when this url find list internal server error response has a 2xx status code
func (o *URLFindListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this url find list internal server error response has a 3xx status code
func (o *URLFindListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this url find list internal server error response has a 4xx status code
func (o *URLFindListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this url find list internal server error response has a 5xx status code
func (o *URLFindListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this url find list internal server error response a status code equal to that given
func (o *URLFindListInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the url find list internal server error response
func (o *URLFindListInternalServerError) Code() int {
	return 500
}

func (o *URLFindListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /url/{id}][%d] urlFindListInternalServerError  %+v", 500, o.Payload)
}

func (o *URLFindListInternalServerError) String() string {
	return fmt.Sprintf("[GET /url/{id}][%d] urlFindListInternalServerError  %+v", 500, o.Payload)
}

func (o *URLFindListInternalServerError) GetPayload() *models.Response {
	return o.Payload
}

func (o *URLFindListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
