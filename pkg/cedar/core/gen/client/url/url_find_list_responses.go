// Code generated by go-swagger; DO NOT EDIT.

package url

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cmsgov/easi-app/pkg/cedar/core/gen/models"
)

// URLFindListReader is a Reader for the URLFindList structure.
type URLFindListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *URLFindListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewURLFindListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewURLFindListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewURLFindListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewURLFindListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewURLFindListOK creates a URLFindListOK with default headers values
func NewURLFindListOK() *URLFindListOK {
	return &URLFindListOK{}
}

/* URLFindListOK describes a response with status code 200, with default header values.

OK
*/
type URLFindListOK struct {
	Payload *models.URLFindResponse
}

func (o *URLFindListOK) Error() string {
	return fmt.Sprintf("[GET /url/{id}][%d] urlFindListOK  %+v", 200, o.Payload)
}
func (o *URLFindListOK) GetPayload() *models.URLFindResponse {
	return o.Payload
}

func (o *URLFindListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.URLFindResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewURLFindListBadRequest creates a URLFindListBadRequest with default headers values
func NewURLFindListBadRequest() *URLFindListBadRequest {
	return &URLFindListBadRequest{}
}

/* URLFindListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type URLFindListBadRequest struct {
	Payload *models.Response
}

func (o *URLFindListBadRequest) Error() string {
	return fmt.Sprintf("[GET /url/{id}][%d] urlFindListBadRequest  %+v", 400, o.Payload)
}
func (o *URLFindListBadRequest) GetPayload() *models.Response {
	return o.Payload
}

func (o *URLFindListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewURLFindListUnauthorized creates a URLFindListUnauthorized with default headers values
func NewURLFindListUnauthorized() *URLFindListUnauthorized {
	return &URLFindListUnauthorized{}
}

/* URLFindListUnauthorized describes a response with status code 401, with default header values.

Access Denied
*/
type URLFindListUnauthorized struct {
	Payload *models.Response
}

func (o *URLFindListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /url/{id}][%d] urlFindListUnauthorized  %+v", 401, o.Payload)
}
func (o *URLFindListUnauthorized) GetPayload() *models.Response {
	return o.Payload
}

func (o *URLFindListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewURLFindListInternalServerError creates a URLFindListInternalServerError with default headers values
func NewURLFindListInternalServerError() *URLFindListInternalServerError {
	return &URLFindListInternalServerError{}
}

/* URLFindListInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type URLFindListInternalServerError struct {
	Payload *models.Response
}

func (o *URLFindListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /url/{id}][%d] urlFindListInternalServerError  %+v", 500, o.Payload)
}
func (o *URLFindListInternalServerError) GetPayload() *models.Response {
	return o.Payload
}

func (o *URLFindListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
