// Code generated by go-swagger; DO NOT EDIT.

package page

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cmsgov/easi-app/pkg/cedar/core/gen/models"
)

// PageDataExchangeFindReader is a Reader for the PageDataExchangeFind structure.
type PageDataExchangeFindReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PageDataExchangeFindReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPageDataExchangeFindOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPageDataExchangeFindBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPageDataExchangeFindUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPageDataExchangeFindInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPageDataExchangeFindOK creates a PageDataExchangeFindOK with default headers values
func NewPageDataExchangeFindOK() *PageDataExchangeFindOK {
	return &PageDataExchangeFindOK{}
}

/* PageDataExchangeFindOK describes a response with status code 200, with default header values.

OK
*/
type PageDataExchangeFindOK struct {
	Payload *models.PageDataExchange
}

func (o *PageDataExchangeFindOK) Error() string {
	return fmt.Sprintf("[GET /page/dataExchange][%d] pageDataExchangeFindOK  %+v", 200, o.Payload)
}
func (o *PageDataExchangeFindOK) GetPayload() *models.PageDataExchange {
	return o.Payload
}

func (o *PageDataExchangeFindOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageDataExchange)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPageDataExchangeFindBadRequest creates a PageDataExchangeFindBadRequest with default headers values
func NewPageDataExchangeFindBadRequest() *PageDataExchangeFindBadRequest {
	return &PageDataExchangeFindBadRequest{}
}

/* PageDataExchangeFindBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PageDataExchangeFindBadRequest struct {
	Payload *models.Response
}

func (o *PageDataExchangeFindBadRequest) Error() string {
	return fmt.Sprintf("[GET /page/dataExchange][%d] pageDataExchangeFindBadRequest  %+v", 400, o.Payload)
}
func (o *PageDataExchangeFindBadRequest) GetPayload() *models.Response {
	return o.Payload
}

func (o *PageDataExchangeFindBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPageDataExchangeFindUnauthorized creates a PageDataExchangeFindUnauthorized with default headers values
func NewPageDataExchangeFindUnauthorized() *PageDataExchangeFindUnauthorized {
	return &PageDataExchangeFindUnauthorized{}
}

/* PageDataExchangeFindUnauthorized describes a response with status code 401, with default header values.

Access Denied
*/
type PageDataExchangeFindUnauthorized struct {
	Payload *models.Response
}

func (o *PageDataExchangeFindUnauthorized) Error() string {
	return fmt.Sprintf("[GET /page/dataExchange][%d] pageDataExchangeFindUnauthorized  %+v", 401, o.Payload)
}
func (o *PageDataExchangeFindUnauthorized) GetPayload() *models.Response {
	return o.Payload
}

func (o *PageDataExchangeFindUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPageDataExchangeFindInternalServerError creates a PageDataExchangeFindInternalServerError with default headers values
func NewPageDataExchangeFindInternalServerError() *PageDataExchangeFindInternalServerError {
	return &PageDataExchangeFindInternalServerError{}
}

/* PageDataExchangeFindInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PageDataExchangeFindInternalServerError struct {
	Payload *models.Response
}

func (o *PageDataExchangeFindInternalServerError) Error() string {
	return fmt.Sprintf("[GET /page/dataExchange][%d] pageDataExchangeFindInternalServerError  %+v", 500, o.Payload)
}
func (o *PageDataExchangeFindInternalServerError) GetPayload() *models.Response {
	return o.Payload
}

func (o *PageDataExchangeFindInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
