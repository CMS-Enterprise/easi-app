// Code generated by go-swagger; DO NOT EDIT.

package page

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewPageDataExchangeNotesDeleteParams creates a new PageDataExchangeNotesDeleteParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewPageDataExchangeNotesDeleteParams() *PageDataExchangeNotesDeleteParams {
	return &PageDataExchangeNotesDeleteParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewPageDataExchangeNotesDeleteParamsWithTimeout creates a new PageDataExchangeNotesDeleteParams object
// with the ability to set a timeout on a request.
func NewPageDataExchangeNotesDeleteParamsWithTimeout(timeout time.Duration) *PageDataExchangeNotesDeleteParams {
	return &PageDataExchangeNotesDeleteParams{
		timeout: timeout,
	}
}

// NewPageDataExchangeNotesDeleteParamsWithContext creates a new PageDataExchangeNotesDeleteParams object
// with the ability to set a context for a request.
func NewPageDataExchangeNotesDeleteParamsWithContext(ctx context.Context) *PageDataExchangeNotesDeleteParams {
	return &PageDataExchangeNotesDeleteParams{
		Context: ctx,
	}
}

// NewPageDataExchangeNotesDeleteParamsWithHTTPClient creates a new PageDataExchangeNotesDeleteParams object
// with the ability to set a custom HTTPClient for a request.
func NewPageDataExchangeNotesDeleteParamsWithHTTPClient(client *http.Client) *PageDataExchangeNotesDeleteParams {
	return &PageDataExchangeNotesDeleteParams{
		HTTPClient: client,
	}
}

/* PageDataExchangeNotesDeleteParams contains all the parameters to send to the API endpoint
   for the page data exchange notes delete operation.

   Typically these are written to a http.Request.
*/
type PageDataExchangeNotesDeleteParams struct {

	/* ID.

	   An ID of one or more data exchanges whose notes should be deleted
	*/
	ID []string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the page data exchange notes delete params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PageDataExchangeNotesDeleteParams) WithDefaults() *PageDataExchangeNotesDeleteParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the page data exchange notes delete params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *PageDataExchangeNotesDeleteParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the page data exchange notes delete params
func (o *PageDataExchangeNotesDeleteParams) WithTimeout(timeout time.Duration) *PageDataExchangeNotesDeleteParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the page data exchange notes delete params
func (o *PageDataExchangeNotesDeleteParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the page data exchange notes delete params
func (o *PageDataExchangeNotesDeleteParams) WithContext(ctx context.Context) *PageDataExchangeNotesDeleteParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the page data exchange notes delete params
func (o *PageDataExchangeNotesDeleteParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the page data exchange notes delete params
func (o *PageDataExchangeNotesDeleteParams) WithHTTPClient(client *http.Client) *PageDataExchangeNotesDeleteParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the page data exchange notes delete params
func (o *PageDataExchangeNotesDeleteParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithID adds the id to the page data exchange notes delete params
func (o *PageDataExchangeNotesDeleteParams) WithID(id []string) *PageDataExchangeNotesDeleteParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the page data exchange notes delete params
func (o *PageDataExchangeNotesDeleteParams) SetID(id []string) {
	o.ID = id
}

// WriteToRequest writes these params to a swagger request
func (o *PageDataExchangeNotesDeleteParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.ID != nil {

		// binding items for id
		joinedID := o.bindParamID(reg)

		// query array param id
		if err := r.SetQueryParam("id", joinedID...); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindParamPageDataExchangeNotesDelete binds the parameter id
func (o *PageDataExchangeNotesDeleteParams) bindParamID(formats strfmt.Registry) []string {
	iDIR := o.ID

	var iDIC []string
	for _, iDIIR := range iDIR { // explode []string

		iDIIV := iDIIR // string as string
		iDIC = append(iDIC, iDIIV)
	}

	// items.CollectionFormat: "multi"
	iDIS := swag.JoinByFormat(iDIC, "multi")

	return iDIS
}
