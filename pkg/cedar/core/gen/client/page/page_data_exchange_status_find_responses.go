// Code generated by go-swagger; DO NOT EDIT.

package page

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cmsgov/easi-app/pkg/cedar/core/gen/models"
)

// PageDataExchangeStatusFindReader is a Reader for the PageDataExchangeStatusFind structure.
type PageDataExchangeStatusFindReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PageDataExchangeStatusFindReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPageDataExchangeStatusFindOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPageDataExchangeStatusFindBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPageDataExchangeStatusFindUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPageDataExchangeStatusFindInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPageDataExchangeStatusFindOK creates a PageDataExchangeStatusFindOK with default headers values
func NewPageDataExchangeStatusFindOK() *PageDataExchangeStatusFindOK {
	return &PageDataExchangeStatusFindOK{}
}

/* PageDataExchangeStatusFindOK describes a response with status code 200, with default header values.

OK
*/
type PageDataExchangeStatusFindOK struct {
	Payload *models.PageDataExchangeStatusFindResponse
}

func (o *PageDataExchangeStatusFindOK) Error() string {
	return fmt.Sprintf("[GET /page/dataExchange/status][%d] pageDataExchangeStatusFindOK  %+v", 200, o.Payload)
}
func (o *PageDataExchangeStatusFindOK) GetPayload() *models.PageDataExchangeStatusFindResponse {
	return o.Payload
}

func (o *PageDataExchangeStatusFindOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageDataExchangeStatusFindResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPageDataExchangeStatusFindBadRequest creates a PageDataExchangeStatusFindBadRequest with default headers values
func NewPageDataExchangeStatusFindBadRequest() *PageDataExchangeStatusFindBadRequest {
	return &PageDataExchangeStatusFindBadRequest{}
}

/* PageDataExchangeStatusFindBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PageDataExchangeStatusFindBadRequest struct {
	Payload *models.Response
}

func (o *PageDataExchangeStatusFindBadRequest) Error() string {
	return fmt.Sprintf("[GET /page/dataExchange/status][%d] pageDataExchangeStatusFindBadRequest  %+v", 400, o.Payload)
}
func (o *PageDataExchangeStatusFindBadRequest) GetPayload() *models.Response {
	return o.Payload
}

func (o *PageDataExchangeStatusFindBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPageDataExchangeStatusFindUnauthorized creates a PageDataExchangeStatusFindUnauthorized with default headers values
func NewPageDataExchangeStatusFindUnauthorized() *PageDataExchangeStatusFindUnauthorized {
	return &PageDataExchangeStatusFindUnauthorized{}
}

/* PageDataExchangeStatusFindUnauthorized describes a response with status code 401, with default header values.

Access Denied
*/
type PageDataExchangeStatusFindUnauthorized struct {
	Payload *models.Response
}

func (o *PageDataExchangeStatusFindUnauthorized) Error() string {
	return fmt.Sprintf("[GET /page/dataExchange/status][%d] pageDataExchangeStatusFindUnauthorized  %+v", 401, o.Payload)
}
func (o *PageDataExchangeStatusFindUnauthorized) GetPayload() *models.Response {
	return o.Payload
}

func (o *PageDataExchangeStatusFindUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPageDataExchangeStatusFindInternalServerError creates a PageDataExchangeStatusFindInternalServerError with default headers values
func NewPageDataExchangeStatusFindInternalServerError() *PageDataExchangeStatusFindInternalServerError {
	return &PageDataExchangeStatusFindInternalServerError{}
}

/* PageDataExchangeStatusFindInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PageDataExchangeStatusFindInternalServerError struct {
	Payload *models.Response
}

func (o *PageDataExchangeStatusFindInternalServerError) Error() string {
	return fmt.Sprintf("[GET /page/dataExchange/status][%d] pageDataExchangeStatusFindInternalServerError  %+v", 500, o.Payload)
}
func (o *PageDataExchangeStatusFindInternalServerError) GetPayload() *models.Response {
	return o.Payload
}

func (o *PageDataExchangeStatusFindInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
