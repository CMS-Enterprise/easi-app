// Code generated by go-swagger; DO NOT EDIT.

package page

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cmsgov/easi-app/pkg/cedar/core/gen/models"
)

// PageDataExchangeAddReader is a Reader for the PageDataExchangeAdd structure.
type PageDataExchangeAddReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PageDataExchangeAddReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPageDataExchangeAddOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPageDataExchangeAddBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPageDataExchangeAddUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPageDataExchangeAddInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPageDataExchangeAddOK creates a PageDataExchangeAddOK with default headers values
func NewPageDataExchangeAddOK() *PageDataExchangeAddOK {
	return &PageDataExchangeAddOK{}
}

/* PageDataExchangeAddOK describes a response with status code 200, with default header values.

OK
*/
type PageDataExchangeAddOK struct {
	Payload *models.Response
}

func (o *PageDataExchangeAddOK) Error() string {
	return fmt.Sprintf("[POST /page/dataExchange][%d] pageDataExchangeAddOK  %+v", 200, o.Payload)
}
func (o *PageDataExchangeAddOK) GetPayload() *models.Response {
	return o.Payload
}

func (o *PageDataExchangeAddOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPageDataExchangeAddBadRequest creates a PageDataExchangeAddBadRequest with default headers values
func NewPageDataExchangeAddBadRequest() *PageDataExchangeAddBadRequest {
	return &PageDataExchangeAddBadRequest{}
}

/* PageDataExchangeAddBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PageDataExchangeAddBadRequest struct {
	Payload *models.Response
}

func (o *PageDataExchangeAddBadRequest) Error() string {
	return fmt.Sprintf("[POST /page/dataExchange][%d] pageDataExchangeAddBadRequest  %+v", 400, o.Payload)
}
func (o *PageDataExchangeAddBadRequest) GetPayload() *models.Response {
	return o.Payload
}

func (o *PageDataExchangeAddBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPageDataExchangeAddUnauthorized creates a PageDataExchangeAddUnauthorized with default headers values
func NewPageDataExchangeAddUnauthorized() *PageDataExchangeAddUnauthorized {
	return &PageDataExchangeAddUnauthorized{}
}

/* PageDataExchangeAddUnauthorized describes a response with status code 401, with default header values.

Access Denied
*/
type PageDataExchangeAddUnauthorized struct {
	Payload *models.Response
}

func (o *PageDataExchangeAddUnauthorized) Error() string {
	return fmt.Sprintf("[POST /page/dataExchange][%d] pageDataExchangeAddUnauthorized  %+v", 401, o.Payload)
}
func (o *PageDataExchangeAddUnauthorized) GetPayload() *models.Response {
	return o.Payload
}

func (o *PageDataExchangeAddUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPageDataExchangeAddInternalServerError creates a PageDataExchangeAddInternalServerError with default headers values
func NewPageDataExchangeAddInternalServerError() *PageDataExchangeAddInternalServerError {
	return &PageDataExchangeAddInternalServerError{}
}

/* PageDataExchangeAddInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PageDataExchangeAddInternalServerError struct {
	Payload *models.Response
}

func (o *PageDataExchangeAddInternalServerError) Error() string {
	return fmt.Sprintf("[POST /page/dataExchange][%d] pageDataExchangeAddInternalServerError  %+v", 500, o.Payload)
}
func (o *PageDataExchangeAddInternalServerError) GetPayload() *models.Response {
	return o.Payload
}

func (o *PageDataExchangeAddInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
