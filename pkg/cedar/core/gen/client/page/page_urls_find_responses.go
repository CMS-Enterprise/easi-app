// Code generated by go-swagger; DO NOT EDIT.

package page

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cmsgov/easi-app/pkg/cedar/core/gen/models"
)

// PageUrlsFindReader is a Reader for the PageUrlsFind structure.
type PageUrlsFindReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PageUrlsFindReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPageUrlsFindOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPageUrlsFindBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPageUrlsFindUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPageUrlsFindInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPageUrlsFindOK creates a PageUrlsFindOK with default headers values
func NewPageUrlsFindOK() *PageUrlsFindOK {
	return &PageUrlsFindOK{}
}

/* PageUrlsFindOK describes a response with status code 200, with default header values.

OK
*/
type PageUrlsFindOK struct {
	Payload *models.PageUrlsFindResponse
}

func (o *PageUrlsFindOK) Error() string {
	return fmt.Sprintf("[GET /page/Urls][%d] pageUrlsFindOK  %+v", 200, o.Payload)
}
func (o *PageUrlsFindOK) GetPayload() *models.PageUrlsFindResponse {
	return o.Payload
}

func (o *PageUrlsFindOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PageUrlsFindResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPageUrlsFindBadRequest creates a PageUrlsFindBadRequest with default headers values
func NewPageUrlsFindBadRequest() *PageUrlsFindBadRequest {
	return &PageUrlsFindBadRequest{}
}

/* PageUrlsFindBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PageUrlsFindBadRequest struct {
	Payload *models.Response
}

func (o *PageUrlsFindBadRequest) Error() string {
	return fmt.Sprintf("[GET /page/Urls][%d] pageUrlsFindBadRequest  %+v", 400, o.Payload)
}
func (o *PageUrlsFindBadRequest) GetPayload() *models.Response {
	return o.Payload
}

func (o *PageUrlsFindBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPageUrlsFindUnauthorized creates a PageUrlsFindUnauthorized with default headers values
func NewPageUrlsFindUnauthorized() *PageUrlsFindUnauthorized {
	return &PageUrlsFindUnauthorized{}
}

/* PageUrlsFindUnauthorized describes a response with status code 401, with default header values.

Access Denied
*/
type PageUrlsFindUnauthorized struct {
	Payload *models.Response
}

func (o *PageUrlsFindUnauthorized) Error() string {
	return fmt.Sprintf("[GET /page/Urls][%d] pageUrlsFindUnauthorized  %+v", 401, o.Payload)
}
func (o *PageUrlsFindUnauthorized) GetPayload() *models.Response {
	return o.Payload
}

func (o *PageUrlsFindUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPageUrlsFindInternalServerError creates a PageUrlsFindInternalServerError with default headers values
func NewPageUrlsFindInternalServerError() *PageUrlsFindInternalServerError {
	return &PageUrlsFindInternalServerError{}
}

/* PageUrlsFindInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PageUrlsFindInternalServerError struct {
	Payload *models.Response
}

func (o *PageUrlsFindInternalServerError) Error() string {
	return fmt.Sprintf("[GET /page/Urls][%d] pageUrlsFindInternalServerError  %+v", 500, o.Payload)
}
func (o *PageUrlsFindInternalServerError) GetPayload() *models.Response {
	return o.Payload
}

func (o *PageUrlsFindInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
