// Code generated by go-swagger; DO NOT EDIT.

package deployment

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cmsgov/easi-app/pkg/cedar/core/gen/models"
)

// DeploymentUpdateReader is a Reader for the DeploymentUpdate structure.
type DeploymentUpdateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeploymentUpdateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeploymentUpdateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeploymentUpdateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeploymentUpdateUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeploymentUpdateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[PUT /deployment] deploymentUpdate", response, response.Code())
	}
}

// NewDeploymentUpdateOK creates a DeploymentUpdateOK with default headers values
func NewDeploymentUpdateOK() *DeploymentUpdateOK {
	return &DeploymentUpdateOK{}
}

/*
DeploymentUpdateOK describes a response with status code 200, with default header values.

OK
*/
type DeploymentUpdateOK struct {
	Payload *models.Response
}

// IsSuccess returns true when this deployment update o k response has a 2xx status code
func (o *DeploymentUpdateOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this deployment update o k response has a 3xx status code
func (o *DeploymentUpdateOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deployment update o k response has a 4xx status code
func (o *DeploymentUpdateOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this deployment update o k response has a 5xx status code
func (o *DeploymentUpdateOK) IsServerError() bool {
	return false
}

// IsCode returns true when this deployment update o k response a status code equal to that given
func (o *DeploymentUpdateOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the deployment update o k response
func (o *DeploymentUpdateOK) Code() int {
	return 200
}

func (o *DeploymentUpdateOK) Error() string {
	return fmt.Sprintf("[PUT /deployment][%d] deploymentUpdateOK  %+v", 200, o.Payload)
}

func (o *DeploymentUpdateOK) String() string {
	return fmt.Sprintf("[PUT /deployment][%d] deploymentUpdateOK  %+v", 200, o.Payload)
}

func (o *DeploymentUpdateOK) GetPayload() *models.Response {
	return o.Payload
}

func (o *DeploymentUpdateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeploymentUpdateBadRequest creates a DeploymentUpdateBadRequest with default headers values
func NewDeploymentUpdateBadRequest() *DeploymentUpdateBadRequest {
	return &DeploymentUpdateBadRequest{}
}

/*
DeploymentUpdateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeploymentUpdateBadRequest struct {
	Payload *models.Response
}

// IsSuccess returns true when this deployment update bad request response has a 2xx status code
func (o *DeploymentUpdateBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this deployment update bad request response has a 3xx status code
func (o *DeploymentUpdateBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deployment update bad request response has a 4xx status code
func (o *DeploymentUpdateBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this deployment update bad request response has a 5xx status code
func (o *DeploymentUpdateBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this deployment update bad request response a status code equal to that given
func (o *DeploymentUpdateBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the deployment update bad request response
func (o *DeploymentUpdateBadRequest) Code() int {
	return 400
}

func (o *DeploymentUpdateBadRequest) Error() string {
	return fmt.Sprintf("[PUT /deployment][%d] deploymentUpdateBadRequest  %+v", 400, o.Payload)
}

func (o *DeploymentUpdateBadRequest) String() string {
	return fmt.Sprintf("[PUT /deployment][%d] deploymentUpdateBadRequest  %+v", 400, o.Payload)
}

func (o *DeploymentUpdateBadRequest) GetPayload() *models.Response {
	return o.Payload
}

func (o *DeploymentUpdateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeploymentUpdateUnauthorized creates a DeploymentUpdateUnauthorized with default headers values
func NewDeploymentUpdateUnauthorized() *DeploymentUpdateUnauthorized {
	return &DeploymentUpdateUnauthorized{}
}

/*
DeploymentUpdateUnauthorized describes a response with status code 401, with default header values.

Access Denied
*/
type DeploymentUpdateUnauthorized struct {
	Payload *models.Response
}

// IsSuccess returns true when this deployment update unauthorized response has a 2xx status code
func (o *DeploymentUpdateUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this deployment update unauthorized response has a 3xx status code
func (o *DeploymentUpdateUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deployment update unauthorized response has a 4xx status code
func (o *DeploymentUpdateUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this deployment update unauthorized response has a 5xx status code
func (o *DeploymentUpdateUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this deployment update unauthorized response a status code equal to that given
func (o *DeploymentUpdateUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the deployment update unauthorized response
func (o *DeploymentUpdateUnauthorized) Code() int {
	return 401
}

func (o *DeploymentUpdateUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /deployment][%d] deploymentUpdateUnauthorized  %+v", 401, o.Payload)
}

func (o *DeploymentUpdateUnauthorized) String() string {
	return fmt.Sprintf("[PUT /deployment][%d] deploymentUpdateUnauthorized  %+v", 401, o.Payload)
}

func (o *DeploymentUpdateUnauthorized) GetPayload() *models.Response {
	return o.Payload
}

func (o *DeploymentUpdateUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeploymentUpdateInternalServerError creates a DeploymentUpdateInternalServerError with default headers values
func NewDeploymentUpdateInternalServerError() *DeploymentUpdateInternalServerError {
	return &DeploymentUpdateInternalServerError{}
}

/*
DeploymentUpdateInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeploymentUpdateInternalServerError struct {
	Payload *models.Response
}

// IsSuccess returns true when this deployment update internal server error response has a 2xx status code
func (o *DeploymentUpdateInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this deployment update internal server error response has a 3xx status code
func (o *DeploymentUpdateInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this deployment update internal server error response has a 4xx status code
func (o *DeploymentUpdateInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this deployment update internal server error response has a 5xx status code
func (o *DeploymentUpdateInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this deployment update internal server error response a status code equal to that given
func (o *DeploymentUpdateInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the deployment update internal server error response
func (o *DeploymentUpdateInternalServerError) Code() int {
	return 500
}

func (o *DeploymentUpdateInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /deployment][%d] deploymentUpdateInternalServerError  %+v", 500, o.Payload)
}

func (o *DeploymentUpdateInternalServerError) String() string {
	return fmt.Sprintf("[PUT /deployment][%d] deploymentUpdateInternalServerError  %+v", 500, o.Payload)
}

func (o *DeploymentUpdateInternalServerError) GetPayload() *models.Response {
	return o.Payload
}

func (o *DeploymentUpdateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
