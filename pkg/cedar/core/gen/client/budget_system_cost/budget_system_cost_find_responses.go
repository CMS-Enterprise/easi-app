// Code generated by go-swagger; DO NOT EDIT.

package budget_system_cost

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cmsgov/easi-app/pkg/cedar/core/gen/models"
)

// BudgetSystemCostFindReader is a Reader for the BudgetSystemCostFind structure.
type BudgetSystemCostFindReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BudgetSystemCostFindReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewBudgetSystemCostFindOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewBudgetSystemCostFindBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewBudgetSystemCostFindUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewBudgetSystemCostFindInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /budgetSystemCost] budgetSystemCostFind", response, response.Code())
	}
}

// NewBudgetSystemCostFindOK creates a BudgetSystemCostFindOK with default headers values
func NewBudgetSystemCostFindOK() *BudgetSystemCostFindOK {
	return &BudgetSystemCostFindOK{}
}

/*
BudgetSystemCostFindOK describes a response with status code 200, with default header values.

OK
*/
type BudgetSystemCostFindOK struct {
	Payload *models.BudgetActualSystemCostResponse
}

// IsSuccess returns true when this budget system cost find o k response has a 2xx status code
func (o *BudgetSystemCostFindOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this budget system cost find o k response has a 3xx status code
func (o *BudgetSystemCostFindOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this budget system cost find o k response has a 4xx status code
func (o *BudgetSystemCostFindOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this budget system cost find o k response has a 5xx status code
func (o *BudgetSystemCostFindOK) IsServerError() bool {
	return false
}

// IsCode returns true when this budget system cost find o k response a status code equal to that given
func (o *BudgetSystemCostFindOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the budget system cost find o k response
func (o *BudgetSystemCostFindOK) Code() int {
	return 200
}

func (o *BudgetSystemCostFindOK) Error() string {
	return fmt.Sprintf("[GET /budgetSystemCost][%d] budgetSystemCostFindOK  %+v", 200, o.Payload)
}

func (o *BudgetSystemCostFindOK) String() string {
	return fmt.Sprintf("[GET /budgetSystemCost][%d] budgetSystemCostFindOK  %+v", 200, o.Payload)
}

func (o *BudgetSystemCostFindOK) GetPayload() *models.BudgetActualSystemCostResponse {
	return o.Payload
}

func (o *BudgetSystemCostFindOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.BudgetActualSystemCostResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBudgetSystemCostFindBadRequest creates a BudgetSystemCostFindBadRequest with default headers values
func NewBudgetSystemCostFindBadRequest() *BudgetSystemCostFindBadRequest {
	return &BudgetSystemCostFindBadRequest{}
}

/*
BudgetSystemCostFindBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type BudgetSystemCostFindBadRequest struct {
	Payload *models.Response
}

// IsSuccess returns true when this budget system cost find bad request response has a 2xx status code
func (o *BudgetSystemCostFindBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this budget system cost find bad request response has a 3xx status code
func (o *BudgetSystemCostFindBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this budget system cost find bad request response has a 4xx status code
func (o *BudgetSystemCostFindBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this budget system cost find bad request response has a 5xx status code
func (o *BudgetSystemCostFindBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this budget system cost find bad request response a status code equal to that given
func (o *BudgetSystemCostFindBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the budget system cost find bad request response
func (o *BudgetSystemCostFindBadRequest) Code() int {
	return 400
}

func (o *BudgetSystemCostFindBadRequest) Error() string {
	return fmt.Sprintf("[GET /budgetSystemCost][%d] budgetSystemCostFindBadRequest  %+v", 400, o.Payload)
}

func (o *BudgetSystemCostFindBadRequest) String() string {
	return fmt.Sprintf("[GET /budgetSystemCost][%d] budgetSystemCostFindBadRequest  %+v", 400, o.Payload)
}

func (o *BudgetSystemCostFindBadRequest) GetPayload() *models.Response {
	return o.Payload
}

func (o *BudgetSystemCostFindBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBudgetSystemCostFindUnauthorized creates a BudgetSystemCostFindUnauthorized with default headers values
func NewBudgetSystemCostFindUnauthorized() *BudgetSystemCostFindUnauthorized {
	return &BudgetSystemCostFindUnauthorized{}
}

/*
BudgetSystemCostFindUnauthorized describes a response with status code 401, with default header values.

Access Denied
*/
type BudgetSystemCostFindUnauthorized struct {
	Payload *models.Response
}

// IsSuccess returns true when this budget system cost find unauthorized response has a 2xx status code
func (o *BudgetSystemCostFindUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this budget system cost find unauthorized response has a 3xx status code
func (o *BudgetSystemCostFindUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this budget system cost find unauthorized response has a 4xx status code
func (o *BudgetSystemCostFindUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this budget system cost find unauthorized response has a 5xx status code
func (o *BudgetSystemCostFindUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this budget system cost find unauthorized response a status code equal to that given
func (o *BudgetSystemCostFindUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the budget system cost find unauthorized response
func (o *BudgetSystemCostFindUnauthorized) Code() int {
	return 401
}

func (o *BudgetSystemCostFindUnauthorized) Error() string {
	return fmt.Sprintf("[GET /budgetSystemCost][%d] budgetSystemCostFindUnauthorized  %+v", 401, o.Payload)
}

func (o *BudgetSystemCostFindUnauthorized) String() string {
	return fmt.Sprintf("[GET /budgetSystemCost][%d] budgetSystemCostFindUnauthorized  %+v", 401, o.Payload)
}

func (o *BudgetSystemCostFindUnauthorized) GetPayload() *models.Response {
	return o.Payload
}

func (o *BudgetSystemCostFindUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewBudgetSystemCostFindInternalServerError creates a BudgetSystemCostFindInternalServerError with default headers values
func NewBudgetSystemCostFindInternalServerError() *BudgetSystemCostFindInternalServerError {
	return &BudgetSystemCostFindInternalServerError{}
}

/*
BudgetSystemCostFindInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type BudgetSystemCostFindInternalServerError struct {
	Payload *models.Response
}

// IsSuccess returns true when this budget system cost find internal server error response has a 2xx status code
func (o *BudgetSystemCostFindInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this budget system cost find internal server error response has a 3xx status code
func (o *BudgetSystemCostFindInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this budget system cost find internal server error response has a 4xx status code
func (o *BudgetSystemCostFindInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this budget system cost find internal server error response has a 5xx status code
func (o *BudgetSystemCostFindInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this budget system cost find internal server error response a status code equal to that given
func (o *BudgetSystemCostFindInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the budget system cost find internal server error response
func (o *BudgetSystemCostFindInternalServerError) Code() int {
	return 500
}

func (o *BudgetSystemCostFindInternalServerError) Error() string {
	return fmt.Sprintf("[GET /budgetSystemCost][%d] budgetSystemCostFindInternalServerError  %+v", 500, o.Payload)
}

func (o *BudgetSystemCostFindInternalServerError) String() string {
	return fmt.Sprintf("[GET /budgetSystemCost][%d] budgetSystemCostFindInternalServerError  %+v", 500, o.Payload)
}

func (o *BudgetSystemCostFindInternalServerError) GetPayload() *models.Response {
	return o.Payload
}

func (o *BudgetSystemCostFindInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
