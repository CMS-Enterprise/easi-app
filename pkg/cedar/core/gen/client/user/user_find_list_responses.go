// Code generated by go-swagger; DO NOT EDIT.

package user

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/cms-enterprise/easi-app/pkg/cedar/core/gen/models"
)

// UserFindListReader is a Reader for the UserFindList structure.
type UserFindListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UserFindListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUserFindListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUserFindListBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewUserFindListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUserFindListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("[GET /user] userFindList", response, response.Code())
	}
}

// NewUserFindListOK creates a UserFindListOK with default headers values
func NewUserFindListOK() *UserFindListOK {
	return &UserFindListOK{}
}

/*
UserFindListOK describes a response with status code 200, with default header values.

OK
*/
type UserFindListOK struct {
	Payload *models.UserFindResponse
}

// IsSuccess returns true when this user find list o k response has a 2xx status code
func (o *UserFindListOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this user find list o k response has a 3xx status code
func (o *UserFindListOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user find list o k response has a 4xx status code
func (o *UserFindListOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this user find list o k response has a 5xx status code
func (o *UserFindListOK) IsServerError() bool {
	return false
}

// IsCode returns true when this user find list o k response a status code equal to that given
func (o *UserFindListOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the user find list o k response
func (o *UserFindListOK) Code() int {
	return 200
}

func (o *UserFindListOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /user][%d] userFindListOK %s", 200, payload)
}

func (o *UserFindListOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /user][%d] userFindListOK %s", 200, payload)
}

func (o *UserFindListOK) GetPayload() *models.UserFindResponse {
	return o.Payload
}

func (o *UserFindListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.UserFindResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserFindListBadRequest creates a UserFindListBadRequest with default headers values
func NewUserFindListBadRequest() *UserFindListBadRequest {
	return &UserFindListBadRequest{}
}

/*
UserFindListBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UserFindListBadRequest struct {
	Payload *models.Response
}

// IsSuccess returns true when this user find list bad request response has a 2xx status code
func (o *UserFindListBadRequest) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user find list bad request response has a 3xx status code
func (o *UserFindListBadRequest) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user find list bad request response has a 4xx status code
func (o *UserFindListBadRequest) IsClientError() bool {
	return true
}

// IsServerError returns true when this user find list bad request response has a 5xx status code
func (o *UserFindListBadRequest) IsServerError() bool {
	return false
}

// IsCode returns true when this user find list bad request response a status code equal to that given
func (o *UserFindListBadRequest) IsCode(code int) bool {
	return code == 400
}

// Code gets the status code for the user find list bad request response
func (o *UserFindListBadRequest) Code() int {
	return 400
}

func (o *UserFindListBadRequest) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /user][%d] userFindListBadRequest %s", 400, payload)
}

func (o *UserFindListBadRequest) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /user][%d] userFindListBadRequest %s", 400, payload)
}

func (o *UserFindListBadRequest) GetPayload() *models.Response {
	return o.Payload
}

func (o *UserFindListBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserFindListUnauthorized creates a UserFindListUnauthorized with default headers values
func NewUserFindListUnauthorized() *UserFindListUnauthorized {
	return &UserFindListUnauthorized{}
}

/*
UserFindListUnauthorized describes a response with status code 401, with default header values.

Access Denied
*/
type UserFindListUnauthorized struct {
	Payload *models.Response
}

// IsSuccess returns true when this user find list unauthorized response has a 2xx status code
func (o *UserFindListUnauthorized) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user find list unauthorized response has a 3xx status code
func (o *UserFindListUnauthorized) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user find list unauthorized response has a 4xx status code
func (o *UserFindListUnauthorized) IsClientError() bool {
	return true
}

// IsServerError returns true when this user find list unauthorized response has a 5xx status code
func (o *UserFindListUnauthorized) IsServerError() bool {
	return false
}

// IsCode returns true when this user find list unauthorized response a status code equal to that given
func (o *UserFindListUnauthorized) IsCode(code int) bool {
	return code == 401
}

// Code gets the status code for the user find list unauthorized response
func (o *UserFindListUnauthorized) Code() int {
	return 401
}

func (o *UserFindListUnauthorized) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /user][%d] userFindListUnauthorized %s", 401, payload)
}

func (o *UserFindListUnauthorized) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /user][%d] userFindListUnauthorized %s", 401, payload)
}

func (o *UserFindListUnauthorized) GetPayload() *models.Response {
	return o.Payload
}

func (o *UserFindListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUserFindListInternalServerError creates a UserFindListInternalServerError with default headers values
func NewUserFindListInternalServerError() *UserFindListInternalServerError {
	return &UserFindListInternalServerError{}
}

/*
UserFindListInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type UserFindListInternalServerError struct {
	Payload *models.Response
}

// IsSuccess returns true when this user find list internal server error response has a 2xx status code
func (o *UserFindListInternalServerError) IsSuccess() bool {
	return false
}

// IsRedirect returns true when this user find list internal server error response has a 3xx status code
func (o *UserFindListInternalServerError) IsRedirect() bool {
	return false
}

// IsClientError returns true when this user find list internal server error response has a 4xx status code
func (o *UserFindListInternalServerError) IsClientError() bool {
	return false
}

// IsServerError returns true when this user find list internal server error response has a 5xx status code
func (o *UserFindListInternalServerError) IsServerError() bool {
	return true
}

// IsCode returns true when this user find list internal server error response a status code equal to that given
func (o *UserFindListInternalServerError) IsCode(code int) bool {
	return code == 500
}

// Code gets the status code for the user find list internal server error response
func (o *UserFindListInternalServerError) Code() int {
	return 500
}

func (o *UserFindListInternalServerError) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /user][%d] userFindListInternalServerError %s", 500, payload)
}

func (o *UserFindListInternalServerError) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /user][%d] userFindListInternalServerError %s", 500, payload)
}

func (o *UserFindListInternalServerError) GetPayload() *models.Response {
	return o.Payload
}

func (o *UserFindListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Response)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
