{
  "openapi": "3.0.4",
  "info": {
    "title": "CEDAR Pinecone API",
    "description": "CMS Enterprise Data and Analytics Repository (CEDAR) API",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "https://"
    }
  ],
  "paths": {
    "/gateway/LDAP/1.0/authenticate": {
      "post": {
        "summary": "Authentication endpoint, accepts username/password or principal/credentials.",
        "description": "Authentication endpoint that validates user credentials and returns authentication status.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "Username (4 alphanumeric characters)",
                    "example": "user"
                  },
                  "principal": {
                    "type": "string",
                    "description": "Username (4 alphanumeric characters)",
                    "example": "user"
                  },
                  "password": {
                    "type": "string",
                    "description": "Password (8 characters)",
                    "example": "12345678"
                  },
                  "credentials": {
                    "type": "string",
                    "description": "Username (4 alphanumeric characters)",
                    "example": "user"
                  }
                },
                "required": [
                  "username",
                  "password"
                ]
              }
            }
          }
        },
        "tags": [
          "LDAP"
        ],
        "responses": {
          "200": {
            "description": "Authentication successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request â€“ validation or bind failure",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Account validation error: \"username\" is required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/gateway/CEDAR%20Core%20API/2.0.0/authorityToOperate": {
      "get": {
        "description": "Retrieve Authority to Operate (ATO) information. Can filter by system ID or search using various criteria including UUID, FISMA system acronym, TLC phase, PII/PHI flags, and disposition dates.",
        "parameters": [
          {
            "name": "systemId",
            "in": "query",
            "description": "System ID in UUID format (with curly braces)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "example": "{11111111-2222-3333-4444-555555555555}"
            }
          },
          {
            "name": "uuid",
            "in": "query",
            "description": "CMS UUID for the system",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "nullable": true,
              "example": "11111111-2222-3333-4444-555555555555"
            }
          },
          {
            "name": "fismaSystemAcronym",
            "in": "query",
            "description": "FISMA system acronym",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true,
              "example": "TEST"
            }
          },
          {
            "name": "tlcPhase",
            "in": "query",
            "description": "Technology Life Cycle phase",
            "required": false,
            "schema": {
              "type": "string",
              "nullable": true,
              "example": "Operations"
            }
          },
          {
            "name": "containsPersonallyIdentifiableInformation",
            "in": "query",
            "description": "Whether the system contains personally identifiable information",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "True",
                "TRUE",
                "false",
                "False",
                "FALSE"
              ],
              "nullable": true,
              "example": "true"
            }
          },
          {
            "name": "isProtectedHealthInformation",
            "in": "query",
            "description": "Whether the system contains protected health information",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "True",
                "TRUE",
                "false",
                "False",
                "FALSE"
              ],
              "nullable": true,
              "example": "false"
            }
          },
          {
            "name": "dispositionDateAfter",
            "in": "query",
            "description": "Filter for effective dates after this date (YYYY-MM-DD format)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "nullable": true,
              "example": "2023-01-01"
            }
          },
          {
            "name": "dispositionDateBefore",
            "in": "query",
            "description": "Filter for expiration dates before this date (YYYY-MM-DD format)",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "nullable": true,
              "example": "2024-12-31"
            }
          }
        ],
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Authority to Operate list retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "The number of ATO records returned.",
                      "example": 1
                    },
                    "AuthorityToOperateList": {
                      "type": "array",
                      "description": "List of Authority to Operate records.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cedarId": {
                            "type": "string",
                            "description": "Cedar system ID.",
                            "example": "{ED93B8CF-01C1-47f8-A726-0CB911C02B24}"
                          },
                          "uuid": {
                            "type": "string",
                            "description": "CMS UUID.",
                            "example": "6616E059-3A99-4808-B22D-E4E4C0DDCE72"
                          },
                          "fismaSystemName": {
                            "type": "string",
                            "description": "FISMA system name.",
                            "example": "Comprehensive Error Rate Testing - Statistical Contractor"
                          },
                          "fismaSystemAcronym": {
                            "type": "string",
                            "description": "FISMA system acronym.",
                            "example": "CERT-SC"
                          },
                          "actualDispositionDate": {
                            "type": "string",
                            "description": "Actual disposition date.",
                            "example": null,
                            "nullable": true
                          },
                          "countOfOpenPoams": {
                            "type": "integer",
                            "description": "Count of open POAMs.",
                            "example": 0
                          },
                          "countOfTotalNonPrivilegedUserPopulation": {
                            "type": "integer",
                            "description": "Count of non-privileged users.",
                            "example": 0
                          },
                          "countOfTotalPrivilegedUserPopulation": {
                            "type": "integer",
                            "description": "Count of privileged users.",
                            "example": 0
                          },
                          "containsPersonallyIdentifiableInformation": {
                            "type": "boolean",
                            "description": "Whether system contains PII.",
                            "example": true
                          },
                          "dateAuthorizationMemoSigned": {
                            "type": "string",
                            "description": "Date authorization memo was signed.",
                            "example": "2022-06-09"
                          },
                          "dateAuthorizationMemoExpires": {
                            "type": "string",
                            "description": "Date authorization memo expires.",
                            "example": "2025-06-09"
                          },
                          "eAuthenticationLevel": {
                            "type": "string",
                            "description": "E-Authentication level.",
                            "example": "N/A"
                          },
                          "fips199OverallImpactRating": {
                            "type": "integer",
                            "description": "FIPS 199 overall impact rating.",
                            "example": 2
                          },
                          "isAccessedByNonOrganizationalUsers": {
                            "type": "boolean",
                            "description": "Whether accessed by non-organizational users.",
                            "example": false
                          },
                          "isPiiLimitedToUserNameAndPass": {
                            "type": "boolean",
                            "description": "Whether PII is limited to username and password.",
                            "example": true
                          },
                          "isProtectedHealthInformation": {
                            "type": "boolean",
                            "description": "Whether system contains PHI.",
                            "example": false
                          },
                          "lastActScaDate": {
                            "type": "string",
                            "description": "Last ACT SCA date.",
                            "example": "2025-04-25"
                          },
                          "lastAssessmentDate": {
                            "type": "string",
                            "description": "Last assessment date.",
                            "example": "2025-04-25"
                          },
                          "lastContingencyPlanCompletionDate": {
                            "type": "string",
                            "description": "Last contingency plan completion date.",
                            "example": "2025-03-25"
                          },
                          "lastPenTestDate": {
                            "type": "string",
                            "description": "Last penetration test date.",
                            "example": "2022-05-09"
                          },
                          "piaCompletionDate": {
                            "type": "string",
                            "description": "PIA completion date.",
                            "example": "2019-11-08"
                          },
                          "primaryCyberRiskAdvisor": {
                            "type": "string",
                            "description": "Primary cyber risk advisor.",
                            "example": "Kooser,Clifford;Gnanapragasam,Sheela"
                          },
                          "privacySubjectMatterExpert": {
                            "type": "string",
                            "description": "Privacy subject matter expert.",
                            "example": null,
                            "nullable": true
                          },
                          "recoveryPointObjective": {
                            "type": "integer",
                            "description": "Recovery point objective.",
                            "example": 24
                          },
                          "recoveryTimeObjective": {
                            "type": "integer",
                            "description": "Recovery time objective.",
                            "example": 24
                          },
                          "systemOfRecordsNotice": {
                            "type": "array",
                            "description": "System of Records Notice.",
                            "items": {
                              "type": "string"
                            },
                            "example": [
                              "09-70-0591"
                            ]
                          },
                          "tlcPhase": {
                            "type": "string",
                            "description": "Technology Life Cycle phase.",
                            "example": "Operate"
                          },
                          "xlcPhase": {
                            "type": "string",
                            "description": "Extended Life Cycle phase.",
                            "example": null,
                            "nullable": true
                          },
                          "oaStatus": {
                            "type": "string",
                            "description": "Operating Authority status.",
                            "example": "Traditional"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDAR%20Core%20API/2.0.0/budget": {
      "post": {
        "description": "Add new budget(s) to the Alfabet system. This interface takes an array of one or more budgets.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "Budgets"
                ],
                "properties": {
                  "Budgets": {
                    "type": "array",
                    "description": "List of budgets to be added to CEDAR.",
                    "items": {
                      "type": "object",
                      "required": [
                        "projectId"
                      ],
                      "properties": {
                        "FiscalYear": {
                          "type": "string",
                          "description": "The fiscal year for the budget.",
                          "example": "2024",
                          "nullable": true
                        },
                        "FundingSource": {
                          "type": "string",
                          "description": "The source of funding for the budget.",
                          "example": "Federal Funds",
                          "nullable": true
                        },
                        "id": {
                          "type": "string",
                          "description": "OFM budget internal ID in system of record (optional on add).",
                          "example": "{11111111-2222-3333-4444-555555555555}",
                          "nullable": true
                        },
                        "Name": {
                          "type": "string",
                          "description": "Name of the budget item (optional).",
                          "example": "Project Alpha Budget",
                          "nullable": true
                        },
                        "projectId": {
                          "type": "string",
                          "description": "OFM budget project ID in system of record (required).",
                          "example": "{22222222-3333-4444-5555-666666666666}"
                        },
                        "systemId": {
                          "type": "string",
                          "description": "ID of the system which this budget funds (optional).",
                          "example": "{33333333-4444-5555-6666-777777777777}",
                          "nullable": true
                        },
                        "projectTitle": {
                          "type": "string",
                          "description": "Title of this project (optional).",
                          "example": "Annual Software License Renewal",
                          "nullable": true
                        },
                        "fundingId": {
                          "type": "string",
                          "description": "Cross-reference ID for relationship between budget project and application (optional).",
                          "example": "{44444444-5555-6666-7777-888888888888}",
                          "nullable": true
                        },
                        "funding": {
                          "type": "string",
                          "description": "Description of the allocation of this budget to the system in question (optional).",
                          "example": "Allocated for FY24 operations",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Successfully added budget(s).",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Successfully added 1 budget(s)."
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Retrieve a list of budgets based on query criteria listed in the parameters section. Passing a SystemId will cause the interface to return the budget(s) for just that system. Setting onlyIds to true will only return the id's, whereas if not set, the response will also include projectId, systemId, fundingId and funding. This interface has a limit of 5000 records",
        "description": "Retrieve a list of budgets based on query criteria listed in the parameters section. Passing a SystemId will cause the interface to return the budget(s) for just that system. Setting onlyIds to true will only return the id's, whereas if not set, the response will also include projectId, systemId, fundingId and funding. This interface has a limit of 5000 records",
        "parameters": [
          {
            "name": "systemId",
            "in": "query",
            "description": "ID of the system that the budget is associated with. Adding this parameter will only return the system matching the systemId",
            "required": false,
            "schema": {
              "type": "string",
              "example": "{550e8400-e29b-41d4-a716-446655440000}"
            }
          },
          {
            "name": "projectTitle",
            "in": "query",
            "description": "ID of the system that the budget is associated with. Adding this parameter will instruct the interface to only return the system matching the systemId.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Project"
            }
          },
          {
            "name": "projectId",
            "in": "query",
            "description": "Project Id string to search. Adding this parameter will instruct the interface to only return the system matching the projectId.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "onlyIds",
            "in": "query",
            "description": "Whether the call will return simply the IDs. If not set, the response will also include projectId, systemId, fundingId and funding.",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": "true"
            }
          },
          {
            "name": "idsOnly",
            "in": "query",
            "description": "Whether the call will return simply the IDs. If not set, the response will also include projectId, systemId, fundingId and funding.",
            "required": false,
            "schema": {
              "type": "boolean",
              "example": "true"
            }
          }
        ],
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "The number of budget records returned.",
                      "example": 2
                    },
                    "Budgets": {
                      "type": "array",
                      "description": "List of budget records.",
                      "items": {
                        "type": "object",
                        "required": [
                          "projectId"
                        ],
                        "properties": {
                          "FiscalYear": {
                            "type": "string",
                            "description": "The fiscal year for the budget.",
                            "example": "2024",
                            "nullable": true
                          },
                          "FundingSource": {
                            "type": "string",
                            "description": "The source of funding for the budget.",
                            "example": "Federal Funds",
                            "nullable": true
                          },
                          "Name": {
                            "type": "string",
                            "description": "Name of the budget item.",
                            "example": "Project Alpha Budget",
                            "nullable": true
                          },
                          "funding": {
                            "type": "string",
                            "description": "Description of the allocation of this budget to the system in question",
                            "example": "Most of this funding is directly and only for this system (over 80%)",
                            "nullable": true
                          },
                          "fundingId": {
                            "type": "string",
                            "description": "Cross-reference ID for relationship between budget project and application in system of record",
                            "example": "123-45-678",
                            "nullable": true
                          },
                          "id": {
                            "type": "string",
                            "description": "OFM budget internal ID in system of record",
                            "example": "589-329-0",
                            "nullable": true
                          },
                          "projectId": {
                            "type": "string",
                            "description": "OFM budget project ID in system of record",
                            "example": "000010"
                          },
                          "projectTitle": {
                            "type": "string",
                            "description": "Title of this project",
                            "example": "CMS Accountable Care Organizations",
                            "nullable": true
                          },
                          "systemId": {
                            "type": "string",
                            "description": "System which this budget funds",
                            "example": "123-45-678",
                            "nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Update one or more existing budgets for a system.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "Budgets"
                ],
                "properties": {
                  "Budgets": {
                    "type": "array",
                    "description": "List of budgets to update for a system.",
                    "items": {
                      "type": "object",
                      "required": [
                        "projectId",
                        "fundingId"
                      ],
                      "properties": {
                        "FiscalYear": {
                          "type": "string",
                          "description": "Fiscal year of the budget.",
                          "example": "2024",
                          "nullable": true
                        },
                        "FundingSource": {
                          "type": "string",
                          "description": "Source of the budget funding.",
                          "example": "Internal",
                          "nullable": true
                        },
                        "id": {
                          "type": "string",
                          "description": "OFM budget internal ID in system of record (optional).",
                          "example": "{11111111-2222-3333-4444-555555555555}",
                          "nullable": true
                        },
                        "Name": {
                          "type": "string",
                          "description": "Name of the budget.",
                          "example": "Project Alpha Budget",
                          "nullable": true
                        },
                        "projectId": {
                          "type": "string",
                          "description": "OFM budget project ID in system of record.",
                          "example": "{66666666-7777-8888-9999-000000000000}"
                        },
                        "systemId": {
                          "type": "string",
                          "description": "System which this budget funds (optional).",
                          "example": "{11111111-2222-3333-4444-555555555555}",
                          "nullable": true
                        },
                        "projectTitle": {
                          "type": "string",
                          "description": "Title of this project (optional).",
                          "example": "Alpha System Modernization",
                          "nullable": true
                        },
                        "fundingId": {
                          "type": "string",
                          "description": "Cross-reference ID for relationship between budget project and application in system of record.",
                          "example": "{12345678-ABCD-EFGH-1234-567890ABCDEF}"
                        },
                        "funding": {
                          "type": "string",
                          "description": "Description of the allocation of this budget to the system in question (optional).",
                          "example": "1000000",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Budgets updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "success"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing or invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. This includes cases where fundingId is missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDAR%20Core%20API/2.0.0/budget/list": {
      "delete": {
        "description": "Delete a list of budget items based on their ID(s).",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "An array of one or more budget IDs to delete. Can be provided as repeated parameters (id=ID1&id=ID2) or with bracket notation (id[]=ID1&id[]=ID2).",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "11111111-2222-3333-4444-555555555555"
              }
            }
          }
        ],
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Budget items deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Deleted 1 budget item(s)"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Occurs when the budget deletion operation fails.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDAR%20Core%20API/2.0.0/budgetSystemCostFind": {
      "get": {
        "description": "Retrieve budget system cost information by systemId. Returns actual system costs by fiscal year.",
        "parameters": [
          {
            "name": "systemId",
            "in": "query",
            "description": "ID of the system that the budget is associated with. Adding this parameter will instruct the interface to only return the system matching the systemId.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "{550e8400-e29b-41d4-a716-446655440000}"
            }
          }
        ],
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of budget cost records returned.",
                      "example": 2
                    },
                    "BudgetActualCost": {
                      "type": "array",
                      "description": "List of budget actual cost records.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ActualSystemCost": {
                            "type": "string",
                            "description": "The actual cost for the system in the given fiscal year.",
                            "example": "100000.0"
                          },
                          "FiscalYear": {
                            "type": "string",
                            "description": "The fiscal year for the cost data.",
                            "example": "2024"
                          },
                          "systemId": {
                            "type": "string",
                            "description": "System identifier.",
                            "example": "{550e8400-e29b-41d4-a716-446655440000}"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDAR%20Core%20API/2.0.0/component": {
      "post": {
        "description": "Adds a new software component and related vendor information to Alfabet.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "cmsTechnopediaComponent",
                  "category",
                  "vendor"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the software component.",
                    "example": "Example Component Name"
                  },
                  "cmsTechnopediaComponent": {
                    "type": "string",
                    "description": "The Technopedia component name for the software.",
                    "example": "Technopedia Component A"
                  },
                  "category": {
                    "type": "string",
                    "description": "The software category name (e.g., \"Operating System\").",
                    "example": "Operating System"
                  },
                  "cmsTechnopediaBuildVersion": {
                    "type": "string",
                    "description": "Build version from Technopedia.",
                    "example": "1.0.0.123",
                    "nullable": true
                  },
                  "cmsEndOfSupportDate": {
                    "type": "string",
                    "format": "date",
                    "description": "End of support date from Technopedia (YYYY-MM-DD).",
                    "example": "2025-12-31",
                    "nullable": true
                  },
                  "cmsTechnopediaEdition": {
                    "type": "string",
                    "description": "Edition from Technopedia (e.g., \"Enterprise\").",
                    "example": "Enterprise",
                    "nullable": true
                  },
                  "cmsTechnopediaLicensable": {
                    "type": "string",
                    "description": "Indicates if the software is licensable (e.g., \"Yes\").",
                    "example": "Yes",
                    "nullable": true
                  },
                  "cmsTechnopediaRelease": {
                    "type": "string",
                    "description": "Release version from Technopedia.",
                    "example": "Release 2024-Q1",
                    "nullable": true
                  },
                  "cmsTechnopediaReleaseId": {
                    "type": "string",
                    "description": "Release ID from Technopedia.",
                    "example": "REL-001",
                    "nullable": true
                  },
                  "cmsTechnopediaVersion": {
                    "type": "string",
                    "description": "Version from Technopedia (e.g., \"1.2\").",
                    "example": "1.2",
                    "nullable": true
                  },
                  "cmsTechnopediaVersionGroup": {
                    "type": "string",
                    "description": "Version group from Technopedia.",
                    "example": "Major Version 1",
                    "nullable": true
                  },
                  "description": {
                    "type": "string",
                    "description": "A description of the software component.",
                    "example": "This is a description of the example component.",
                    "nullable": true
                  },
                  "endDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The end date of the component (YYYY-MM-DD).",
                    "example": "2026-01-01",
                    "nullable": true
                  },
                  "startDate": {
                    "type": "string",
                    "format": "date",
                    "description": "The start date of the component (YYYY-MM-DD).",
                    "example": "2023-01-01",
                    "nullable": true
                  },
                  "vendor": {
                    "type": "string",
                    "description": "The name of the vendor providing the software.",
                    "example": "Example Corp"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "201": {
            "description": "Component and related vendor/category information added successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Component 'Example Component Name' added successfully."
                      ]
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "refstr": {
                          "type": "string",
                          "description": "The GUID of the newly created software product in Sparx.",
                          "example": "11111111-2222-3333-4444-555555555555"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing or invalid input parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDAR%20Core%20API/2.0.0/contract": {
      "post": {
        "description": "Add new contract deliverables to the system.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "Contracts"
                ],
                "properties": {
                  "Contracts": {
                    "type": "array",
                    "description": "List of contract objects to be added as deliverables.",
                    "items": {
                      "type": "object",
                      "required": [
                        "id",
                        "systemId"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the existing contract in Sparx that this deliverable relates to.",
                          "example": "{11111111-2222-3333-4444-555555555555}"
                        },
                        "ContractNumber": {
                          "type": "string",
                          "description": "The contract number.",
                          "example": "ABC-123",
                          "nullable": true
                        },
                        "IsDeliveryOrg": {
                          "type": "string",
                          "description": "Indicates if it is a delivery organization. Expected values: \"Yes\" or \"No\".",
                          "example": "Yes",
                          "nullable": true
                        },
                        "OrderNumber": {
                          "type": "string",
                          "description": "The order number associated with the contract.",
                          "example": "ORD-001",
                          "nullable": true
                        },
                        "ProductServiceDescription": {
                          "type": "string",
                          "description": "Description of the product or service provided.",
                          "example": "Software development services",
                          "nullable": true
                        },
                        "ProjectTitle": {
                          "type": "string",
                          "description": "Title of the project associated with the contract.",
                          "example": "Census Modernization Project",
                          "nullable": true
                        },
                        "ServiceProvided": {
                          "type": "string",
                          "description": "Detailed description of the service provided.",
                          "example": "Development of Census Data API",
                          "nullable": true
                        },
                        "parentAwardId": {
                          "type": "string",
                          "description": "The ID of the parent award/contract, if applicable.",
                          "example": "{66666666-7777-8888-9999-aaaaaaaaaaaa}",
                          "nullable": true
                        },
                        "contractADO": {
                          "type": "string",
                          "description": "Indicates if it is an ADO Parent Contract. Expected values: \"Yes\" or \"No\".",
                          "example": "No",
                          "nullable": true
                        },
                        "awardId": {
                          "type": "string",
                          "description": "The award ID or main contract identifier.",
                          "example": "AWARD-XYZ",
                          "nullable": true
                        },
                        "description": {
                          "type": "string",
                          "description": "General description of the contract.",
                          "example": "Annual maintenance contract for Census systems.",
                          "nullable": true
                        },
                        "systemId": {
                          "type": "string",
                          "description": "The ID of the system (architecture element) that this contract deliverable is associated with.",
                          "example": "{22222222-3333-4444-5555-666666666666}"
                        },
                        "POPStartDate": {
                          "type": "string",
                          "format": "date",
                          "description": "Period of Performance (POP) start date.",
                          "example": "2023-01-01",
                          "nullable": true
                        },
                        "POPEndDate": {
                          "type": "string",
                          "format": "date",
                          "description": "Period of Performance (POP) end date.",
                          "example": "2024-12-31",
                          "nullable": true
                        },
                        "contractName": {
                          "type": "string",
                          "description": "The name of the contract.",
                          "example": "Census API Development Contract",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Contract deliverables added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "description": "GUID of the newly created contract deliverable.",
                      "example": "{11111111-2222-3333-4444-555555555555}"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Update one or more contracts in the Alfabet system. This interface takes an array of Contract documents. If the input `budgetsOnly` is set to `false`, this interface will also update any associated Contract Deliverable records.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Contracts": {
                    "type": "array",
                    "description": "An array of contracts to be updated in Alfabet.",
                    "items": {
                      "type": "object",
                      "required": [
                        "id",
                        "parentAwardId",
                        "awardId"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The unique identifier of the contract.",
                          "example": "{11111111-2222-3333-4444-555555555555}"
                        },
                        "parentAwardId": {
                          "type": "string",
                          "description": "The parent contract number.",
                          "example": "{11111111-2222-3333-4444-555555555555}"
                        },
                        "contractDeliverableId": {
                          "type": "string",
                          "description": "The ID of the associated contract deliverable (optional).",
                          "example": "{11111111-2222-3333-4444-555555555555}",
                          "nullable": true
                        },
                        "ContractNumber": {
                          "type": "string",
                          "description": "The contract number (optional).",
                          "example": "CONTRACT-2023-001",
                          "nullable": true
                        },
                        "IsDeliveryOrg": {
                          "type": "string",
                          "description": "Indicates if it is a delivery organization (optional).",
                          "example": "Yes",
                          "nullable": true
                        },
                        "OrderNumber": {
                          "type": "string",
                          "description": "The order number (optional).",
                          "example": "ORDER-001",
                          "nullable": true
                        },
                        "ProductServiceDescription": {
                          "type": "string",
                          "description": "Description of the product or service (optional).",
                          "example": "Cloud Hosting Services",
                          "nullable": true
                        },
                        "ProjectTitle": {
                          "type": "string",
                          "description": "The title of the project (optional).",
                          "example": "Census Modernization",
                          "nullable": true
                        },
                        "ServiceProvided": {
                          "type": "string",
                          "description": "Description of the service provided (optional).",
                          "example": "Infrastructure Support",
                          "nullable": true
                        },
                        "contractADO": {
                          "type": "string",
                          "description": "Is ADO Parent Contract, Yes/No (optional).",
                          "example": "Yes",
                          "nullable": true
                        },
                        "awardId": {
                          "type": "string",
                          "description": "The award ID of the contract (required).",
                          "example": "AWARD-2023-001"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the contract (optional).",
                          "example": "Annual cloud services contract.",
                          "nullable": true
                        },
                        "systemId": {
                          "type": "string",
                          "description": "System which this contract funds (optional).",
                          "example": "{11111111-2222-3333-4444-555555555555}",
                          "nullable": true
                        },
                        "POPStartDate": {
                          "type": "string",
                          "format": "date",
                          "description": "Period of Performance Start Date (optional, YYYY-MM-DD).",
                          "example": "2023-01-01",
                          "nullable": true
                        },
                        "POPEndDate": {
                          "type": "string",
                          "format": "date",
                          "description": "Period of Performance End Date (optional, YYYY-MM-DD).",
                          "example": "2023-12-31",
                          "nullable": true
                        },
                        "contractName": {
                          "type": "string",
                          "description": "The name of the contract (optional).",
                          "example": "Cloud Services FY23",
                          "nullable": true
                        }
                      }
                    }
                  },
                  "budgetsOnly": {
                    "type": "boolean",
                    "description": "Whether only the budgets portion of the contract should be updated (true) or if set to false (or omitted), the Contract Deliverable records will also be updated.",
                    "example": false,
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Contracts updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Updated 1 contract(s)"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDAR%20Core%20API/2.0.0/contract/list": {
      "delete": {
        "description": "Delete a list of contracts based on their ID(s).",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "An array of one or more contract IDs to delete. Can be provided as repeated parameters (id=123&id=456) or with bracket notation (id[]=123&id[]=456).",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "11111111-2222-3333-4444-555555555555"
              }
            }
          }
        ],
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Contracts deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Deleted 1 contract(s)"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing or invalid parameters, or no objects found/partially deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieve a list of contracts based on various query criteria. Can filter by system ID, keyword search, and other contract attributes.",
        "parameters": [
          {
            "name": "systemId",
            "in": "query",
            "description": "ID of the system to get contracts for. Adding this parameter will filter contracts to only those associated with the specified system.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "{11111111-2222-3333-4444-555555555555}"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Keyword to search for in contract names. Performs a LIKE search on contract names.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "API Development"
            }
          },
          {
            "name": "POPStartDate",
            "in": "query",
            "description": "Filter contracts by Period of Performance start date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2023-01-01"
            }
          },
          {
            "name": "POPEndDate",
            "in": "query",
            "description": "Filter contracts by Period of Performance end date.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2024-12-31"
            }
          },
          {
            "name": "contractName",
            "in": "query",
            "description": "Filter contracts by exact contract name match.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Census API Development Contract"
            }
          }
        ],
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Contract list retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "The number of contract records returned (only present for non-keyword searches).",
                      "example": 2,
                      "nullable": true
                    },
                    "Contracts": {
                      "type": "array",
                      "description": "List of contract records.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Sparx Contract GUID.",
                            "example": "{11111111-2222-3333-4444-555555555555}"
                          },
                          "parentAwardId": {
                            "type": "string",
                            "description": "Contract Number (parent award ID).",
                            "example": "ABC-123"
                          },
                          "awardId": {
                            "type": "string",
                            "description": "Order Number (award ID).",
                            "example": "ORD-001"
                          },
                          "Cost": {
                            "type": "string",
                            "description": "Contract Amount.",
                            "example": "1000000"
                          },
                          "ContractName": {
                            "type": "string",
                            "description": "Contract Name.",
                            "example": "Census API Development Contract"
                          },
                          "POPStartDate": {
                            "type": "string",
                            "description": "Period of Performance start date.",
                            "example": "2023-01-01"
                          },
                          "POPEndDate": {
                            "type": "string",
                            "description": "Period of Performance end date.",
                            "example": "2024-12-31"
                          },
                          "OrderNumber": {
                            "type": "string",
                            "description": "Order Number.",
                            "example": "ORD-001"
                          },
                          "ProjectTitle": {
                            "type": "string",
                            "description": "Project Title.",
                            "example": "Census Modernization Project"
                          },
                          "ProductServiceDescription": {
                            "type": "string",
                            "description": "Product Service Description.",
                            "example": "Software development services"
                          },
                          "ServiceProvided": {
                            "type": "string",
                            "description": "Service Provided.",
                            "example": "Development of Census Data API"
                          },
                          "ContractNumber": {
                            "type": "string",
                            "description": "Contract Number.",
                            "example": "ABC-123"
                          },
                          "contractDeliverableId": {
                            "type": "string",
                            "description": "Connection GUID (contract deliverable ID).",
                            "example": "{22222222-3333-4444-5555-666666666666}"
                          },
                          "systemId": {
                            "type": "string",
                            "description": "Sparx System GUID.",
                            "example": "{33333333-4444-5555-6666-777777777777}"
                          },
                          "isDeliveryOrg": {
                            "type": "string",
                            "description": "Is Delivery Organization flag.",
                            "example": "Yes"
                          },
                          "contractADO": {
                            "type": "string",
                            "description": "Contract ADO flag (same as isDeliveryOrg).",
                            "example": "Yes"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDAR%20Core%20API/2.0.0/costType/list": {
      "get": {
        "description": "Retrieve a list of cost types. Returns the \"Internal Labor\" cost type as highlighted fields (id, name) and all other cost types in the CostTypes array. Both application and name parameters are required but not used in filtering.",
        "parameters": [
          {
            "name": "application",
            "in": "query",
            "description": "Application where the object or role exists.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "alfabet",
                "all"
              ],
              "example": "alfabet"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "The name of a specific group of cost types to filter by.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "IT"
            }
          }
        ],
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched cost types",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the \"Internal Labor\" cost type (if found)",
                      "example": "{11111111-2222-3333-4444-555555555555}",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the \"Internal Labor\" cost type (if found)",
                      "example": "Internal Labor",
                      "nullable": true
                    },
                    "CostTypes": {
                      "type": "array",
                      "description": "List of cost types (excluding the highlighted cost type).",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Cost type ID.",
                            "example": "{11111111-2222-3333-4444-555555555555}"
                          },
                          "name": {
                            "type": "string",
                            "description": "Cost type name.",
                            "example": "External Contractor"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDAR%20Core%20API/2.0.0/deployment": {
      "post": {
        "description": "Add one or more deployment records to the system.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "Deployments"
                ],
                "properties": {
                  "Deployments": {
                    "type": "array",
                    "description": "List of deployment records to add to the system.",
                    "items": {
                      "type": "object",
                      "required": [
                        "systemId",
                        "deploymentType",
                        "DataCenter"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Deployment ID (should not be provided for add operations)",
                          "example": "11111111-2222-3333-4444-555555555555",
                          "nullable": true
                        },
                        "deploymentType": {
                          "type": "string",
                          "description": "Type of deployment (e.g., \"Development\", \"Production\", \"Disaster Recovery\")",
                          "example": "Production"
                        },
                        "systemId": {
                          "type": "string",
                          "description": "The ID of the system this deployment belongs to (UUID format)",
                          "example": "{11111111-2222-3333-4444-555555555555}"
                        },
                        "status": {
                          "type": "string",
                          "description": "Current status of the deployment (e.g., \"Active\", \"Inactive\", \"Planned\")",
                          "example": "Active",
                          "nullable": true
                        },
                        "contractorName": {
                          "type": "string",
                          "description": "Name of the contractor associated with the deployment",
                          "example": "Example Contractor LLC",
                          "nullable": true
                        },
                        "hasProductionData": {
                          "type": "string",
                          "description": "Indicates if the deployment handles production data (\"Yes\" or \"No\")",
                          "example": "Yes",
                          "nullable": true
                        },
                        "isHotSite": {
                          "type": "string",
                          "description": "Indicates if the deployment is a hot site (\"Yes\" or \"No\")",
                          "example": "No",
                          "nullable": true
                        },
                        "replicatedSystemElements": {
                          "type": "array",
                          "description": "List of replicated system elements (e.g., \"Data\", \"System Software\", \"Application Software\")",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "Data",
                            "System Software"
                          ],
                          "nullable": true
                        },
                        "wanType": {
                          "type": "string",
                          "description": "Type of WAN connection (e.g., \"Internet\", \"MPLS\", \"WAN\")",
                          "example": "Internet",
                          "nullable": true
                        },
                        "wanTypeOther": {
                          "type": "string",
                          "description": "Other WAN type if \"Other\" is selected for wanType",
                          "example": "Custom VPN",
                          "nullable": true
                        },
                        "usersRequiringMFA": {
                          "type": "string",
                          "description": "Indicates if users require multi-factor authentication (\"Yes\" or \"No\")",
                          "example": "Yes",
                          "nullable": true
                        },
                        "otherSpecialUsers": {
                          "type": "string",
                          "description": "Description of other special users",
                          "example": "Emergency personnel with elevated access",
                          "nullable": true
                        },
                        "networkEncryption": {
                          "type": "string",
                          "description": "Indicates if network encryption is used (\"Yes\" or \"No\")",
                          "example": "Yes",
                          "nullable": true
                        },
                        "awsEnclave": {
                          "type": "string",
                          "description": "AWS enclave used for the deployment (e.g., \"Standard\", \"GovCloud\", \"C2S\")",
                          "example": "GovCloud",
                          "nullable": true
                        },
                        "awsEnclaveOther": {
                          "type": "string",
                          "description": "Other AWS enclave if \"Other\" is selected for awsEnclave",
                          "example": "Custom Secret Enclave",
                          "nullable": true
                        },
                        "DataCenter": {
                          "type": "object",
                          "description": "Details of the associated data center. Only the ID is used for insertion.",
                          "required": [
                            "id"
                          ],
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "ID of the data center (UUID format)",
                              "example": "{66666666-7777-8888-9999-000000000000}"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Deployment records added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing or invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a list of deployments based on their ID(s).",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "An array of one or more deployment IDs to delete. Can be provided as repeated parameters (id=123&id=456) or with bracket notation (id[]=123&id[]=456).",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "11111111-2222-3333-4444-555555555555"
              }
            }
          }
        ],
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "All deployments deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "2 deployment(s) successfully deleted"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error or partial deletion",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "One or more deployments could not be deleted. Please re-pull deployment list."
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Not found - no deployments could be found/deleted",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Deployment(s) could not be found"
                      ]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - database operation failed or system error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "SP_Delete_System_DataCenter_Full_Tbl_Reln failed."
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieve a list of deployments based on query criteria (systemId, state, status and deploymentType).",
        "parameters": [
          {
            "name": "systemId",
            "in": "query",
            "description": "ID of the system that the deployment is associated with.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "Deployment state.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "planned",
                "retired"
              ],
              "example": "active"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Deployment status.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "planned",
                "retired"
              ]
            }
          },
          {
            "name": "deploymentType",
            "in": "query",
            "description": "Deployment type.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "COOP DR",
                "Development",
                "Implementation",
                "Integration",
                "Production",
                "Testing",
                "Training",
                "Validation",
                "Other"
              ]
            }
          }
        ],
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "The number of deployment records returned.",
                      "example": 1
                    },
                    "Deployments": {
                      "type": "array",
                      "description": "List of deployment records.",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "systemId"
                        ],
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Deployment ID.",
                            "example": "351-1-0"
                          },
                          "name": {
                            "type": "string",
                            "description": "Deployment name.",
                            "example": "Accountable Care Organization Management System v.1.0 (COOP DR)"
                          },
                          "description": {
                            "type": "string",
                            "description": "Deployment description.",
                            "nullable": true
                          },
                          "deploymentType": {
                            "type": "string",
                            "description": "Type of deployment.",
                            "enum": [
                              "COOP DR",
                              "Development",
                              "Implementation",
                              "Integration",
                              "Production",
                              "Testing",
                              "Training",
                              "Validation",
                              "Other"
                            ],
                            "nullable": true
                          },
                          "systemId": {
                            "type": "string",
                            "description": "System ID.",
                            "example": "326-1-0"
                          },
                          "systemName": {
                            "type": "string",
                            "description": "System name.",
                            "example": "Health Insurance and Oversight System",
                            "nullable": true
                          },
                          "systemVersion": {
                            "type": "string",
                            "description": "System version.",
                            "example": "1",
                            "nullable": true
                          },
                          "status": {
                            "type": "string",
                            "description": "Deployment status.",
                            "enum": [
                              "approved",
                              "draft"
                            ],
                            "nullable": true
                          },
                          "state": {
                            "type": "string",
                            "description": "Deployment state.",
                            "enum": [
                              "active",
                              "planned",
                              "retired"
                            ],
                            "nullable": true
                          },
                          "startDate": {
                            "type": "string",
                            "format": "date",
                            "description": "Start date.",
                            "nullable": true
                          },
                          "endDate": {
                            "type": "string",
                            "format": "date",
                            "description": "End date.",
                            "nullable": true
                          },
                          "deploymentElementId": {
                            "type": "string",
                            "description": "Deployment element ID.",
                            "example": "69-1-0",
                            "nullable": true
                          },
                          "contractorName": {
                            "type": "string",
                            "description": "Contractor name.",
                            "example": "Acumen",
                            "nullable": true
                          },
                          "hasProductionData": {
                            "type": "string",
                            "description": "Has production data flag.",
                            "example": "yes",
                            "nullable": true
                          },
                          "isHotSite": {
                            "type": "string",
                            "description": "Is hot site flag.",
                            "example": "yes",
                            "nullable": true
                          },
                          "replicatedSystemElements": {
                            "type": "array",
                            "description": "Replicated system elements.",
                            "items": {
                              "type": "string",
                              "example": "System Server Software"
                            },
                            "nullable": true
                          },
                          "wanType": {
                            "type": "string",
                            "description": "WAN type.",
                            "example": "Internet - Contractor",
                            "nullable": true
                          },
                          "wanTypeOther": {
                            "type": "string",
                            "description": "Other WAN type.",
                            "example": "Internet - Contractor",
                            "nullable": true
                          },
                          "movingToCloud": {
                            "type": "string",
                            "description": "Moving to cloud flag.",
                            "example": "Yes",
                            "nullable": true
                          },
                          "movingToCloudDate": {
                            "type": "string",
                            "format": "date",
                            "description": "Moving to cloud date.",
                            "example": "2021-10-01",
                            "nullable": true
                          },
                          "usersRequiringMFA": {
                            "type": "string",
                            "description": "Users requiring MFA.",
                            "example": "End-users,Developers,System Administrators,Other Special Users",
                            "nullable": true
                          },
                          "otherSpecialUsers": {
                            "type": "string",
                            "description": "Other special users.",
                            "example": "end users",
                            "nullable": true
                          },
                          "networkEncryption": {
                            "type": "string",
                            "description": "Network encryption details.",
                            "example": "We do not encrypt network traffic leaving our system,We encrypt network traffic leaving our system to other systems on the CMS-internal network",
                            "nullable": true
                          },
                          "awsEnclave": {
                            "type": "string",
                            "description": "AWS enclave.",
                            "example": "AWS East",
                            "nullable": true
                          },
                          "awsEnclaveOther": {
                            "type": "string",
                            "description": "Other AWS enclave.",
                            "example": "AWS Pacific",
                            "nullable": true
                          },
                          "DataCenter": {
                            "type": "object",
                            "description": "Associated data center information.",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Data center ID.",
                                "example": "55-1-0"
                              },
                              "name": {
                                "type": "string",
                                "description": "Data center name.",
                                "example": "CMS Baltimore Data Center - EDC4"
                              },
                              "version": {
                                "type": "string",
                                "description": "Data center version.",
                                "example": "1"
                              },
                              "description": {
                                "type": "string",
                                "description": "Data center description.",
                                "nullable": true
                              },
                              "status": {
                                "type": "string",
                                "description": "Data center status.",
                                "enum": [
                                  "approved",
                                  "draft"
                                ],
                                "nullable": true
                              },
                              "state": {
                                "type": "string",
                                "description": "Data center state.",
                                "enum": [
                                  "active",
                                  "planned",
                                  "retired"
                                ],
                                "nullable": true
                              },
                              "startDate": {
                                "type": "string",
                                "format": "date",
                                "description": "Data center start date.",
                                "nullable": true
                              },
                              "endDate": {
                                "type": "string",
                                "format": "date",
                                "description": "Data center end date.",
                                "nullable": true
                              },
                              "address1": {
                                "type": "string",
                                "description": "Address line 1.",
                                "example": "123 main street",
                                "nullable": true
                              },
                              "address2": {
                                "type": "string",
                                "description": "Address line 2.",
                                "example": "suite 100",
                                "nullable": true
                              },
                              "city": {
                                "type": "string",
                                "description": "City.",
                                "example": "New York",
                                "nullable": true
                              },
                              "addressState": {
                                "type": "string",
                                "description": "State.",
                                "example": "NY",
                                "nullable": true
                              },
                              "zip": {
                                "type": "string",
                                "description": "ZIP code.",
                                "example": "10002",
                                "nullable": true
                              }
                            },
                            "nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Update a list of existing deployment records in Alfabet. This interface processes all deployments in the request and returns detailed results for both successful and failed updates. Individual deployment failures do not stop processing of other deployments in the batch. Supports batch processing of up to 100 deployments per request for optimal performance.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "Deployments"
                ],
                "properties": {
                  "Deployments": {
                    "type": "array",
                    "description": "List of deployments to update in Alfabet.",
                    "items": {
                      "type": "object",
                      "required": [
                        "id",
                        "systemId"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier of the deployment. Must be a valid GUID format enclosed in curly braces.",
                          "example": "{11111111-2222-3333-4444-555555555555}"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the deployment.",
                          "example": "Production Deployment",
                          "nullable": true
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the deployment.",
                          "example": "Primary production environment for critical system functions.",
                          "nullable": true
                        },
                        "deploymentType": {
                          "type": "string",
                          "description": "Type of deployment environment. Common values include \"Cloud\", \"On-Premise\", \"Hybrid\".",
                          "example": "Cloud",
                          "enum": [
                            "Cloud",
                            "On-Premise",
                            "Hybrid",
                            "Co-location",
                            "SaaS"
                          ],
                          "nullable": true
                        },
                        "systemId": {
                          "type": "string",
                          "description": "The ID of the system associated with this deployment. Must be a valid GUID format enclosed in curly braces.",
                          "example": "{11111111-2222-3333-4444-555555555555}"
                        },
                        "systemName": {
                          "type": "string",
                          "description": "Name of the system associated with this deployment.",
                          "example": "Census Core System",
                          "nullable": true
                        },
                        "systemVersion": {
                          "type": "string",
                          "description": "Version of the system associated with this deployment.",
                          "example": "2.0.0",
                          "nullable": true
                        },
                        "status": {
                          "type": "string",
                          "description": "Current operational status of the deployment.",
                          "example": "Active",
                          "enum": [
                            "Active",
                            "Inactive",
                            "Retired",
                            "Planned",
                            "Under Development"
                          ],
                          "nullable": true
                        },
                        "state": {
                          "type": "string",
                          "description": "Operational state of the deployment.",
                          "example": "Operational",
                          "enum": [
                            "Operational",
                            "Non-Operational",
                            "Maintenance",
                            "Testing"
                          ],
                          "nullable": true
                        },
                        "startDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date when the deployment started.",
                          "example": "2023-01-01T00:00:00Z",
                          "nullable": true
                        },
                        "endDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date when the deployment ended or is planned to end.",
                          "example": "2025-12-31T23:59:59Z",
                          "nullable": true
                        },
                        "deploymentElementId": {
                          "type": "string",
                          "description": "ID of the specific deployment element.",
                          "example": "{11111111-2222-3333-4444-555555555555}",
                          "nullable": true
                        },
                        "contractorName": {
                          "type": "string",
                          "description": "Name of the contractor responsible for this deployment.",
                          "example": "Acme Corp",
                          "nullable": true
                        },
                        "hasProductionData": {
                          "type": "string",
                          "description": "Indicates if the deployment handles production data. Must be \"true\" or \"false\" as a string.",
                          "example": "true",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "nullable": true
                        },
                        "isHotSite": {
                          "type": "string",
                          "description": "Indicates if the deployment is a hot site for disaster recovery. Must be \"true\" or \"false\" as a string.",
                          "example": "false",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "nullable": true
                        },
                        "replicatedSystemElements": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "List of replicated system elements (e.g., \"Data\", \"Application Software\", \"System Server Software\").",
                          "example": [
                            "Data",
                            "Application Software"
                          ],
                          "nullable": true
                        },
                        "wanType": {
                          "type": "string",
                          "description": "Type of WAN connection (e.g., \"VPN\", \"Dedicated Line\").",
                          "example": "VPN",
                          "nullable": true
                        },
                        "wanTypeOther": {
                          "type": "string",
                          "description": "Other WAN type, if applicable.",
                          "example": "Custom Network",
                          "nullable": true
                        },
                        "movingToCloud": {
                          "type": "string",
                          "description": "Indicates if the system is scheduled to move to cloud infrastructure. Must be \"true\" or \"false\" as a string.",
                          "example": "true",
                          "enum": [
                            "true",
                            "false"
                          ],
                          "nullable": true
                        },
                        "movingToCloudDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Planned date for moving to cloud.",
                          "example": "2024-06-30T00:00:00Z",
                          "nullable": true
                        },
                        "usersRequiringMFA": {
                          "type": "string",
                          "description": "Description of users requiring multi-factor authentication.",
                          "example": "All external users.",
                          "nullable": true
                        },
                        "otherSpecialUsers": {
                          "type": "string",
                          "description": "Description of other special user categories.",
                          "example": "Administrators.",
                          "nullable": true
                        },
                        "networkEncryption": {
                          "type": "string",
                          "description": "Description of network encryption in use.",
                          "example": "TLS 1.2",
                          "nullable": true
                        },
                        "awsEnclave": {
                          "type": "string",
                          "description": "AWS enclave type for cloud deployments.",
                          "example": "Private",
                          "enum": [
                            "Public",
                            "Private",
                            "GovCloud",
                            "Commercial"
                          ],
                          "nullable": true
                        },
                        "awsEnclaveOther": {
                          "type": "string",
                          "description": "Other AWS enclave type, if applicable.",
                          "example": "GovCloud",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Bulk deployment update completed successfully. Response includes detailed results for successful and failed updates, allowing clients to identify which deployments were processed successfully and which encountered errors.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "enum": [
                        "success"
                      ],
                      "description": "Operation result status",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Summary messages about the operation results",
                      "example": [
                        "Updated 2 deployment(s) successfully.",
                        "Processing completed with partial success - some deployments may have failed."
                      ]
                    },
                    "payload": {
                      "type": "object",
                      "properties": {
                        "successful": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Array of deployment IDs that were updated successfully",
                          "example": [
                            "{11111111-2222-3333-4444-555555555555}",
                            "{22222222-3333-4444-5555-666666666666}"
                          ]
                        },
                        "failed": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "ID of the deployment that failed to update"
                              },
                              "error": {
                                "type": "string",
                                "description": "Error message explaining why the update failed"
                              }
                            }
                          },
                          "description": "Array of deployments that failed to update with detailed error information to help with troubleshooting",
                          "example": [
                            {
                              "id": "{33333333-4444-5555-6666-777777777777}",
                              "error": "Deployment not found in database"
                            },
                            {
                              "id": "{44444444-5555-6666-7777-888888888888}",
                              "error": "Invalid system relationship"
                            }
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing or invalid parameters. This includes missing Deployments array, empty arrays, or deployments with missing required fields (id, systemId).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication credentials. Ensure proper authentication headers are included in the request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - Unexpected system error occurred during processing. This may indicate database connectivity issues or other system-level problems. If all deployments in the batch fail, a 500 status is returned instead of 200.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDAR%20Core%20API/2.0.0/domainModel/list": {
      "get": {
        "description": "Retrieve a list of domain model entries. The model parameter is required but not used in filtering.",
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "description": "The name of a specific model to return. Currently only \"CmsDataReferenceModel\" is supported.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "CmsDataReferenceModel",
                "CmsApplicationReferenceModel",
                "CmsBusinessReferenceModel"
              ],
              "example": "CmsDataReferenceModel"
            }
          }
        ],
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved domain model list.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Areas": {
                      "type": "array",
                      "description": "List of domain model areas.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Area ID.",
                            "example": "{11111111-2222-3333-4444-555555555555}"
                          },
                          "name": {
                            "type": "string",
                            "description": "Area name.",
                            "example": "Business Support"
                          },
                          "Categories": {
                            "type": "array",
                            "description": "Categories within the area.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Category ID.",
                                  "example": "{11111111-2222-3333-4444-555555555555}"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Category name.",
                                  "example": "Data Management"
                                }
                              }
                            },
                            "nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing or invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDAR%20Core%20API/2.0.0/domainModelLevel": {
      "get": {
        "description": "Retrieve the hierarchy levels associated with a specific domain reference model.",
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "description": "The name of specific reference model to return. A value from the GET /domainModelName endpoint, e.g., Architectural Domain, Business Capabilities, Information Domains.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Architectural Domain"
            }
          }
        ],
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Successful response with domain model levels",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 3,
                      "description": "Number of domain model levels returned"
                    },
                    "DomainModelLevels": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Level1",
                        "Level2",
                        "Level3"
                      ],
                      "description": "Array of domain model level names"
                    }
                  },
                  "required": [
                    "count",
                    "DomainModelLevels"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing or invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDAR%20Core%20API/2.0.0/domainModelName": {
      "get": {
        "description": "Retrieves a list of available domain reference models from a global configuration.",
        "parameters": [],
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved list of domain model names.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "format": "int32",
                      "example": 3,
                      "description": "The number of domain model names found."
                    },
                    "DomainModelNames": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Architectural Domain",
                        "Business Capabilities",
                        "Information Domains"
                      ],
                      "description": "An array of domain model names."
                    }
                  },
                  "required": [
                    "count",
                    "DomainModelNames"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDAR%20Core%20API/2.0.0/enumeration": {
      "get": {
        "description": "Retrieve a list of enumerations based on their names.",
        "parameters": [
          {
            "name": "application",
            "in": "query",
            "description": "The application identifier to retrieve enumerations for (e.g., \"all\", \"alfabet\").",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "alfabet"
              ],
              "example": "all"
            }
          },
          {
            "name": "names",
            "in": "query",
            "description": "An array of enumeration names to retrieve. Can be provided as repeated parameters (names=TypeA&names=TypeB) or with bracket notation (names[]=TypeA&names[]=TypeB).",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "SystemClassification"
              }
            }
          }
        ],
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched enumerations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "format": "int32",
                      "example": 1,
                      "description": "The number of enumerations returned."
                    },
                    "Enumerations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "example": "SystemClassification",
                            "description": "The name of the enumeration."
                          },
                          "caption": {
                            "type": "string",
                            "example": "System Classification",
                            "description": "A display caption for the enumeration.",
                            "nullable": true
                          },
                          "description": {
                            "type": "string",
                            "example": "Classification of the system based on its sensitivity.",
                            "nullable": true
                          },
                          "values": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "value": {
                                  "type": "string",
                                  "example": "L",
                                  "description": "The literal value of the enumeration entry."
                                },
                                "description": {
                                  "type": "string",
                                  "example": "Low Impact",
                                  "description": "A human-readable description for the enumeration value."
                                }
                              },
                              "required": [
                                "value",
                                "description"
                              ]
                            },
                            "description": "List of values for this enumeration."
                          }
                        },
                        "required": [
                          "name",
                          "values"
                        ]
                      },
                      "description": "Array of enumeration objects with their values."
                    }
                  },
                  "required": [
                    "count",
                    "Enumerations"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDAR%20Core%20API/exchange": {
      "post": {
        "description": "Add a list of data exchange records to the system.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "Exchanges"
                ],
                "properties": {
                  "Exchanges": {
                    "type": "array",
                    "description": "List of data exchange objects to add.",
                    "items": {
                      "type": "object",
                      "required": [
                        "exchangeName",
                        "fromOwnerId",
                        "toOwnerId"
                      ],
                      "properties": {
                        "exchangeId": {
                          "type": "string",
                          "description": "Unique identifier for the data exchange (should not be provided for add operations).",
                          "example": "11111111-2222-3333-4444-555555555555",
                          "nullable": true
                        },
                        "exchangeName": {
                          "type": "string",
                          "description": "Name of the data exchange.",
                          "example": "SystemA-to-SystemB 1.0"
                        },
                        "exchangeDescription": {
                          "type": "string",
                          "description": "Description of the data exchange.",
                          "example": "Data exchange between System A and System B.",
                          "nullable": true
                        },
                        "exchangeVersion": {
                          "type": "string",
                          "description": "Version of the data exchange.",
                          "example": "1.0",
                          "nullable": true
                        },
                        "exchangeState": {
                          "type": "string",
                          "description": "Current state of the data exchange (e.g., \"Active\", \"Retired\").",
                          "example": "Active",
                          "nullable": true
                        },
                        "exchangeStartDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Start date of the data exchange.",
                          "example": "2023-01-01T00:00:00Z",
                          "nullable": true
                        },
                        "exchangeEndDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "End date of the data exchange.",
                          "example": "2024-12-31T00:00:00Z",
                          "nullable": true
                        },
                        "exchangeRetiredDate": {
                          "type": "string",
                          "format": "date",
                          "description": "Date the data exchange was retired (MM/dd/yyyy format).",
                          "example": "01/15/2024",
                          "nullable": true
                        },
                        "fromOwnerId": {
                          "type": "string",
                          "description": "ID of the source system or owner.",
                          "example": "{11111111-2222-3333-4444-555555555555}"
                        },
                        "fromOwnerName": {
                          "type": "string",
                          "description": "Name of the source system or owner.",
                          "example": "System A",
                          "nullable": true
                        },
                        "fromOwnerType": {
                          "type": "string",
                          "description": "Type of the source owner (e.g., \"System\").",
                          "example": "System",
                          "nullable": true
                        },
                        "toOwnerId": {
                          "type": "string",
                          "description": "ID of the target system or owner.",
                          "example": "{66666666-7777-8888-9999-000000000000}"
                        },
                        "toOwnerName": {
                          "type": "string",
                          "description": "Name of the target system or owner.",
                          "example": "System B",
                          "nullable": true
                        },
                        "toOwnerType": {
                          "type": "string",
                          "description": "Type of the target owner (e.g., \"System\").",
                          "example": "System",
                          "nullable": true
                        },
                        "connectionFrequency": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Frequency of data connection (e.g., \"Daily\", \"Weekly\").",
                          "example": [
                            "Daily",
                            "Weekly"
                          ],
                          "nullable": true
                        },
                        "dataExchangeAgreement": {
                          "type": "string",
                          "description": "Data exchange agreement details.",
                          "example": "MOU-2023-001",
                          "nullable": true
                        },
                        "containsBeneficiaryAddress": {
                          "type": "boolean",
                          "description": "Indicates if the exchange contains beneficiary address data.",
                          "example": false,
                          "nullable": true
                        },
                        "businessPurposeOfAddress": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Business purpose(s) for address data.",
                          "example": [
                            "Billing",
                            "Mailing"
                          ],
                          "nullable": true
                        },
                        "isAddressEditable": {
                          "type": "boolean",
                          "description": "Indicates if address data is editable.",
                          "example": true,
                          "nullable": true
                        },
                        "containsPii": {
                          "type": "boolean",
                          "description": "Indicates if the exchange contains PII (Personally Identifiable Information).",
                          "example": true,
                          "nullable": true
                        },
                        "containsPhi": {
                          "type": "boolean",
                          "description": "Indicates if the exchange contains PHI (Protected Health Information).",
                          "example": true,
                          "nullable": true
                        },
                        "containsBankingData": {
                          "type": "boolean",
                          "description": "Indicates if the exchange contains banking data.",
                          "example": false,
                          "nullable": true
                        },
                        "isBeneficiaryMailingFile": {
                          "type": "boolean",
                          "description": "Indicates if it is a beneficiary mailing file.",
                          "example": false,
                          "nullable": true
                        },
                        "sharedViaApi": {
                          "type": "boolean",
                          "description": "Indicates if data is shared via API.",
                          "example": true,
                          "nullable": true
                        },
                        "apiOwnership": {
                          "type": "string",
                          "description": "Ownership of the API (e.g., \"Internal\", \"External\").",
                          "example": "Internal",
                          "nullable": true
                        },
                        "typeOfData": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "ID of the type of data.",
                                "example": "{22222222-3333-4444-5555-666666666666}"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the type of data.",
                                "example": "Claim Data"
                              }
                            }
                          },
                          "description": "List of data types exchanged.",
                          "nullable": true
                        },
                        "numOfRecords": {
                          "type": "string",
                          "description": "Number of records exchanged (e.g., \"1000\", \"50000+\").",
                          "example": "10000",
                          "nullable": true
                        },
                        "dataFormat": {
                          "type": "string",
                          "description": "Format of the data exchanged (e.g., \"JSON\", \"XML\", \"CSV\").",
                          "example": "JSON",
                          "nullable": true
                        },
                        "dataFormatOther": {
                          "type": "string",
                          "description": "Other data format if not listed.",
                          "example": "Proprietary Binary",
                          "nullable": true
                        },
                        "exchangeContainsCUI": {
                          "type": "boolean",
                          "description": "Indicates if the exchange contains CUI (Controlled Unclassified Information).",
                          "example": true,
                          "nullable": true
                        },
                        "exchangeCUIDescription": {
                          "type": "string",
                          "description": "Description of the CUI.",
                          "example": "Contains financial records of employees.",
                          "nullable": true
                        },
                        "exchangeCUIType": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Type(s) of CUI involved.",
                          "example": [
                            "Financial",
                            "Privacy"
                          ],
                          "nullable": true
                        },
                        "exchangeConnectionAuthenticated": {
                          "type": "boolean",
                          "description": "Indicates if the exchange connection is authenticated.",
                          "example": true,
                          "nullable": true
                        },
                        "exchangeNetworkProtocol": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Network protocol(s) used for exchange (e.g., \"HTTPS\", \"SFTP\").",
                          "example": [
                            "HTTPS",
                            "SFTP"
                          ],
                          "nullable": true
                        },
                        "exchangeNetworkProtocolOther": {
                          "type": "string",
                          "description": "Other network protocol if not listed.",
                          "example": "Custom TCP",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Data exchange records added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "{GUID-1}",
                        "{GUID-2}"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing or invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDAR%20Core%20API/2.0.0/exchange/{id}": {
      "get": {
        "description": "Exchange by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of exchange to retrieve",
            "schema": {
              "type": "string",
              "example": "550e8400-e29b-41d4-a716-446655440000"
            }
          }
        ],
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved exchange by id",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "exchangeId": {
                      "type": "string",
                      "example": "139-1178-0",
                      "description": "Unique identifier for the exchange"
                    },
                    "exchangeName": {
                      "type": "string",
                      "example": "Acumen Web Portals 1.0 >> Drug Data Processing System 1.0",
                      "description": "Name of the data exchange"
                    },
                    "exchangeVersion": {
                      "type": "string",
                      "example": "1",
                      "description": "Version of the exchange"
                    },
                    "exchangeState": {
                      "type": "string",
                      "example": "Active",
                      "description": "Current state of the exchange"
                    },
                    "exchangeStartDate": {
                      "type": "string",
                      "format": "date",
                      "description": "Start date of the exchange",
                      "nullable": true
                    },
                    "exchangeEndDate": {
                      "type": "string",
                      "format": "date",
                      "description": "End date of the exchange",
                      "nullable": true
                    },
                    "exchangeRetiredDate": {
                      "type": "string",
                      "format": "date",
                      "description": "Retirement date of the exchange",
                      "nullable": true
                    },
                    "fromOwnerId": {
                      "type": "string",
                      "example": "326-762-0",
                      "description": "ID of the sender/source system"
                    },
                    "fromOwnerName": {
                      "type": "string",
                      "example": "Account Management",
                      "description": "Name of the sender/source system"
                    },
                    "fromOwnerType": {
                      "type": "string",
                      "enum": [
                        "application",
                        "organization"
                      ],
                      "description": "Type of the sender/source system"
                    },
                    "toOwnerId": {
                      "type": "string",
                      "example": "326-762-0",
                      "description": "ID of the receiver/destination system"
                    },
                    "toOwnerName": {
                      "type": "string",
                      "example": "Account Management",
                      "description": "Name of the receiver/destination system"
                    },
                    "toOwnerType": {
                      "type": "string",
                      "enum": [
                        "application",
                        "organization"
                      ],
                      "description": "Type of the receiver/destination system"
                    },
                    "connectionFrequency": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Frequency of data exchange connections"
                    },
                    "businessPurposeOfAddress": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "Customer Service"
                      },
                      "description": "Business purposes for address data usage"
                    },
                    "typeOfData": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Types of data being exchanged"
                    },
                    "exchangeContainsCUI": {
                      "type": "boolean",
                      "nullable": true,
                      "description": "Whether the exchange contains Controlled Unclassified Information"
                    },
                    "exchangeCUIDescription": {
                      "type": "string",
                      "description": "Description of CUI in the exchange",
                      "nullable": true
                    },
                    "exchangeNetworkProtocol": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Network protocols used for the exchange"
                    },
                    "exchangeNetworkProtocolOther": {
                      "type": "string",
                      "description": "Other network protocol if not in standard list",
                      "nullable": true
                    }
                  },
                  "required": [
                    "exchangeId",
                    "exchangeName",
                    "fromOwnerId",
                    "fromOwnerName",
                    "fromOwnerType",
                    "toOwnerId",
                    "toOwnerName",
                    "toOwnerType",
                    "connectionFrequency",
                    "businessPurposeOfAddress",
                    "typeOfData",
                    "exchangeNetworkProtocol"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDAR%20Core%20API/2.0.0/exchange": {
      "get": {
        "description": "Exchange Find List",
        "parameters": [
          {
            "name": "systemId",
            "in": "query",
            "required": true,
            "description": "ID of the system that the data exchange is associated with",
            "schema": {
              "type": "string",
              "example": "550e8400-e29b-41d4-a716-446655440000"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "required": true,
            "description": "The direction of the data exchange, either sender, receiver, or both",
            "schema": {
              "type": "string",
              "enum": [
                "sender",
                "receiver",
                "both"
              ],
              "example": "sender"
            }
          },
          {
            "name": "version",
            "in": "query",
            "required": true,
            "description": "Version of the data exchanges to be retrieved",
            "schema": {
              "type": "string",
              "example": "2.0"
            }
          }
        ],
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved exchange list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of exchanges returned"
                    },
                    "Exchanges": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "exchangeId": {
                            "type": "string",
                            "example": "139-1178-0",
                            "description": "Unique identifier for the exchange"
                          },
                          "exchangeName": {
                            "type": "string",
                            "example": "Acumen Web Portals 1.0 >> Drug Data Processing System 1.0",
                            "description": "Name of the data exchange"
                          },
                          "exchangeDescription": {
                            "type": "string",
                            "example": "Reference data on vendors acting on behalf of insurance issuers",
                            "description": "Description of the data exchange",
                            "nullable": true
                          },
                          "exchangeVersion": {
                            "type": "string",
                            "example": "1",
                            "description": "Version of the exchange",
                            "nullable": true
                          },
                          "exchangeState": {
                            "type": "string",
                            "example": "Active",
                            "description": "Current state of the exchange",
                            "nullable": true
                          },
                          "exchangeStartDate": {
                            "type": "string",
                            "format": "date",
                            "description": "Start date of the exchange",
                            "nullable": true
                          },
                          "exchangeEndDate": {
                            "type": "string",
                            "format": "date",
                            "description": "End date of the exchange",
                            "nullable": true
                          },
                          "exchangeRetiredDate": {
                            "type": "string",
                            "format": "date",
                            "description": "Retirement date of the exchange",
                            "nullable": true
                          },
                          "fromOwnerId": {
                            "type": "string",
                            "example": "326-762-0",
                            "description": "ID of the sender/source system",
                            "nullable": true
                          },
                          "fromOwnerName": {
                            "type": "string",
                            "example": "Account Management",
                            "description": "Name of the sender/source system",
                            "nullable": true
                          },
                          "fromOwnerType": {
                            "type": "string",
                            "enum": [
                              "application",
                              "organization"
                            ],
                            "description": "Type of the sender/source system",
                            "nullable": true
                          },
                          "toOwnerId": {
                            "type": "string",
                            "example": "326-762-0",
                            "description": "ID of the receiver/destination system",
                            "nullable": true
                          },
                          "toOwnerName": {
                            "type": "string",
                            "example": "Account Management",
                            "description": "Name of the receiver/destination system",
                            "nullable": true
                          },
                          "toOwnerType": {
                            "type": "string",
                            "enum": [
                              "application",
                              "organization"
                            ],
                            "description": "Type of the receiver/destination system",
                            "nullable": true
                          },
                          "connectionFrequency": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Frequency of data exchange connections"
                          },
                          "dataExchangeAgreement": {
                            "type": "string",
                            "description": "Data exchange agreement information",
                            "nullable": true
                          },
                          "containsBeneficiaryAddress": {
                            "type": "boolean",
                            "nullable": true,
                            "description": "Whether the exchange contains beneficiary address data"
                          },
                          "businessPurposeOfAddress": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "example": "Customer Service"
                            },
                            "description": "Business purposes for address data usage"
                          },
                          "isAddressEditable": {
                            "type": "boolean",
                            "nullable": true,
                            "description": "Whether address data is editable"
                          },
                          "containsPii": {
                            "type": "boolean",
                            "nullable": true,
                            "description": "Whether the exchange contains Personally Identifiable Information"
                          },
                          "containsPhi": {
                            "type": "boolean",
                            "nullable": true,
                            "description": "Whether the exchange contains Protected Health Information"
                          },
                          "isBeneficiaryMailingFile": {
                            "type": "boolean",
                            "nullable": true,
                            "description": "Whether this supports mailing to beneficiaries"
                          },
                          "containsBankingData": {
                            "type": "boolean",
                            "nullable": true,
                            "description": "Whether the exchange includes banking data"
                          },
                          "sharedViaApi": {
                            "type": "boolean",
                            "nullable": true,
                            "description": "Whether data is shared via API"
                          },
                          "apiOwnership": {
                            "type": "string",
                            "description": "API ownership information",
                            "nullable": true
                          },
                          "typeOfData": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "Type of data ID"
                                },
                                "name": {
                                  "type": "string",
                                  "nullable": true,
                                  "description": "Type of data name"
                                }
                              }
                            },
                            "description": "Types of data being exchanged"
                          },
                          "numOfRecords": {
                            "type": "string",
                            "example": "100,000 â€“ 1 Million",
                            "description": "Number of records exchanged",
                            "nullable": true
                          },
                          "dataFormat": {
                            "type": "string",
                            "description": "Data format used in the exchange",
                            "nullable": true
                          },
                          "dataFormatOther": {
                            "type": "string",
                            "description": "Other data format if not in standard list",
                            "nullable": true
                          },
                          "exchangeContainsCUI": {
                            "type": "boolean",
                            "nullable": true,
                            "description": "Whether the exchange contains Controlled Unclassified Information"
                          },
                          "exchangeCUIDescription": {
                            "type": "string",
                            "description": "Description of CUI in the exchange",
                            "nullable": true
                          },
                          "exchangeCUIType": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Types of CUI in the exchange"
                          },
                          "exchangeConnectionAuthenticated": {
                            "type": "boolean",
                            "nullable": true,
                            "description": "Whether the exchange connection is authenticated"
                          },
                          "exchangeNetworkProtocol": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Network protocols used for the exchange"
                          },
                          "exchangeNetworkProtocolOther": {
                            "type": "string",
                            "description": "Other network protocol if not in standard list",
                            "nullable": true
                          }
                        },
                        "required": [
                          "connectionFrequency",
                          "businessPurposeOfAddress",
                          "typeOfData",
                          "exchangeCUIType",
                          "exchangeNetworkProtocol"
                        ]
                      },
                      "description": "Array of exchange objects"
                    }
                  },
                  "required": [
                    "count",
                    "Exchanges"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Update a list of data exchange records.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Exchanges": {
                    "type": "array",
                    "description": "List of data exchanges to update",
                    "items": {
                      "type": "object",
                      "required": [
                        "exchangeId"
                      ],
                      "properties": {
                        "exchangeId": {
                          "type": "string",
                          "description": "The unique identifier for the data exchange record (GUID)",
                          "example": "{11111111-2222-3333-4444-555555555555}"
                        },
                        "exchangeName": {
                          "type": "string",
                          "description": "Name of the data exchange",
                          "example": "SystemA - SystemB",
                          "nullable": true
                        },
                        "exchangeDescription": {
                          "type": "string",
                          "description": "Description of the data exchange",
                          "example": "Exchange data between System A and System B for reporting.",
                          "nullable": true
                        },
                        "exchangeVersion": {
                          "type": "string",
                          "description": "Version of the data exchange",
                          "example": "1.0",
                          "nullable": true
                        },
                        "exchangeState": {
                          "type": "string",
                          "description": "State of the data exchange (e.g., Active, Retired)",
                          "example": "Active",
                          "nullable": true
                        },
                        "exchangeStartDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Start date of the data exchange (MM/dd/yyyy)",
                          "example": "01/01/2023",
                          "nullable": true
                        },
                        "exchangeEndDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "End date of the data exchange (MM/dd/yyyy)",
                          "example": "12/31/2024",
                          "nullable": true
                        },
                        "exchangeRetiredDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date the data exchange was retired (MM/dd/yyyy)",
                          "example": "06/30/2024",
                          "nullable": true
                        },
                        "fromOwnerId": {
                          "type": "string",
                          "description": "ID of the source system owner",
                          "example": "{00000000-0000-0000-0000-000000000001}",
                          "nullable": true
                        },
                        "fromOwnerName": {
                          "type": "string",
                          "description": "Name of the source system owner",
                          "example": "Source System Team",
                          "nullable": true
                        },
                        "fromOwnerType": {
                          "type": "string",
                          "description": "Type of the source system owner (e.g., System, Organization)",
                          "example": "System",
                          "nullable": true
                        },
                        "toOwnerId": {
                          "type": "string",
                          "description": "ID of the target system owner",
                          "example": "{00000000-0000-0000-0000-000000000002}",
                          "nullable": true
                        },
                        "toOwnerName": {
                          "type": "string",
                          "description": "Name of the target system owner",
                          "example": "Target System Team",
                          "nullable": true
                        },
                        "toOwnerType": {
                          "type": "string",
                          "description": "Type of the target system owner (e.g., System, Organization)",
                          "example": "System",
                          "nullable": true
                        },
                        "connectionFrequency": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Frequency of data connection (e.g., Daily, Weekly)",
                          "example": [
                            "Daily",
                            "Weekly"
                          ],
                          "nullable": true
                        },
                        "dataExchangeAgreement": {
                          "type": "string",
                          "description": "Details of data exchange agreement",
                          "example": "MOU signed on 01/01/2023",
                          "nullable": true
                        },
                        "containsBeneficiaryAddress": {
                          "type": "boolean",
                          "description": "Indicates if exchange contains beneficiary address",
                          "example": true,
                          "nullable": true
                        },
                        "businessPurposeOfAddress": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Business purpose for address data",
                          "example": [
                            "Billing",
                            "Correspondence"
                          ],
                          "nullable": true
                        },
                        "isAddressEditable": {
                          "type": "boolean",
                          "description": "Indicates if address data is editable",
                          "example": false,
                          "nullable": true
                        },
                        "containsPii": {
                          "type": "boolean",
                          "description": "Indicates if exchange contains PII",
                          "example": true,
                          "nullable": true
                        },
                        "containsPhi": {
                          "type": "boolean",
                          "description": "Indicates if exchange contains PHI",
                          "example": true,
                          "nullable": true
                        },
                        "containsBankingData": {
                          "type": "boolean",
                          "description": "Indicates if exchange contains banking data",
                          "example": false,
                          "nullable": true
                        },
                        "isBeneficiaryMailingFile": {
                          "type": "boolean",
                          "description": "Indicates if it is a beneficiary mailing file",
                          "example": true,
                          "nullable": true
                        },
                        "sharedViaApi": {
                          "type": "boolean",
                          "description": "Indicates if data is shared via API",
                          "example": true,
                          "nullable": true
                        },
                        "apiOwnership": {
                          "type": "string",
                          "description": "Ownership details if shared via API",
                          "example": "Internal",
                          "nullable": true
                        },
                        "typeOfData": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "{11111111-2222-3333-4444-555555555555}",
                                "nullable": true
                              },
                              "name": {
                                "type": "string",
                                "example": "Claim Data",
                                "nullable": true
                              }
                            }
                          },
                          "description": "Types of data exchanged",
                          "nullable": true
                        },
                        "numOfRecords": {
                          "type": "string",
                          "description": "Number of records exchanged",
                          "example": "1000000+",
                          "nullable": true
                        },
                        "dataFormat": {
                          "type": "string",
                          "description": "Format of the data (e.g., XML, JSON, CSV)",
                          "example": "JSON",
                          "nullable": true
                        },
                        "dataFormatOther": {
                          "type": "string",
                          "description": "Other data format if not listed",
                          "example": "Proprietary Binary",
                          "nullable": true
                        },
                        "exchangeContainsCUI": {
                          "type": "boolean",
                          "description": "Indicates if exchange contains CUI",
                          "example": true,
                          "nullable": true
                        },
                        "exchangeCUIDescription": {
                          "type": "string",
                          "description": "Description of CUI data",
                          "example": "Sensitive program data",
                          "nullable": true
                        },
                        "exchangeCUIType": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Type of CUI data",
                          "example": [
                            "Privacy",
                            "Procurement"
                          ],
                          "nullable": true
                        },
                        "exchangeConnectionAuthenticated": {
                          "type": "boolean",
                          "description": "Indicates if exchange connection is authenticated",
                          "example": true,
                          "nullable": true
                        },
                        "exchangeNetworkProtocol": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "Network protocols used for exchange (e.g., SFTP, HTTPS)",
                          "example": [
                            "HTTPS",
                            "SFTP"
                          ],
                          "nullable": true
                        },
                        "exchangeNetworkProtocolOther": {
                          "type": "string",
                          "description": "Other network protocol if not listed",
                          "example": "Custom Protocol",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Exchange records updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Updated 1 exchange(s)"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input or missing required fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDAR%20Core%20API/2.0.0/organization": {
      "get": {
        "description": "Retrieve a list of organizations based on various criteria. If no criteria are provided, an empty list will be returned.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The GUID of a specific organization to find. If provided, returns the organization and its children.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "{11111111-2222-3333-4444-555555555555}"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "The exact name of a specific organization to find. If provided, returns the organization and its children.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Office of Management and Budget (OMB)"
            }
          },
          {
            "name": "acronym",
            "in": "query",
            "description": "The acronym of a specific organization to find. If provided, returns the organization and its children.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "OMB"
            }
          }
        ],
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Successful response with a list of organizations.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 5,
                      "description": "Number of organizations returned (only present when no filter is provided or no match found)",
                      "nullable": true
                    },
                    "Organizations": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/OrganizationSchema"
                      },
                      "description": "Array of organizations (single organization tree when no filter, array with one filtered organization when filter is provided)",
                      "nullable": true
                    }
                  },
                  "description": "Response structure varies based on query parameters: { count, Organizations } for unfiltered results, { Organizations: [org] } for filtered results, { count: 0 } for no matches"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing or invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDAR%20Core%20API/2.0.0/role": {
      "post": {
        "summary": "Add role assignments to a CEDAR application. This interface takes in objectId, roleTypeId AND either assigneeId, assigneeUserName or assigneeOrgId are required.",
        "description": "Add role assignments to a CEDAR application. This interface takes in objectId, roleTypeId AND either assigneeId, assigneeUserName or assigneeOrgId are required.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "application",
                  "Roles"
                ],
                "properties": {
                  "application": {
                    "type": "string",
                    "description": "Application where the role assignments will be added",
                    "enum": [
                      "alfabet",
                      "all"
                    ],
                    "example": "alfabet"
                  },
                  "Roles": {
                    "type": "array",
                    "items": {
                      "$ref": "#/components/schemas/Role"
                    },
                    "description": "Array of role objects to be added"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Successful request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success",
                      "description": "Result status of the operation"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "example": "{550e8400-e29b-41d4-a716-446655440000}"
                      },
                      "description": "Array of GUIDs for the created role assignments"
                    }
                  },
                  "required": [
                    "result",
                    "message"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Finds a list of role assignments based on an object's ID and/or role type.",
        "description": "Finds a list of role assignments based on an object's ID. If objectId and roleTypeId are both provided, a list of role assignments for only those specific role type IDs are returned. If roleId is provided, then objectId and roleTypeId should not be provided and a specific role assignment is returned.",
        "parameters": [
          {
            "name": "application",
            "in": "query",
            "required": true,
            "description": "Application where the object or role exists.",
            "schema": {
              "type": "string",
              "enum": [
                "alfabet",
                "all"
              ],
              "example": "alfabet"
            }
          },
          {
            "name": "roleId",
            "in": "query",
            "required": false,
            "description": "ID of a specific role assignment",
            "schema": {
              "type": "string",
              "example": "{550e8400-e29b-41d4-a716-446655440000}"
            }
          },
          {
            "name": "objectId",
            "in": "query",
            "required": false,
            "description": "ID of the object that roles are assigned to",
            "schema": {
              "type": "string",
              "example": "{550e8400-e29b-41d4-a716-446655440000}"
            }
          },
          {
            "name": "roleTypeId",
            "in": "query",
            "required": false,
            "description": "ID of a specific role type to be returned. Used with objectId to limit results",
            "schema": {
              "type": "string",
              "example": "{550e8400-e29b-41d4-a716-446655440000}"
            }
          }
        ],
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched roles",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of role assignments returned"
                    },
                    "Roles": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Role"
                      },
                      "description": "Array of role assignment objects"
                    }
                  },
                  "required": [
                    "count",
                    "Roles"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDAR%20Core%20API/2.0.0/role/list": {
      "delete": {
        "description": "Deletes a list of role assignments by ID from SparxEA and the local database. Takes an application name and an array of role IDs.",
        "parameters": [
          {
            "name": "application",
            "in": "query",
            "description": "The application where the role assignment should be deleted.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "all",
                "alfabet"
              ],
              "example": "alfabet"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "An array of one or more role assignment IDs to delete. Can be provided as repeated parameters (id={guid1}&id={guid2}) or with bracket notation (id[]={guid1}&id[]={guid2}).",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "{11111111-2222-3333-4444-555555555555}"
              }
            }
          }
        ],
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Role assignment(s) successfully deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Deleted 1 role assignment(s)."
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing or invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDAR%20Core%20API/2.0.0/role/type/{application}": {
      "get": {
        "summary": "Finds a list of role types available within an application. This interface takes in application.",
        "description": "Finds a list of role types available within an application. This interface takes in application. The list of current roles are: AI Contact API Contact Budget Analyst Business Owner Business Question Contact Contracting Officer's Representative (COR) DA Reviewer Data Center Contact ISSO Government Task Lead (GTL) Project Lead QA Reviewer System Maintainer Subject Matter Expert (SME) Support Staff Survey Point of Contact Technical System Issues Contact",
        "parameters": [
          {
            "name": "application",
            "in": "path",
            "required": true,
            "description": "Application identifier to retrieve role types for",
            "schema": {
              "type": "string",
              "enum": [
                "alfabet",
                "all"
              ],
              "example": "alfabet"
            }
          }
        ],
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched role types",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of role types returned"
                    },
                    "RoleTypes": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/RoleType"
                      },
                      "description": "Array of role type objects"
                    }
                  },
                  "required": [
                    "count",
                    "RoleTypes"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDAR%20Core%20API/2.0.0/softwareProducts": {
      "post": {
        "description": "Add, update, or delete software product and API/AI-related details for a system.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "applicationId"
                ],
                "properties": {
                  "applicationId": {
                    "type": "string",
                    "description": "The unique identifier of the system to which the software products and API/AI details belong.",
                    "example": "{11111111-2222-3333-4444-555555555555}"
                  },
                  "apisDeveloped": {
                    "type": "string",
                    "description": "Indicates if APIs are developed for the system.",
                    "example": "Yes",
                    "nullable": true
                  },
                  "apiDescPublished": {
                    "type": "string",
                    "description": "Indicates if API descriptions are published.",
                    "example": "Yes",
                    "nullable": true
                  },
                  "apiDescPubLocation": {
                    "type": "string",
                    "description": "Location where API descriptions are published.",
                    "example": "https://example.com/api-docs",
                    "nullable": true
                  },
                  "apiDataArea": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "List of data areas covered by the APIs. Stored as a comma-separated string.",
                    "example": [
                      "Financial",
                      "Patient"
                    ],
                    "nullable": true
                  },
                  "apisAccessibility": {
                    "type": "string",
                    "description": "Accessibility level of the APIs (e.g., Internal, External).",
                    "example": "Internal",
                    "nullable": true
                  },
                  "apiFHIRUse": {
                    "type": "string",
                    "description": "Indicates if FHIR standards are used for APIs.",
                    "example": "Yes",
                    "nullable": true
                  },
                  "apiFHIRUseOther": {
                    "type": "string",
                    "description": "Other details about FHIR usage if applicable.",
                    "example": "Specific FHIR profiles are used.",
                    "nullable": true
                  },
                  "systemHasApiGateway": {
                    "type": "boolean",
                    "description": "Boolean indicating if the system uses an API gateway.",
                    "example": true,
                    "nullable": true
                  },
                  "apiHasPortal": {
                    "type": "boolean",
                    "description": "Boolean indicating if the API has a developer portal.",
                    "example": false,
                    "nullable": true
                  },
                  "usesAiTech": {
                    "type": "string",
                    "description": "Indicates if the system uses AI/ML technologies.",
                    "example": "Yes",
                    "nullable": true
                  },
                  "ai_life_cycle_stage": {
                    "type": "string",
                    "description": "Current stage in the AI life cycle (e.g., Development, Production).",
                    "example": "Production",
                    "nullable": true
                  },
                  "aiSolnCatg": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Categories of AI solutions used. Stored as a comma-separated string.",
                    "example": [
                      "Machine Learning",
                      "Natural Language Processing"
                    ],
                    "nullable": true
                  },
                  "aiSolnCatgOther": {
                    "type": "string",
                    "description": "Other AI solution categories not listed.",
                    "example": "Custom AI algorithms.",
                    "nullable": true
                  },
                  "SoftwareProducts": {
                    "type": "array",
                    "description": "List of software product operations (add, update, delete). Each item represents a batch of products to process.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "deleted": {
                          "type": "boolean",
                          "description": "Set to true if all products in this batch are to be deleted. Conflicts with `updated`.",
                          "example": false,
                          "nullable": true
                        },
                        "updated": {
                          "type": "boolean",
                          "description": "Set to true if all products in this batch are to be updated. Conflicts with `deleted`.",
                          "example": true,
                          "nullable": true
                        },
                        "Products": {
                          "type": "array",
                          "description": "List of individual software products for this operation batch.",
                          "items": {
                            "type": "object",
                            "required": [
                              "technopedia_id"
                            ],
                            "properties": {
                              "softwareProductId": {
                                "type": "string",
                                "description": "Unique identifier for an existing software product. Required for update and delete operations.",
                                "example": "{11111111-2222-3333-4444-555555555555}",
                                "nullable": true
                              },
                              "technopedia_id": {
                                "type": "string",
                                "description": "The Technopedia ID of the software product. Required for all product operations.",
                                "example": "TPID-12345"
                              },
                              "api_gateway_use": {
                                "type": "boolean",
                                "description": "Indicates if this software product is used as an API gateway.",
                                "example": true,
                                "nullable": true
                              },
                              "provides_ai_capability": {
                                "type": "boolean",
                                "description": "Indicates if this software product provides AI/ML capabilities.",
                                "example": false,
                                "nullable": true
                              },
                              "software_cost": {
                                "type": "string",
                                "description": "The cost associated with the software product.",
                                "example": "100000",
                                "nullable": true
                              },
                              "ela_purchase": {
                                "type": "string",
                                "description": "Details about Enterprise License Agreement purchase.",
                                "example": "Annual ELA",
                                "nullable": true
                              },
                              "ela_organization": {
                                "type": "string",
                                "description": "Organization managing the ELA.",
                                "example": "IT Operations",
                                "nullable": true
                              },
                              "systemSoftwareConnectionGuid": {
                                "type": "string",
                                "description": "Connection GUID between the system and this software.",
                                "example": "{11111111-2222-3333-4444-555555555555}",
                                "nullable": true
                              },
                              "softwareCatagoryConnectionGuid": {
                                "type": "string",
                                "description": "Connection GUID for software category.",
                                "example": "{11111111-2222-3333-4444-555555555555}",
                                "nullable": true
                              },
                              "softwareVendorConnectionGuid": {
                                "type": "string",
                                "description": "Connection GUID for software vendor.",
                                "example": "{11111111-2222-3333-4444-555555555555}",
                                "nullable": true
                              }
                            }
                          },
                          "nullable": true
                        }
                      }
                    },
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Software product operations processed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Processed 2 software product operations"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing or invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "softwareProductsList",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "description": "Application ID",
            "schema": {
              "type": "string",
              "example": "{550e8400-e29b-41d4-a716-446655440000}"
            }
          }
        ],
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Returns relevant properties and a list of software products",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "aiSolnCatg": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "AI solution categories",
                      "nullable": true
                    },
                    "aiSolnCatgOther": {
                      "type": "string",
                      "description": "Other AI solution category",
                      "nullable": true
                    },
                    "apiDataArea": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "API data areas",
                      "nullable": true
                    },
                    "apiDescPubLocation": {
                      "type": "string",
                      "description": "API description publication location",
                      "nullable": true
                    },
                    "apiDescPublished": {
                      "type": "string",
                      "description": "API description published status",
                      "nullable": true
                    },
                    "apiFHIRUse": {
                      "type": "string",
                      "description": "API FHIR usage",
                      "nullable": true
                    },
                    "apiFHIRUseOther": {
                      "type": "string",
                      "description": "Other API FHIR usage",
                      "nullable": true
                    },
                    "apiHasPortal": {
                      "type": "boolean",
                      "description": "Whether API has portal",
                      "nullable": true
                    },
                    "apisAccessibility": {
                      "type": "string",
                      "description": "APIs accessibility",
                      "nullable": true
                    },
                    "apisDeveloped": {
                      "type": "string",
                      "description": "APIs developed status",
                      "nullable": true
                    },
                    "developmentStage": {
                      "type": "string",
                      "description": "Development stage",
                      "nullable": true
                    },
                    "hostingInfrastructureSystem": {
                      "type": "boolean",
                      "description": "Whether the system is a hosting infrastructure system",
                      "nullable": false
                    },
                    "softwareProducts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "api_gateway_use": {
                            "type": "boolean",
                            "description": "Whether API gateway is used",
                            "nullable": true
                          },
                          "ela_purchase": {
                            "type": "string",
                            "description": "ELA purchase information",
                            "nullable": true
                          },
                          "ela_vendor_id": {
                            "type": "string",
                            "description": "ELA vendor ID",
                            "nullable": true
                          },
                          "provides_ai_capability": {
                            "type": "boolean",
                            "description": "Whether provides AI capability",
                            "nullable": true
                          },
                          "refstr": {
                            "type": "string",
                            "description": "Reference string",
                            "nullable": true
                          },
                          "softwareCatagoryConnectionGuid": {
                            "type": "string",
                            "description": "Software category connection GUID",
                            "nullable": true
                          },
                          "softwareVendorConnectionGuid": {
                            "type": "string",
                            "description": "Software vendor connection GUID",
                            "nullable": true
                          },
                          "software_cost": {
                            "type": "string",
                            "description": "Software cost",
                            "nullable": true
                          },
                          "software_ela_organization": {
                            "type": "string",
                            "description": "Software ELA organization",
                            "nullable": true
                          },
                          "software_name": {
                            "type": "string",
                            "description": "Software name",
                            "nullable": true
                          },
                          "systemSoftwareConnectionGuid": {
                            "type": "string",
                            "description": "System software connection GUID",
                            "nullable": true
                          },
                          "technopedia_category": {
                            "type": "string",
                            "description": "Technopedia category",
                            "nullable": true
                          },
                          "technopedia_id": {
                            "type": "string",
                            "description": "Technopedia ID",
                            "nullable": true
                          },
                          "vendor_name": {
                            "type": "string",
                            "description": "Vendor name",
                            "nullable": true
                          }
                        }
                      },
                      "description": "Array of software products",
                      "nullable": true
                    },
                    "systemHasApiGateway": {
                      "type": "boolean",
                      "description": "Whether system has API gateway",
                      "nullable": true
                    },
                    "usesAiTech": {
                      "type": "string",
                      "description": "Uses AI technology",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDAR%20Core%20API/2.0.0/stakeholder": {
      "get": {
        "description": "Retrieve a list of stakeholders based on various optional criteria.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Stakeholder ID.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "{11111111-2222-3333-4444-555555555555}"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Stakeholder name.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Test Stakeholder"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "Stakeholder version.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "1.0"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "Stakeholder state.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Active"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Stakeholder status.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Approved"
            }
          },
          {
            "name": "idsOnly",
            "in": "query",
            "description": "Return only stakeholder IDs and names (boolean: \"true\", \"false\", \"yes\", \"no\", \"1\", \"0\").",
            "required": false,
            "schema": {
              "type": "string",
              "example": "true"
            }
          }
        ],
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Successful response with a list of stakeholders.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 1,
                      "description": "Number of stakeholders returned"
                    },
                    "Stakeholders": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "{11111111-2222-3333-4444-555555555555}",
                            "description": "Stakeholder ID"
                          },
                          "name": {
                            "type": "string",
                            "example": "Example Stakeholder",
                            "description": "Stakeholder name"
                          },
                          "version": {
                            "type": "string",
                            "example": "1.0",
                            "description": "Stakeholder version (only included when idsOnly is false)",
                            "nullable": true
                          },
                          "state": {
                            "type": "string",
                            "example": "Active",
                            "description": "Stakeholder state (only included when idsOnly is false)",
                            "nullable": true
                          }
                        },
                        "required": [
                          "id",
                          "name"
                        ],
                        "description": "Response structure varies based on idsOnly parameter: if true, only id and name are included; if false, version and state are also included"
                      },
                      "description": "Array of stakeholder objects"
                    }
                  },
                  "required": [
                    "count",
                    "Stakeholders"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing or invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDAR%20Core%20API/2.0.0/supportContact": {
      "post": {
        "description": "Add or update a list of support contacts in Alfabet and the underlying database.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SupportContacts": {
                    "type": "array",
                    "description": "List of support contacts to add or update.",
                    "items": {
                      "type": "object",
                      "required": [
                        "application"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ID of the support contact (GUID). Required for updates, omit for new contacts.",
                          "example": "{11111111-2222-3333-4444-555555555555}",
                          "nullable": true
                        },
                        "application": {
                          "type": "string",
                          "description": "The GUID of the system/application this contact is associated with.",
                          "example": "{A1A1A1A1-B2B2-C3C3-D4D4-E5E5E5E5E5E5}"
                        },
                        "name": {
                          "type": "string",
                          "description": "The full name of the support contact. Either `name` or `title` must be provided.",
                          "example": "John Doe",
                          "nullable": true
                        },
                        "title": {
                          "type": "string",
                          "description": "The job title of the support contact. Either `name` or `title` must be provided.",
                          "example": "IT Support Specialist",
                          "nullable": true
                        },
                        "url": {
                          "type": "string",
                          "description": "A URL related to the support contact (e.g., department page).",
                          "example": "https://example.com/support",
                          "nullable": true
                        },
                        "phone": {
                          "type": "string",
                          "description": "The phone number of the support contact.",
                          "example": "123-456-7890",
                          "nullable": true
                        },
                        "email": {
                          "type": "string",
                          "description": "The email address of the support contact.",
                          "example": "john.doe@example.com",
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Support contact(s) added or updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "{GUID-OF-NEW-CONTACT-1}",
                        "{GUID-OF-NEW-CONTACT-2}"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing or invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete a list of support contacts.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "An array of one or more support contact IDs (GUIDs) to delete. Can be provided as repeated parameters (id=guid1&id=guid2) or with bracket notation (id[]=guid1&id[]=guid2).",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "format": "uuid",
                "example": "11111111-2222-3333-4444-555555555555"
              }
            }
          }
        ],
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Support contacts deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "1 object(s) successfully deleted"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing, invalid, or partially deleted IDs.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Object(s) could not be found"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieve a list of support contacts based on a system ID (application GUID).",
        "parameters": [
          {
            "name": "application",
            "in": "query",
            "description": "The GUID of the system for which to retrieve support contacts.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "{11111111-2222-3333-4444-555555555555}"
            }
          }
        ],
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 1,
                      "description": "Number of support contacts returned"
                    },
                    "SupportContacts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "{11111111-2222-3333-4444-555555555555}",
                            "description": "Support contact ID (GUID)",
                            "nullable": true
                          },
                          "application": {
                            "type": "string",
                            "example": "{11111111-2222-3333-4444-555555555555}",
                            "description": "Application/System GUID",
                            "nullable": true
                          },
                          "name": {
                            "type": "string",
                            "example": "Test User",
                            "description": "Support contact name",
                            "nullable": true
                          },
                          "title": {
                            "type": "string",
                            "example": "Data Engineer",
                            "description": "Support contact job title",
                            "nullable": true
                          },
                          "email": {
                            "type": "string",
                            "example": "tuser@example.com",
                            "description": "Support contact email address",
                            "nullable": true
                          },
                          "phone": {
                            "type": "string",
                            "example": "123-456-7890",
                            "description": "Support contact phone number",
                            "nullable": true
                          },
                          "url": {
                            "type": "string",
                            "example": "https://realurl.com",
                            "description": "Support contact URL",
                            "nullable": true
                          }
                        }
                      },
                      "description": "Array of support contact objects"
                    }
                  },
                  "required": [
                    "count",
                    "SupportContacts"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing or invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDAR%20Core%20API/2.0.0/system/detail/{id}": {
      "get": {
        "description": "System Detail by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the system (UUID string)",
            "schema": {
              "type": "string",
              "example": "{C195B6EE-AE59-432b-80C6-11A5A2F9C969}"
            }
          }
        ],
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Good response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "BusinessOwnerInformation": {
                      "type": "object",
                      "properties": {
                        "508UserInterface": {
                          "type": "string",
                          "enum": [
                            "Yes, UI accessible by external users.",
                            "Yes, UI accessible by internal Federal Employees.",
                            "Yes, UI accessible by both internal Federal Employees and external users.",
                            "No, this system doesn't have a UI."
                          ],
                          "nullable": true
                        },
                        "beneficiaryAddressPurpose": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "Mailing",
                              "Payment Calculation",
                              "Coordination of Benefits",
                              "Subsidy Calculation",
                              "Premium Calculation",
                              "Risk Adjustment",
                              "Coordination of Care",
                              "Eligibility and Enrollment",
                              "Customer Service",
                              "Education and Outreach",
                              "Innovation",
                              "Research and Demonstrations",
                              "Healthcare Quality Improvement",
                              "Program Oversight",
                              "Actuarial Services",
                              "Regulatory and Policy Development",
                              "Audit Support",
                              "Patient Care Reporting",
                              "Beneficiary Data Access"
                            ]
                          },
                          "nullable": true
                        },
                        "beneficiaryAddressPurposeOther": {
                          "type": "string",
                          "example": "Customer Service",
                          "nullable": true
                        },
                        "beneficiaryAddressSource": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "Medicaid Address (State)"
                          },
                          "nullable": true
                        },
                        "beneficiaryAddressSourceOther": {
                          "type": "string",
                          "example": "Medicaid Address (State)",
                          "nullable": true
                        },
                        "beneficiaryInformation": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "Beneficiary Address",
                              "Beneficiary email",
                              "Beneficiary Mobile Number",
                              "None of the Above"
                            ]
                          },
                          "nullable": true
                        },
                        "costPerYear": {
                          "type": "string",
                          "example": "101677.76",
                          "nullable": true
                        },
                        "editBeneficiaryInformation": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "isCmsOwned": {
                          "type": "boolean",
                          "example": false,
                          "nullable": true
                        },
                        "numberOfContractorFte": {
                          "type": "string",
                          "example": "1",
                          "nullable": true
                        },
                        "numberOfFederalFte": {
                          "type": "string",
                          "example": "1",
                          "nullable": true
                        },
                        "numberOfSupportedUsersPerMonth": {
                          "type": "string",
                          "example": "35",
                          "nullable": true
                        },
                        "storesBankingData": {
                          "type": "boolean",
                          "example": false,
                          "nullable": true
                        },
                        "storesBeneficiaryAddress": {
                          "type": "boolean",
                          "example": false,
                          "nullable": true
                        },
                        "systemOwnership": {
                          "type": "string",
                          "example": "Contractor Owned",
                          "nullable": true
                        }
                      }
                    },
                    "DataCenterHosting": {
                      "type": "object",
                      "properties": {
                        "movingToCloud": {
                          "type": "string",
                          "example": "Yes",
                          "enum": [
                            "Yes",
                            "No",
                            "Plans"
                          ],
                          "nullable": true
                        },
                        "movingToCloudDate": {
                          "type": "string",
                          "format": "date",
                          "example": "2026-12-01",
                          "nullable": true
                        }
                      }
                    },
                    "SoftwareProductDetails": {
                      "type": "object",
                      "properties": {
                        "aiPlan": {
                          "type": "string",
                          "enum": [
                            "Yes - This system has developed AI capabilities.",
                            "Yes - This system uses a SaaS AI tool like Remesh...",
                            "No â€“ And this system currently has no plans to utilize AI capabilities",
                            "No â€“ But there currently are plans to use AI capabilities in the next two years"
                          ],
                          "nullable": true
                        },
                        "apiDataArea": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "Beneficiary and Consumer",
                              "Health Insurance Program",
                              "Healthcare Payment",
                              "Healthcare Quality",
                              "Healthcare Service",
                              "Organization",
                              "Provider",
                              "Supporting Resource"
                            ]
                          },
                          "nullable": true
                        },
                        "apiFHIRUse": {
                          "type": "string",
                          "enum": [
                            "No",
                            "FHIR",
                            "HL7",
                            "Other Standard"
                          ],
                          "nullable": true
                        },
                        "apiFHIRUseOther": {
                          "type": "string",
                          "nullable": true
                        },
                        "apisAccessibility": {
                          "type": "string",
                          "enum": [
                            "Both",
                            "External Access",
                            "Internal Access"
                          ],
                          "nullable": true
                        },
                        "apisDeveloped": {
                          "type": "string",
                          "enum": [
                            "No",
                            "Yes",
                            "API In development but not yet launched."
                          ],
                          "nullable": true
                        },
                        "systemAiType": {
                          "type": "string",
                          "nullable": true
                        },
                        "systemAiTypeOther": {
                          "type": "string",
                          "nullable": true
                        },
                        "systemHasApiGateway": {
                          "type": "boolean",
                          "nullable": true
                        }
                      }
                    },
                    "SystemMaintainerInformation": {
                      "type": "object",
                      "properties": {
                        "adHocAgileDeploymentFrequency": {
                          "type": "string",
                          "enum": [
                            "Annually",
                            "Semi-Annually",
                            "Quarterly",
                            "Monthly",
                            "Every Two Weeks",
                            "Weekly",
                            "Twice a Week",
                            "Daily",
                            "Hourly",
                            "Ad Hoc/As Needed",
                            "Not Applicable",
                            "Other"
                          ],
                          "nullable": true
                        },
                        "agileUsed": {
                          "type": "boolean",
                          "example": true,
                          "nullable": true
                        },
                        "authoritativeDatasource": {
                          "type": "string",
                          "nullable": true
                        },
                        "businessArtifactsOnDemand": {
                          "type": "boolean",
                          "example": true,
                          "nullable": true
                        },
                        "dataAtRestEncryptionKeyManagement": {
                          "type": "string",
                          "enum": [
                            "We do not encrypt data at rest.",
                            "We perform ad hoc management of encryption keys.",
                            "We have a process for managing encryption keys.",
                            "We have a process for managing encryption keys and it is automated."
                          ],
                          "nullable": true
                        },
                        "deploymentFrequency": {
                          "type": "string",
                          "example": "Ad Hoc/As Needed",
                          "enum": [
                            "Annually",
                            "Semi-Annually",
                            "Quarterly",
                            "Monthly",
                            "Every Two Weeks",
                            "Weekly",
                            "Twice a Week",
                            "Daily",
                            "Hourly",
                            "Ad Hoc/As Needed",
                            "Not Applicable",
                            "Other"
                          ],
                          "nullable": true
                        },
                        "devCompletionPercent": {
                          "type": "string",
                          "example": "10-14%",
                          "nullable": true
                        },
                        "devWorkDescription": {
                          "type": "string",
                          "example": "Ad hoc development from user feedback",
                          "nullable": true
                        },
                        "ecapParticipation": {
                          "type": "boolean",
                          "example": true,
                          "nullable": true
                        },
                        "frontendAccessType": {
                          "type": "string",
                          "example": "IPv4 Only",
                          "enum": [
                            "IPv4 Only",
                            "IPv4 and IPv6",
                            "IPv6 Only"
                          ],
                          "nullable": true
                        },
                        "hardCodedIpAddress": {
                          "type": "boolean",
                          "example": true,
                          "nullable": true
                        },
                        "ip6EnabledAssetPercent": {
                          "type": "string",
                          "example": "Less than 20%",
                          "enum": [
                            "Less than 20%",
                            "Between 20% and 49%",
                            "Between 50% and 79%",
                            "80% or above"
                          ],
                          "nullable": true
                        },
                        "ip6TransitionPlan": {
                          "type": "string",
                          "example": "Yes, transition to IPv6",
                          "enum": [
                            "Yes",
                            "transition to IPv6",
                            "No",
                            "decommission/replace before 2026"
                          ],
                          "nullable": true
                        },
                        "ipEnabledAssetCount": {
                          "type": "integer",
                          "format": "int32",
                          "example": 3,
                          "nullable": true
                        },
                        "legalHoldCaseName": {
                          "type": "string",
                          "nullable": true
                        },
                        "locallyStoredUserInformation": {
                          "type": "string",
                          "nullable": true,
                          "example": "Yes"
                        },
                        "majorRefreshDate": {
                          "type": "string",
                          "format": "date",
                          "nullable": true
                        },
                        "multifactorAuthenticationMethod": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "One Time Password sent via Email",
                              "One Time Password sent via SMS",
                              "One Time Password or Push from an authenticator app e.g. Google Authenticator DUO",
                              "One time Password from a hardware token e.g. RSA SecurID",
                              "FIDO U2F (e.g. YubiKey as a second factor)",
                              "PIV/certificate",
                              "FIDO2/WebAuthn (passwordless authentication includes Windows Hello)",
                              "None",
                              "Other"
                            ]
                          },
                          "nullable": true
                        },
                        "multifactorAuthenticationMethodOther": {
                          "type": "string",
                          "nullable": true
                        },
                        "netAccessibility": {
                          "type": "string",
                          "example": "Accessible to the Public Internet (non-restricted access)",
                          "enum": [
                            "Accessible to the Public Internet (non-restricted access)",
                            "Accessible to a CMS-internal network only",
                            "Accessible to both public internet and to CMS-internal network"
                          ],
                          "nullable": true
                        },
                        "networkTrafficEncryptionKeyManagement": {
                          "type": "string",
                          "enum": [
                            "We do not encrypt any network traffic.",
                            "We perform ad hoc management of encryption keys.",
                            "We have a process for managing encryption keys.",
                            "We have a process for managing encryption keys and it is automated."
                          ],
                          "nullable": true
                        },
                        "noMajorRefresh": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "noPersistentRecordsFlag": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "noPlannedMajorRefresh": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "omDocumentationOnDemand": {
                          "type": "boolean",
                          "example": true,
                          "nullable": true
                        },
                        "plansToRetireReplace": {
                          "type": "string",
                          "example": "No",
                          "enum": [
                            "No",
                            "Yes - Retire and Replace",
                            "Yes - Retire but NOT Replace"
                          ],
                          "nullable": true
                        },
                        "quarterToRetireReplace": {
                          "type": "string",
                          "example": "3",
                          "nullable": true
                        },
                        "recordsManagementBucket": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "example": "Administrative Management"
                          },
                          "nullable": true
                        },
                        "recordsManagementDisposalLocation": {
                          "type": "string",
                          "nullable": true
                        },
                        "recordsManagementDisposalPlan": {
                          "type": "string",
                          "nullable": true
                        },
                        "recordsUnderLegalHold": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "sourceCodeOnDemand": {
                          "type": "boolean",
                          "example": true,
                          "nullable": true
                        },
                        "systemCustomization": {
                          "type": "string",
                          "example": "Custom",
                          "enum": [
                            "COTS - Less than 20% custom coding",
                            "GOTS â€“ less than 20% custom coding",
                            "Mixed â€“ Uses COTS or GOTS and has more than 20% custom coding",
                            "Custom developed"
                          ],
                          "nullable": true
                        },
                        "systemDataLocation": {
                          "type": "array",
                          "items": {
                            "type": "string",
                            "enum": [
                              "Integrated Data Repository (IDR)",
                              "Chronic Condition Warehouse (CCW)",
                              "This system",
                              "Another CMS system - Describe in Notes"
                            ]
                          },
                          "nullable": true
                        },
                        "systemDataLocationNotes": {
                          "type": "string",
                          "nullable": true
                        },
                        "systemDesignOnDemand": {
                          "type": "boolean",
                          "example": true,
                          "nullable": true
                        },
                        "systemProductionDate": {
                          "type": "string",
                          "format": "date",
                          "example": "2014-03-31",
                          "nullable": true
                        },
                        "systemRequirementsOnDemand": {
                          "type": "boolean",
                          "example": true,
                          "nullable": true
                        },
                        "testPlanOnDemand": {
                          "type": "boolean",
                          "example": true,
                          "nullable": true
                        },
                        "testReportsOnDemand": {
                          "type": "boolean",
                          "example": true,
                          "nullable": true
                        },
                        "testScriptsOnDemand": {
                          "type": "boolean",
                          "example": true,
                          "nullable": true
                        },
                        "yearToRetireReplace": {
                          "type": "string",
                          "example": "2023",
                          "nullable": true
                        }
                      }
                    },
                    "acronym": {
                      "type": "string",
                      "example": "CERT-SC",
                      "nullable": true
                    },
                    "atoEffectiveDate": {
                      "type": "string",
                      "format": "date",
                      "example": "2022-06-09",
                      "nullable": true
                    },
                    "atoExpirationDate": {
                      "type": "string",
                      "format": "date",
                      "example": "2025-06-09",
                      "nullable": true
                    },
                    "belongsTo": {
                      "type": "string",
                      "example": "326-10-0",
                      "nullable": true
                    },
                    "businessOwnerOrg": {
                      "type": "string",
                      "example": "Payment Accuracy and Reporting Group",
                      "nullable": true
                    },
                    "businessOwnerOrgComp": {
                      "type": "string",
                      "example": "OFM",
                      "nullable": true
                    },
                    "description": {
                      "type": "string",
                      "example": "The Comprehensive Error Rate Testing (CERT) Statistical Contractor...",
                      "nullable": true
                    },
                    "ictObjectId": {
                      "type": "string",
                      "example": "{C195B6EE-AE59-432b-80C6-11A5A2F9C969}",
                      "nullable": true
                    },
                    "id": {
                      "type": "string",
                      "example": "{C195B6EE-AE59-432b-80C6-11A5A2F9C969}",
                      "nullable": true
                    },
                    "name": {
                      "type": "string",
                      "example": "Comprehensive Error Rate Testing - Statistical Contractor",
                      "nullable": true
                    },
                    "nextVersionId": {
                      "type": "string",
                      "example": "326-1-0",
                      "nullable": true
                    },
                    "previousVersionId": {
                      "type": "string",
                      "example": "326-3-0",
                      "nullable": true
                    },
                    "state": {
                      "type": "string",
                      "example": "Active",
                      "nullable": true
                    },
                    "status": {
                      "type": "string",
                      "example": "Approved",
                      "nullable": true
                    },
                    "systemMaintainerOrg": {
                      "type": "string",
                      "example": "Payment Accuracy and Reporting Group",
                      "nullable": true
                    },
                    "systemMaintainerOrgComp": {
                      "type": "string",
                      "example": "OFM",
                      "nullable": true
                    },
                    "uuid": {
                      "type": "string",
                      "example": "6616E059-3A99-4808-B22D-E4E4C0DDCE72",
                      "nullable": true
                    },
                    "version": {
                      "type": "string",
                      "example": "1.0",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDAR%20Core%20API/2.0.0/system/summary/{id}": {
      "get": {
        "description": "System Summary by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "ID of the system (UUID string)",
            "schema": {
              "type": "string",
              "example": "{550e8400-e29b-41d4-a716-446655440000}"
            }
          }
        ],
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved system summary",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "SystemSummary": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "{550e8400-e29b-41d4-a716-446655440000}",
                            "description": "System GUID",
                            "nullable": true
                          },
                          "nextVersionId": {
                            "type": "string",
                            "example": "{550e8400-e29b-41d4-a716-446655440001}",
                            "description": "Next version ID",
                            "nullable": true
                          },
                          "previousVersionId": {
                            "type": "string",
                            "example": "{550e8400-e29b-41d4-a716-446655440002}",
                            "description": "Previous version ID",
                            "nullable": true
                          },
                          "acronym": {
                            "type": "string",
                            "example": "CMSS",
                            "description": "System acronym",
                            "nullable": true
                          }
                        }
                      },
                      "description": "Array of system summary records"
                    },
                    "count": {
                      "type": "integer",
                      "description": "Number of summary items returned",
                      "example": 1
                    }
                  },
                  "required": [
                    "SystemSummary",
                    "count"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDAR%20Core%20API/2.0.0/system/summary": {
      "get": {
        "description": "System Summary list",
        "parameters": [
          {
            "name": "state",
            "in": "query",
            "description": "Filter by state",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Active"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by status",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Used"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "API version",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2.0.0"
            }
          },
          {
            "name": "includeInSurvey",
            "in": "query",
            "description": "Include in survey flag (true/false)",
            "required": false,
            "schema": {
              "type": "string",
              "example": "false"
            }
          },
          {
            "name": "idsOnly",
            "in": "query",
            "description": "Return only ID + name pairs (true/false)",
            "required": false,
            "schema": {
              "type": "string",
              "example": "true"
            }
          },
          {
            "name": "belongsTo",
            "in": "query",
            "description": "Belongs to filter",
            "required": false,
            "schema": {
              "type": "string",
              "example": "OrgA"
            }
          },
          {
            "name": "userName",
            "in": "query",
            "description": "User name filter (triggers role-based filtering)",
            "required": false,
            "schema": {
              "type": "string",
              "example": "EUA1"
            }
          },
          {
            "name": "roleType",
            "in": "query",
            "description": "Role type filter (used with userName)",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Administrator"
            }
          }
        ],
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved system summary list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "SystemSummary": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "example": "{550e8400-e29b-41d4-a716-446655440000}",
                            "description": "System ID",
                            "nullable": true
                          },
                          "name": {
                            "type": "string",
                            "example": "System A",
                            "description": "System name",
                            "nullable": true
                          },
                          "state": {
                            "type": "string",
                            "example": "Active",
                            "description": "System state (only present when idsOnly is false)",
                            "nullable": true
                          },
                          "businessOwnerOrgComp": {
                            "type": "string",
                            "example": "Business Owner Component",
                            "description": "Business owner organization component (only present when idsOnly is false)",
                            "nullable": true
                          },
                          "systemMaintainerOrgComp": {
                            "type": "string",
                            "example": "System Maintainer Component",
                            "description": "System maintainer organization component (only present when idsOnly is false)",
                            "nullable": true
                          },
                          "atoEffectiveDate": {
                            "type": "string",
                            "format": "date",
                            "example": "2021-10-13",
                            "description": "ATO effective date (only present when idsOnly is false)",
                            "nullable": true
                          },
                          "atoExpirationDate": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-10-13",
                            "description": "ATO expiration date (only present when idsOnly is false)",
                            "nullable": true
                          }
                        },
                        "required": [
                          "id",
                          "name"
                        ],
                        "description": "Response structure varies based on idsOnly parameter: if true, only id and name are included; if false, additional system details are included"
                      },
                      "description": "Array of system summary objects"
                    },
                    "count": {
                      "type": "integer",
                      "description": "Number of items returned",
                      "example": 1
                    }
                  },
                  "required": [
                    "SystemSummary",
                    "count"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDAR%20Core%20API/2.0.0/threat": {
      "get": {
        "description": "Threat List",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": true,
            "description": "A comma delimited list of object IDs, for example, an ATO ID.",
            "schema": {
              "type": "string",
              "example": "{550e8400-e29b-41d4-a716-446655440000},{550e8400-e29b-41d4-a716-446655440001}"
            }
          }
        ],
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "A list of threats (like a Plan of Actions and Milestones POA&M), for a specific object (like an ATO) using a unique ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "Threats": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID assigned by CEDAR",
                            "nullable": true
                          },
                          "parentId": {
                            "type": "string",
                            "description": "ID of the object the threat is assigned to",
                            "nullable": true
                          },
                          "alternativeId": {
                            "type": "string",
                            "description": "ID assigned by a source system. For example, POA&M ID from CFACTS",
                            "nullable": true
                          },
                          "controlFamily": {
                            "type": "string",
                            "nullable": true
                          },
                          "daysOpen": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Number of days the threat has been open"
                          },
                          "weaknessRiskLevel": {
                            "type": "string",
                            "nullable": true
                          },
                          "type": {
                            "type": "string",
                            "example": "POA&M",
                            "description": "Type of threat (always POA&M)"
                          }
                        },
                        "required": [
                          "daysOpen",
                          "type"
                        ]
                      },
                      "description": "Array of threat objects (empty array when no threats found)",
                      "nullable": true
                    },
                    "count": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of threats returned (0 when no threats found)"
                    }
                  },
                  "required": [
                    "count"
                  ],
                  "description": "Response structure varies: includes Threats array when threats are found, only count when no threats found"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDAR%20Core%20API/2.0.0/url/{id}": {
      "get": {
        "description": "URL List",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of object the URLs are associated with.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "{550e8400-e29b-41d4-a716-446655440000}"
            }
          }
        ],
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved a list of URLs associated with an object in CEDAR",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "UrlList": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address": {
                            "type": "string",
                            "description": "A valid and full URL",
                            "nullable": true
                          },
                          "isApiEndpoint": {
                            "type": "boolean",
                            "description": "A boolean flag to indicate whether URL is an API Endpoint",
                            "nullable": true
                          },
                          "isBehindWebApplicationFirewall": {
                            "type": "boolean",
                            "description": "A boolean flag to indicate whether the application is behind a Web Application Firewall (WAF)",
                            "nullable": true
                          },
                          "isVersionCodeRepository": {
                            "type": "boolean",
                            "description": "A boolean flag to indicate if this URL provides access to a versioned code repository?",
                            "nullable": true
                          },
                          "urlHostingEnv": {
                            "type": "string",
                            "description": "The hosting environment associated with a specific URL",
                            "example": "Production",
                            "nullable": true
                          },
                          "urlId": {
                            "type": "string",
                            "description": "Unique key that uniquely identified the URL in database",
                            "example": "218-10-0",
                            "nullable": true
                          }
                        }
                      },
                      "description": "Array of URL objects (only present when URLs are found)",
                      "nullable": true
                    },
                    "count": {
                      "type": "integer",
                      "description": "Number of items returned (0 when no URLs found)",
                      "example": 1
                    }
                  },
                  "required": [
                    "count"
                  ],
                  "description": "Response structure varies: includes UrlList when URLs are found, only count when no URLs found"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDAR%20Core%20API/2.0.0/user": {
      "post": {
        "description": "Add a list of users to a CEDAR application, optionally creating Sparx Person records if they do not exist.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "application",
                  "Users"
                ],
                "properties": {
                  "application": {
                    "type": "string",
                    "description": "The target application for user addition. Currently supported: \"alfabet\", \"all\" (no-op).",
                    "enum": [
                      "alfabet",
                      "all"
                    ],
                    "example": "alfabet"
                  },
                  "Users": {
                    "type": "array",
                    "description": "List of users to add to the application.",
                    "items": {
                      "type": "object",
                      "required": [
                        "userName"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "description": "Optional. Existing Sparx GUID for the user. If provided, lookup/creation in SparxEA is skipped.",
                          "example": "11111111-2222-3333-4444-555555555555",
                          "nullable": true
                        },
                        "userName": {
                          "type": "string",
                          "description": "The unique identifier for the user (e.g., LDAP uid).",
                          "example": "JDOE"
                        },
                        "firstName": {
                          "type": "string",
                          "description": "Optional. First name of the user, used for Sparx creation if needed.",
                          "example": "John",
                          "nullable": true
                        },
                        "lastName": {
                          "type": "string",
                          "description": "Optional. Last name of the user, used for Sparx creation if needed.",
                          "example": "Doe",
                          "nullable": true
                        },
                        "phone": {
                          "type": "string",
                          "description": "Optional. Phone number of the user.",
                          "example": "123-456-7890",
                          "nullable": true
                        },
                        "email": {
                          "type": "string",
                          "format": "email",
                          "description": "Optional. Email address of the user.",
                          "example": "john.doe@example.com",
                          "nullable": true
                        },
                        "isDeleted": {
                          "type": "boolean",
                          "description": "Optional. Flag indicating if the user is deleted (not explicitly used by this endpoint for logic).",
                          "example": false,
                          "nullable": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Users added successfully. Returns a list of GUIDs for added users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Successfully added 1 user(s).",
                        "11111111-2222-3333-4444-555555555555"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request. Missing or invalid parameters in the request body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Missing or invalid authentication credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. An unexpected error occurred during processing, or critical external service failure (e.g., SparxEA API, database, LDAP).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieve a list of users based on various search criteria.",
        "parameters": [
          {
            "name": "application",
            "in": "query",
            "description": "The application the user belongs to (e.g., \"alfabet\", \"all\").",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "alfabet",
                "all"
              ],
              "example": "alfabet"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "A user's GUID (e.g., \"{11111111-2222-3333-4444-555555555555}\"). If provided, other parameters are ignored.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "{11111111-2222-3333-4444-555555555555}",
              "nullable": true
            }
          },
          {
            "name": "userName",
            "in": "query",
            "description": "A user's username. Requires at least 2 alpha characters; wildcards (*) are supported.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "T3ST*",
              "nullable": true
            }
          },
          {
            "name": "firstName",
            "in": "query",
            "description": "A user's first name. Requires at least 2 alpha characters; wildcards (*) are supported.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "John*",
              "nullable": true
            }
          },
          {
            "name": "lastName",
            "in": "query",
            "description": "A user's last name. Requires at least 2 alpha characters; wildcards (*) are supported.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Doe*",
              "nullable": true
            }
          },
          {
            "name": "phone",
            "in": "query",
            "description": "A user's phone number.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "123-456-7890",
              "nullable": true
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "A user's email address.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "email",
              "example": "test.user@example.com",
              "nullable": true
            }
          }
        ],
        "tags": [
          "CEDAR Core"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved user list.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "format": "int32",
                      "example": 1
                    },
                    "Users": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The unique ID (GUID) of the user.",
                            "example": "{11111111-2222-3333-4444-555555555555}"
                          },
                          "application": {
                            "type": "string",
                            "description": "The application the user belongs to.",
                            "example": "alfabet"
                          },
                          "userName": {
                            "type": "string",
                            "description": "The user's username.",
                            "example": "T3ST",
                            "nullable": true
                          },
                          "firstName": {
                            "type": "string",
                            "description": "The user's first name.",
                            "example": "Test",
                            "nullable": true
                          },
                          "lastName": {
                            "type": "string",
                            "description": "The user's last name.",
                            "example": "User",
                            "nullable": true
                          },
                          "phone": {
                            "type": "string",
                            "description": "The user's phone number.",
                            "example": "123-456-7890",
                            "nullable": true
                          },
                          "email": {
                            "type": "string",
                            "format": "email",
                            "description": "The user's email address.",
                            "example": "test.user@example.com",
                            "nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing or invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDARIntake/1.0/client/{id}": {
      "get": {
        "description": "Retrieve intake request data by client ID. Returns intake information filtered by client status and version.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The client ID to search for",
            "required": true,
            "schema": {
              "type": "string",
              "example": "client-123"
            }
          },
          {
            "name": "clientStatus",
            "in": "query",
            "description": "The client status to filter by",
            "required": true,
            "schema": {
              "type": "string",
              "example": "SUBMITTED"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "The client version to filter by",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1.0"
            }
          },
          {
            "name": "CLIENT_NAME",
            "in": "header",
            "description": "The name of the client making the request",
            "required": true,
            "schema": {
              "type": "string",
              "example": "MyClient"
            }
          }
        ],
        "tags": [
          "CEDAR Intake"
        ],
        "responses": {
          "200": {
            "description": "Intake request retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cedarId": {
                      "type": "string",
                      "description": "The CEDAR intake request ID",
                      "example": "12345"
                    },
                    "clientId": {
                      "type": "string",
                      "description": "The client ID",
                      "example": "client-123"
                    },
                    "version": {
                      "type": "string",
                      "description": "The client version",
                      "example": "1.0"
                    },
                    "type": {
                      "type": "string",
                      "description": "The request type",
                      "example": "INTAKE"
                    },
                    "cedarStatus": {
                      "type": "string",
                      "description": "The CEDAR status of the request",
                      "example": "IN_PROGRESS"
                    },
                    "cedarStatusMessage": {
                      "type": "string",
                      "description": "Status message from CEDAR (currently hardcoded as empty string for backwards compatibility)",
                      "example": ""
                    },
                    "clientStatus": {
                      "type": "string",
                      "description": "The client status of the request",
                      "example": "SUBMITTED"
                    },
                    "schema": {
                      "type": "string",
                      "description": "The request type schema",
                      "example": "intake-v1"
                    },
                    "bodyFormat": {
                      "type": "string",
                      "description": "The format of the request data",
                      "example": "JSON"
                    },
                    "body": {
                      "type": "string",
                      "description": "The request data body",
                      "example": "{\"systemName\": \"My System\"}"
                    },
                    "clientCreatedDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When the client created the request",
                      "example": "2023-01-01T12:00:00Z"
                    },
                    "clientLastUpdatedDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When the client last updated the request",
                      "example": "2023-01-02T12:00:00Z"
                    },
                    "cedarCreatedDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When CEDAR created the request record",
                      "example": "2023-01-01T12:05:00Z"
                    },
                    "cedarLastUpdatedDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When CEDAR last updated the request record",
                      "example": "2023-01-02T12:05:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameters or intake not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Database Unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDARIntake/1.0/healthCheck": {
      "get": {
        "description": "Health check endpoint to verify that the CEDAR Intake service is running and operational.",
        "parameters": [],
        "tags": [
          "CEDAR Intake"
        ],
        "responses": {
          "200": {
            "description": "Service is healthy and operational",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Health status of the service",
                      "example": "pass"
                    },
                    "datetime": {
                      "type": "string",
                      "description": "Current datetime in YYYY-MM-DD HH:mm:ss format",
                      "example": "2023-01-01 12:00:00"
                    },
                    "version": {
                      "type": "string",
                      "description": "API version",
                      "example": "1"
                    },
                    "timestamp": {
                      "type": "integer",
                      "description": "Unix timestamp of the current time",
                      "example": 1672574400
                    }
                  },
                  "required": [
                    "status",
                    "datetime",
                    "version",
                    "timestamp"
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDARIntake/1.0/intake": {
      "post": {
        "description": "Add an intake",
        "parameters": [
          {
            "name": "CLIENT_NAME",
            "in": "header",
            "description": "The client name to associate to the request",
            "required": true,
            "schema": {
              "type": "string",
              "example": "EASi"
            }
          },
          {
            "name": "validatePayload",
            "in": "query",
            "description": "Determines if schema validation of the payload is performed synchronously before persisting the record or asynchronously after the record has been persisted",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "example": "false"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "schema",
                  "clientId",
                  "clientStatus",
                  "body",
                  "bodyFormat",
                  "type",
                  "version",
                  "clientCreatedDate"
                ],
                "properties": {
                  "body": {
                    "type": "string",
                    "description": "The encoded, string representation of the object being transmitted"
                  },
                  "bodyFormat": {
                    "type": "string",
                    "enum": [
                      "JSON",
                      "XML"
                    ],
                    "example": "JSON"
                  },
                  "clientCreatedDate": {
                    "type": "string",
                    "description": "Creation date associated with the object being transmitted",
                    "format": "date-time"
                  },
                  "clientId": {
                    "type": "string",
                    "description": "Unique ID associated with the object in body"
                  },
                  "clientLastUpdatedDate": {
                    "type": "string",
                    "description": "Last update date associated with the object being transmitted",
                    "format": "date-time"
                  },
                  "clientStatus": {
                    "type": "string",
                    "description": "Client's status associated with the object being transmitted, i.e. Initiated, Final, etc."
                  },
                  "schema": {
                    "type": "string",
                    "description": "The name and version of the schema associated with the object being transmitted, i.e. SystemIntake_v01"
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of object being transmitted, i.e. SystemIntake, BusinessCase, etc"
                  },
                  "version": {
                    "type": "string",
                    "description": "The version associated with the object in the body. This value can be incremented in the event a transaction needs to be resubmitted."
                  }
                }
              }
            }
          }
        },
        "tags": [
          "CEDAR Intake"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "result": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDARIntake/1.0/intake/cedar/{id}": {
      "get": {
        "description": "Retrieve intake request data by CEDAR ID. Returns intake information for the specified CEDAR intake request ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The CEDAR intake request ID to search for",
            "required": true,
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "CLIENT_NAME",
            "in": "header",
            "description": "The name of the client making the request",
            "required": true,
            "schema": {
              "type": "string",
              "example": "MyClient"
            }
          }
        ],
        "tags": [
          "CEDAR Intake"
        ],
        "responses": {
          "200": {
            "description": "Intake request retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cedarId": {
                      "type": "string",
                      "description": "The CEDAR intake request ID",
                      "example": "12345"
                    },
                    "clientId": {
                      "type": "string",
                      "description": "The client ID",
                      "example": "client-123"
                    },
                    "version": {
                      "type": "string",
                      "description": "The client version",
                      "example": "1.0"
                    },
                    "type": {
                      "type": "string",
                      "description": "The request type",
                      "example": "INTAKE"
                    },
                    "cedarStatus": {
                      "type": "string",
                      "description": "The CEDAR status of the request",
                      "example": "IN_PROGRESS"
                    },
                    "cedarStatusMessage": {
                      "type": "string",
                      "description": "Status message from CEDAR (currently hardcoded as empty string for backwards compatibility)",
                      "example": ""
                    },
                    "clientStatus": {
                      "type": "string",
                      "description": "The client status of the request",
                      "example": "SUBMITTED"
                    },
                    "schema": {
                      "type": "string",
                      "description": "The request type schema",
                      "example": "intake-v1"
                    },
                    "bodyFormat": {
                      "type": "string",
                      "description": "The format of the request data",
                      "example": "JSON"
                    },
                    "body": {
                      "type": "string",
                      "description": "The request data body",
                      "example": "{\"systemName\": \"My System\"}"
                    },
                    "clientCreatedDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When the client created the request",
                      "example": "2023-01-01T12:00:00Z"
                    },
                    "clientLastUpdatedDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When the client last updated the request",
                      "example": "2023-01-02T12:00:00Z"
                    },
                    "cedarCreatedDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When CEDAR created the request record",
                      "example": "2023-01-01T12:05:00Z"
                    },
                    "cedarLastUpdatedDate": {
                      "type": "string",
                      "format": "date-time",
                      "description": "When CEDAR last updated the request record",
                      "example": "2023-01-02T12:05:00Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing CLIENT_NAME header or intake not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Database Unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDARIntake/1.0/status/cedar/{id}": {
      "get": {
        "description": "Retrieve intake status information by CEDAR ID. Returns status details for the specified CEDAR intake request.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The CEDAR intake request ID to get status for",
            "required": true,
            "schema": {
              "type": "string",
              "example": "12345"
            }
          },
          {
            "name": "CLIENT_NAME",
            "in": "header",
            "description": "The name of the client making the request",
            "required": true,
            "schema": {
              "type": "string",
              "example": "MyClient"
            }
          }
        ],
        "tags": [
          "CEDAR Intake"
        ],
        "responses": {
          "200": {
            "description": "Intake status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cedarId": {
                      "type": "string",
                      "description": "The CEDAR intake request ID",
                      "example": "12345"
                    },
                    "clientId": {
                      "type": "string",
                      "description": "The client ID",
                      "example": "client-123"
                    },
                    "version": {
                      "type": "string",
                      "description": "The client version",
                      "example": "1.0"
                    },
                    "cedarStatus": {
                      "type": "string",
                      "description": "The CEDAR status of the request",
                      "example": "IN_PROGRESS"
                    },
                    "cedarStatusMessage": {
                      "type": "string",
                      "description": "Status message from CEDAR (currently hardcoded as empty string for backwards compatibility)",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameters or intake not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Database Unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDARIntake/1.0/status/client/{id}": {
      "get": {
        "description": "Retrieve intake status information by client ID. Returns status details for the specified client intake request filtered by client status and version.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The client ID to get status for",
            "required": true,
            "schema": {
              "type": "string",
              "example": "client-123"
            }
          },
          {
            "name": "clientStatus",
            "in": "query",
            "description": "The client status to filter by",
            "required": true,
            "schema": {
              "type": "string",
              "example": "SUBMITTED"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "The client version to filter by",
            "required": true,
            "schema": {
              "type": "string",
              "example": "1.0"
            }
          },
          {
            "name": "CLIENT_NAME",
            "in": "header",
            "description": "The name of the client making the request",
            "required": true,
            "schema": {
              "type": "string",
              "example": "MyClient"
            }
          }
        ],
        "tags": [
          "CEDAR Intake"
        ],
        "responses": {
          "200": {
            "description": "Intake status retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cedarId": {
                      "type": "string",
                      "description": "The CEDAR intake request ID",
                      "example": "12345"
                    },
                    "clientId": {
                      "type": "string",
                      "description": "The client ID",
                      "example": "client-123"
                    },
                    "version": {
                      "type": "string",
                      "description": "The client version",
                      "example": "1.0"
                    },
                    "cedarStatus": {
                      "type": "string",
                      "description": "The CEDAR status of the request",
                      "example": "IN_PROGRESS"
                    },
                    "cedarStatusMessage": {
                      "type": "string",
                      "description": "Status message from CEDAR (currently hardcoded as empty string for backwards compatibility)",
                      "example": ""
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing required parameters or intake not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "example": "Database Unavailable"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gateway/CEDARIntake/1.0/intake/status": {
      "get": {
        "description": "Intake Status list",
        "parameters": [
          {
            "name": "cedarStatus",
            "in": "query",
            "required": true,
            "description": "CEDAR status describing the outcome of validation, and mapping of the payload",
            "schema": {
              "type": "string",
              "enum": [
                "Error",
                "In Process",
                "New",
                "On Hold",
                "Processed"
              ],
              "example": "New"
            }
          },
          {
            "name": "clientCreatedStartDate",
            "in": "query",
            "required": false,
            "description": "The starting point searching for records using the clientCreatedDate value.",
            "schema": {
              "type": "string",
              "example": "1900-01-01 00:00:00.001"
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "description": "Number of results to return per page. If used, pageNumber must also be provided.",
            "schema": {
              "type": "string",
              "example": "6"
            }
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "description": "Page number to return. If used, pageSize must also be provided.",
            "schema": {
              "type": "string",
              "example": "6"
            }
          }
        ],
        "tags": [
          "CEDAR Intake"
        ],
        "responses": {
          "200": {
            "description": "System Intakes found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "Statuses": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cedarId": {
                            "type": "string",
                            "description": "Unique ID associated with the object in body"
                          },
                          "clientId": {
                            "type": "string",
                            "description": "Unique ID assigned by CEDAR"
                          },
                          "version": {
                            "type": "string",
                            "description": "The version associated with the object in the body. This value can be incremented in the event a transaction needs to be resubmitted."
                          },
                          "cedarStatus": {
                            "type": "string",
                            "description": "CEDAR status describing the outcome of parsing, validation, and mapping of the payload"
                          },
                          "cedarStatusMessage": {
                            "type": "string",
                            "description": "Message related to errors with the parsing, validation, and mapping of the payload (if applicable)"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/System%20Census%20Core%20API/2.0.0/adminReviewer": {
      "post": {
        "description": "Add one or more System Census Reviewers.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Reviewers": {
                    "type": "array",
                    "description": "List of reviewers to add.",
                    "items": {
                      "type": "object",
                      "required": [
                        "userName",
                        "fullName",
                        "type"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Reviewer ID (should not be provided for add operations as it is auto-generated).",
                          "example": "{11111111-2222-3333-4444-555555555555}",
                          "nullable": true
                        },
                        "userName": {
                          "type": "string",
                          "description": "The username of the reviewer.",
                          "example": "USER"
                        },
                        "fullName": {
                          "type": "string",
                          "description": "The full name of the reviewer.",
                          "example": "Test User"
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the reviewer (e.g., QA, DA).",
                          "example": "QA"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "Reviewer(s) added successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Record created with ID: 1234"
                      ]
                    }
                  }
                }
              }
            }
          },
          "207": {
            "description": "Partial success: some reviewers were added, others failed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "partial success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Record created with ID: 1234",
                        "Failed to insert reviewer USER: Duplicate entry."
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing or invalid parameters in the request body, or all reviewer additions failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletes one or more System Census Reviewer records based on their ID, Username, or Type. Records can be deleted individually, or a list of records can be provided in the request body.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Reviewers": {
                    "type": "array",
                    "description": "List of reviewer objects to delete. Each object must contain at least `id` or `userName`.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The unique ID of the reviewer to delete.",
                          "example": "11111111-2222-3333-4444-555555555555",
                          "nullable": true
                        },
                        "userName": {
                          "type": "string",
                          "description": "The username of the reviewer to delete.",
                          "example": "REVIEWER_USER",
                          "nullable": true
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the reviewer (e.g., \"QA\", \"DA\"). Used in conjunction with ID or Username for a more specific deletion target.",
                          "example": "QA",
                          "nullable": true
                        }
                      },
                      "required": []
                    }
                  }
                },
                "required": [
                  "Reviewers"
                ]
              }
            }
          }
        },
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "All specified reviewer records were successfully deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Successfully deleted reviewer:  11111111-2222-3333-4444-555555555555 | REVIEWER_USER | QA"
                      ]
                    }
                  }
                }
              }
            }
          },
          "207": {
            "description": "Multi-Status: Some reviewer records were deleted successfully, while others failed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "partial success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Successfully deleted reviewer: 11111111-2222-3333-4444-555555555555 | REVIEWER_USER_1 | QA",
                        "Could not delete reviewer (not found or no rows affected): id=22222222-3333-4444-5555-666666666666 | userName=REVIEWER_USER_2 | type=DA"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request: The request body is invalid, missing required fields, or no valid deletion criteria were provided for any reviewer.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: Authentication credentials are missing or invalid.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: An unexpected error occurred on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/System%20Census%20Core%20API/2.0.0/admin/reviewer": {
      "get": {
        "description": "Reviewers are CMS employees responsible for verifying the accuracy and completeness of the System Census Survey data each year. There are two types of reviewers, QA and DA. The list of potential reviewers is returned by this endpoint and can be filtered by 'type'",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "The type of reviewers to be returned. Either 'QA', 'DA', or null/empty. Null/empty will return all reviewers.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "QA",
                "DA"
              ],
              "nullable": true,
              "example": "QA"
            }
          }
        ],
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "Reviewers list retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "The number of reviewers returned.",
                      "example": 2
                    },
                    "Reviewers": {
                      "type": "array",
                      "description": "List of reviewers.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the reviewer.",
                            "example": "11111111-2222-3333-4444-555555555555"
                          },
                          "userName": {
                            "type": "string",
                            "description": "The username of the reviewer.",
                            "example": "T3ST"
                          },
                          "fullName": {
                            "type": "string",
                            "description": "The full name of the reviewer.",
                            "example": "Test User"
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of reviewer (e.g., QA, DA).",
                            "example": "QA"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/System%20Census%20Core%20API/2.0.0/budgetAndContracts": {
      "post": {
        "description": "Add or update budget and contract information for a system.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "systemId",
                  "pageName"
                ],
                "properties": {
                  "systemId": {
                    "type": "string",
                    "description": "The ID of the system the budgets and contracts are for.",
                    "example": "{11111111-2222-3333-4444-555555555555}"
                  },
                  "pageName": {
                    "type": "string",
                    "description": "The name of the page this data belongs to (e.g., \"BudgetAndContracts\").",
                    "example": "BudgetAndContracts"
                  },
                  "Budgets": {
                    "type": "array",
                    "description": "List of budget items to add, update, or delete.",
                    "items": {
                      "type": "object",
                      "required": [
                        "projectId"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "OFM budget internal ID in system of record. Optional for new budgets, required if 'updated' or 'deleted' is true.",
                          "example": "{11111111-2222-3333-4444-555555555555}",
                          "nullable": true
                        },
                        "projectId": {
                          "type": "string",
                          "description": "OFM budget project ID in system of record.",
                          "example": "{66666666-7777-8888-9999-000000000000}"
                        },
                        "projectTitle": {
                          "type": "string",
                          "description": "Project Title in system of record.",
                          "example": "Fiscal Year 2024 Project",
                          "nullable": true
                        },
                        "fundingId": {
                          "type": "string",
                          "description": "Cross-reference ID for relationship between budget project and application in system of record (Sparx ProjectArch GUID). Required if 'updated' is true.",
                          "example": "{AABBCCDD-1111-2222-3333-444444444444}",
                          "nullable": true
                        },
                        "funding": {
                          "type": "string",
                          "description": "Description of the allocation of this budget to the system in question.",
                          "example": "Allocated for development",
                          "nullable": true
                        },
                        "deleted": {
                          "type": "boolean",
                          "description": "Flag indicating whether this budget was deleted by the user.",
                          "example": false,
                          "nullable": true
                        },
                        "updated": {
                          "type": "boolean",
                          "description": "Flag indicating whether this budget was added or updated by the user.",
                          "example": true,
                          "nullable": true
                        }
                      }
                    },
                    "nullable": true
                  },
                  "Contracts": {
                    "type": "array",
                    "description": "List of contract items to add, update, or delete.",
                    "items": {
                      "type": "object",
                      "required": [
                        "id",
                        "parentAwardId",
                        "awardId"
                      ],
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Internal ID for the contract in system of record (Sparx Contract GUID).",
                          "example": "{55555555-4444-3333-2222-111111111111}"
                        },
                        "contractDeliverableId": {
                          "type": "string",
                          "description": "Internal ID for the contract deliverable (Sparx ContractDeliverable GUID). Required if 'updated' is true.",
                          "example": "{DDCCBBAA-9999-8888-7777-666666666666}",
                          "nullable": true
                        },
                        "parentAwardId": {
                          "type": "string",
                          "description": "Parent contract number.",
                          "example": "CONTRACT-PARENT-001"
                        },
                        "awardId": {
                          "type": "string",
                          "description": "Contract number.",
                          "example": "CONTRACT-001"
                        },
                        "contractADO": {
                          "type": "string",
                          "description": "Is ADO Parent Contract, Yes/No.",
                          "example": "Yes",
                          "nullable": true
                        },
                        "description": {
                          "type": "string",
                          "description": "Contract description.",
                          "example": "Software development services.",
                          "nullable": true
                        },
                        "deleted": {
                          "type": "boolean",
                          "description": "Flag indicating whether this contract was deleted by the user.",
                          "example": false,
                          "nullable": true
                        },
                        "updated": {
                          "type": "boolean",
                          "description": "Flag indicating whether this contract was added or updated by the user.",
                          "example": true,
                          "nullable": true
                        },
                        "systemId": {
                          "type": "string",
                          "description": "System ID related to this contract.",
                          "example": "{11111111-2222-3333-4444-555555555555}",
                          "nullable": true
                        },
                        "POPStartDate": {
                          "type": "string",
                          "format": "date",
                          "description": "Period of Performance Start Date (YYYY-MM-DD).",
                          "example": "2023-01-01",
                          "nullable": true
                        },
                        "POPEndDate": {
                          "type": "string",
                          "format": "date",
                          "description": "Period of Performance End Date (YYYY-MM-DD).",
                          "example": "2024-12-31",
                          "nullable": true
                        },
                        "contractName": {
                          "type": "string",
                          "description": "Name of the contract.",
                          "example": "Dev Services Contract",
                          "nullable": true
                        }
                      }
                    },
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "Budget and contracts updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Processed 2 add/update operations and 0 delete operations."
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing or invalid parameters in the request body.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - An unexpected error occurred.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieve budget and contract information for a specific system.",
        "parameters": [
          {
            "name": "systemId",
            "in": "query",
            "description": "The unique identifier for the system.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "11111111-2222-3333-4444-555555555555"
            }
          }
        ],
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "Budget and contract information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "systemId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The system identifier.",
                      "example": "11111111-2222-3333-4444-555555555555"
                    },
                    "Budgets": {
                      "type": "array",
                      "description": "List of budgets for the system.",
                      "items": {
                        "type": "object"
                      }
                    },
                    "Contracts": {
                      "type": "array",
                      "description": "List of contracts for the system.",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing or invalid systemId parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/System%20Census%20Core%20API/2.0.0/businessOwner": {
      "post": {
        "description": "Add or update business owner basic information data for a system. If an update, ID is required.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The GUID of the system for which to add/update business owner information.",
                    "example": "{11111111-2222-3333-4444-555555555555}"
                  },
                  "version": {
                    "type": "string",
                    "description": "Version of the system (optional).",
                    "example": "1.0",
                    "nullable": true
                  },
                  "pageName": {
                    "type": "string",
                    "description": "The name of the page, e.g., \"BusinessOwnerBasicInformation\" (optional).",
                    "example": "BusinessOwnerBasicInformation",
                    "nullable": true
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the system (optional).",
                    "example": "This is a test system for business owner data.",
                    "nullable": true
                  },
                  "SystemOwnership": {
                    "type": "string",
                    "description": "System ownership status (optional).",
                    "example": "CMS Owned",
                    "nullable": true
                  },
                  "storesBeneficiaryAddress": {
                    "type": "boolean",
                    "description": "Indicates if the system stores beneficiary addresses (optional).",
                    "example": false,
                    "nullable": true
                  },
                  "storesHealthDisparityData": {
                    "type": "boolean",
                    "description": "Indicates if the system stores health disparity data (optional).",
                    "example": false,
                    "nullable": true
                  },
                  "storesBankingData": {
                    "type": "boolean",
                    "description": "Indicates if the system stores banking data (optional).",
                    "example": false,
                    "nullable": true
                  },
                  "costPerYear": {
                    "type": "string",
                    "description": "Annual cost of the system (optional).",
                    "example": "1000000",
                    "nullable": true
                  },
                  "numberOfFederalFteId": {
                    "type": "string",
                    "description": "ID for number of federal FTEs (optional).",
                    "example": "1",
                    "nullable": true
                  },
                  "numberOfFederalFte": {
                    "type": "string",
                    "description": "Number of federal FTEs (optional).",
                    "example": "10",
                    "nullable": true
                  },
                  "numberOfContractorFteId": {
                    "type": "string",
                    "description": "ID for number of contractor FTEs (optional).",
                    "example": "1",
                    "nullable": true
                  },
                  "numberOfContractorFte": {
                    "type": "string",
                    "description": "Number of contractor FTEs (optional).",
                    "example": "20",
                    "nullable": true
                  },
                  "numberOfSupportedUsersPerMonthId": {
                    "type": "string",
                    "description": "ID for number of supported users per month (optional).",
                    "example": "1",
                    "nullable": true
                  },
                  "numberOfSupportedUsersPerMonth": {
                    "type": "string",
                    "description": "Number of supported users per month (optional).",
                    "example": "5000",
                    "nullable": true
                  },
                  "beneficiaryInformation": {
                    "type": "array",
                    "description": "List of beneficiary information types (optional).",
                    "items": {
                      "type": "string",
                      "example": "Medicare"
                    },
                    "nullable": true
                  },
                  "editBeneficiaryInformation": {
                    "type": "boolean",
                    "description": "Indicates if beneficiary information can be edited (optional).",
                    "example": true,
                    "nullable": true
                  },
                  "508UserInterface": {
                    "type": "string",
                    "description": "508 compliance status of the user interface (optional).",
                    "example": "Compliant",
                    "nullable": true
                  },
                  "systemUIAccessibility": {
                    "type": "array",
                    "description": "List of system UI accessibility features (optional).",
                    "items": {
                      "type": "string",
                      "example": "Screen Reader"
                    },
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "Business owner information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "System updated successfully"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing or invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/System%20Census%20Core%20API/2.0.0/page/businessOwner": {
      "get": {
        "description": "Get business owner basic information for a system by system ID.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The GUID of the system for which to retrieve business owner information.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "{11111111-2222-3333-4444-555555555555}"
            }
          }
        ],
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "Business owner information retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The GUID of the system.",
                      "example": "{11111111-2222-3333-4444-555555555555}"
                    },
                    "pageName": {
                      "type": "string",
                      "description": "The page name for the business owner information.",
                      "example": "BusinessOwnerBasicInformation"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the system.",
                      "example": "This is a test system for business owner details.",
                      "nullable": true
                    },
                    "SystemOwnership": {
                      "type": "string",
                      "description": "Overall ownership of the system (e.g., \"Federal\", \"Contractor\").",
                      "example": "Federal",
                      "nullable": true
                    },
                    "costPerYear": {
                      "type": "string",
                      "description": "Annual cost of the system.",
                      "example": "1000000.50",
                      "nullable": true
                    },
                    "numberOfFederalFte": {
                      "type": "string",
                      "description": "Number of Federal FTEs supporting the system.",
                      "example": "5",
                      "nullable": true
                    },
                    "numberOfContractorFte": {
                      "type": "string",
                      "description": "Number of Contractor FTEs supporting the system.",
                      "example": "10",
                      "nullable": true
                    },
                    "numberOfSupportedUsersPerMonth": {
                      "type": "string",
                      "description": "Number of direct system users per month.",
                      "example": "1000",
                      "nullable": true
                    },
                    "editBeneficiaryInformation": {
                      "type": "boolean",
                      "description": "Indicates if beneficiary information can be edited.",
                      "example": true,
                      "nullable": true
                    },
                    "storesHealthDisparityData": {
                      "type": "boolean",
                      "description": "Indicates if the system stores health disparity data.",
                      "example": false,
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request (e.g., missing ID, no records found, or multiple records found)",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/System%20Census%20Core%20API/2.0.0/page/dataCenters": {
      "post": {
        "description": "Add, update, or delete system data center/deployment information. Supports full CRUD operations for deployment relationships and system-level cloud migration settings.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "systemId"
                ],
                "properties": {
                  "systemId": {
                    "type": "string",
                    "description": "The ID of the system the data center/deployment is for. This field is required.",
                    "example": "{11111111-2222-3333-4444-555555555555}"
                  },
                  "pageName": {
                    "type": "string",
                    "description": "The name of the page (e.g., \"DataCenterHostingEnvironments\"). Optional field for UI context.",
                    "example": "DataCenterHostingEnvironments",
                    "nullable": true
                  },
                  "movingToCloud": {
                    "type": "string",
                    "description": "System-level cloud migration plan indicator (Yes/No). Updates the CloudMigrationPlan field.",
                    "example": "Yes",
                    "nullable": true
                  },
                  "movingToCloudDate": {
                    "type": "string",
                    "description": "System-level planned date for moving to cloud. Updates the CloudMigratedDate field.",
                    "example": "2025-01-01",
                    "nullable": true
                  },
                  "Deployments": {
                    "type": "array",
                    "description": "List of deployments to add, update, or delete. Only deployments with matching systemId and valid DataCenter.id will be processed.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Deployment GUID (required for update/delete operations, must be null for new deployments).",
                          "example": "{11111111-2222-3333-4444-555555555555}",
                          "nullable": true
                        },
                        "name": {
                          "type": "string",
                          "description": "Deployment name.",
                          "example": "Production Deployment",
                          "nullable": true
                        },
                        "description": {
                          "type": "string",
                          "description": "Deployment description.",
                          "example": "Main production environment for the system.",
                          "nullable": true
                        },
                        "deploymentType": {
                          "type": "string",
                          "description": "Type of deployment environment. Maps to both DataCenterType and Environment fields in the database.",
                          "example": "Physical Data Center",
                          "nullable": true
                        },
                        "systemId": {
                          "type": "string",
                          "description": "The ID of the system this deployment belongs to. Must match the top-level systemId.",
                          "example": "{11111111-2222-3333-4444-555555555555}"
                        },
                        "systemName": {
                          "type": "string",
                          "description": "Name of the system.",
                          "example": "My System",
                          "nullable": true
                        },
                        "systemVersion": {
                          "type": "string",
                          "description": "Version of the system.",
                          "example": "1.0",
                          "nullable": true
                        },
                        "status": {
                          "type": "string",
                          "description": "Status of the deployment relationship. Maps to RelationshipStatus field.",
                          "example": "Active",
                          "nullable": true
                        },
                        "state": {
                          "type": "string",
                          "description": "State of the deployment.",
                          "example": "Operational",
                          "nullable": true
                        },
                        "startDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Start date of the deployment.",
                          "example": "2023-01-01T00:00:00Z",
                          "nullable": true
                        },
                        "endDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "End date of the deployment.",
                          "example": "2026-12-31T23:59:59Z",
                          "nullable": true
                        },
                        "deploymentElementId": {
                          "type": "string",
                          "description": "ID of the deployment element in Alfabet.",
                          "example": "de_12345",
                          "nullable": true
                        },
                        "contractorName": {
                          "type": "string",
                          "description": "Name of the contractor managing the deployment. Maps to ContractorName field.",
                          "example": "Contractor A",
                          "nullable": true
                        },
                        "hasProductionData": {
                          "type": "string",
                          "description": "Indicates if the deployment has production data (Yes/No). Maps to ProductionDataUseFlag field. Defaults to \"No\".",
                          "example": "Yes",
                          "nullable": true
                        },
                        "wanType": {
                          "type": "string",
                          "description": "Type of WAN connection.",
                          "example": "MPLS",
                          "nullable": true
                        },
                        "wanTypeOther": {
                          "type": "string",
                          "description": "Other WAN type if not in enum.",
                          "example": "Custom VPN",
                          "nullable": true
                        },
                        "usersRequiringMFA": {
                          "type": "string",
                          "description": "Number or description of users requiring MFA. Maps to both MultiFactorAuthentication and UsersRequiringMultifactorAuthentication fields. Defaults to \"No\".",
                          "example": "All external users",
                          "nullable": true
                        },
                        "otherSpecialUsers": {
                          "type": "string",
                          "description": "Description of other special users.",
                          "example": "Auditors from third-party",
                          "nullable": true
                        },
                        "networkEncryption": {
                          "type": "string",
                          "description": "Details about network encryption.",
                          "example": "AES-256",
                          "nullable": true
                        },
                        "awsEnclave": {
                          "type": "string",
                          "description": "AWS enclave information.",
                          "example": "GovCloud",
                          "nullable": true
                        },
                        "awsEnclaveOther": {
                          "type": "string",
                          "description": "Other AWS enclave details.",
                          "example": "Custom VPC",
                          "nullable": true
                        },
                        "DataCenter": {
                          "type": "object",
                          "description": "Associated Data Center information. The id field is required for deployments to be processed.",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Data Center ID (required for deployment processing). Must exist in the Output_DataCenter table.",
                              "example": "{66666666-7777-8888-9999-AAAAAAAAAAAA}"
                            },
                            "name": {
                              "type": "string",
                              "description": "Data Center Name.",
                              "example": "East Coast DC",
                              "nullable": true
                            },
                            "version": {
                              "type": "string",
                              "description": "Data Center Version.",
                              "example": "1.0",
                              "nullable": true
                            },
                            "description": {
                              "type": "string",
                              "description": "Data Center Description.",
                              "example": "Primary data center for region.",
                              "nullable": true
                            },
                            "status": {
                              "type": "string",
                              "description": "Data Center Status.",
                              "example": "Operational",
                              "nullable": true
                            },
                            "state": {
                              "type": "string",
                              "description": "Data Center State.",
                              "example": "VA",
                              "nullable": true
                            },
                            "startDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Data Center Start Date.",
                              "example": "2020-01-01T00:00:00Z",
                              "nullable": true
                            },
                            "endDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Data Center End Date.",
                              "example": "2030-01-01T00:00:00Z",
                              "nullable": true
                            },
                            "address1": {
                              "type": "string",
                              "description": "Data Center Address Line 1.",
                              "example": "123 Main St",
                              "nullable": true
                            },
                            "address2": {
                              "type": "string",
                              "description": "Data Center Address Line 2.",
                              "example": "Suite 100",
                              "nullable": true
                            },
                            "city": {
                              "type": "string",
                              "description": "Data Center City.",
                              "example": "Anytown",
                              "nullable": true
                            },
                            "addressState": {
                              "type": "string",
                              "description": "Data Center State (full name or abbreviation).",
                              "example": "Virginia",
                              "nullable": true
                            },
                            "zip": {
                              "type": "string",
                              "description": "Data Center Zip Code.",
                              "example": "12345",
                              "nullable": true
                            }
                          },
                          "nullable": true
                        },
                        "deleted": {
                          "type": "boolean",
                          "description": "Set to true to mark this deployment for deletion. Requires id field to be present.",
                          "example": false,
                          "nullable": true
                        },
                        "updated": {
                          "type": "boolean",
                          "description": "Set to true to mark this deployment for update. Requires id field to be present.",
                          "example": false,
                          "nullable": true
                        }
                      }
                    },
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "Data center information updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Data centers updated successfully"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing systemId, invalid DataCenter ID, or malformed request.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Missing required input \"System ID\""
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves the deployment information including the data center or cloud service provider information, for given System ID",
        "parameters": [
          {
            "name": "systemId",
            "in": "query",
            "description": "ID of the system that the deployment(s) is associated with",
            "required": true,
            "schema": {
              "type": "string",
              "example": "123-45-67"
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "Deployment state",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "active",
                "planned",
                "retired"
              ],
              "example": "active"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Deployment status",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "approved",
                "draft"
              ],
              "example": "approved"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Deployment type",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "Development",
                "Implementation",
                "Integration",
                "Production",
                "Testing",
                "Training",
                "Validation",
                "Other"
              ],
              "example": "Production"
            }
          }
        ],
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved system summary list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "systemId": {
                      "type": "string",
                      "example": "123-45-67"
                    },
                    "pageName": {
                      "type": "string",
                      "example": "DataCenterHostingEnvironments"
                    },
                    "movingToCloud": {
                      "type": "string",
                      "example": "Yes"
                    },
                    "movingToCloudDate": {
                      "type": "string",
                      "format": "date",
                      "example": "2021-10-01"
                    },
                    "count": {
                      "type": "integer"
                    },
                    "Deployments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "deleted": {
                            "type": "boolean"
                          },
                          "updated": {
                            "type": "boolean"
                          },
                          "Deployment": {
                            "type": "object",
                            "required": [
                              "id",
                              "name",
                              "systemId"
                            ],
                            "properties": {
                              "id": {
                                "type": "string",
                                "example": "351-1-0"
                              },
                              "name": {
                                "type": "string",
                                "example": "Accountable Care Organization Management System v.1.0 (COOP DR)"
                              },
                              "description": {
                                "type": "string"
                              },
                              "deploymentType": {
                                "type": "string",
                                "enum": [
                                  "Development",
                                  "Implementation",
                                  "Integration",
                                  "Production",
                                  "Testing",
                                  "Training",
                                  "Validation",
                                  "Other"
                                ]
                              },
                              "systemId": {
                                "type": "string",
                                "example": "326-1-0"
                              },
                              "systemName": {
                                "type": "string",
                                "example": "Health Insurance and Oversight System"
                              },
                              "systemVersion": {
                                "type": "string",
                                "example": "1"
                              },
                              "status": {
                                "type": "string",
                                "enum": [
                                  "approved",
                                  "draft"
                                ]
                              },
                              "state": {
                                "type": "string",
                                "enum": [
                                  "active",
                                  "planned",
                                  "retired"
                                ]
                              },
                              "startDate": {
                                "type": "string",
                                "format": "date"
                              },
                              "endDate": {
                                "type": "string",
                                "format": "date"
                              },
                              "deploymentElementId": {
                                "type": "string",
                                "example": "69-1-0"
                              },
                              "contractorName": {
                                "type": "string",
                                "example": "Acumen"
                              },
                              "hasProductionData": {
                                "type": "string",
                                "example": "yes"
                              },
                              "wanType": {
                                "type": "string",
                                "example": "Internet - Contractor"
                              },
                              "wanTypeOther": {
                                "type": "string",
                                "example": "Internet - Contractor"
                              },
                              "usersRequiringMFA": {
                                "type": "string",
                                "example": "End-users,Developers,System Administrators,Other Special Users"
                              },
                              "otherSpecialUsers": {
                                "type": "string",
                                "example": "end users"
                              },
                              "networkEncryption": {
                                "type": "string",
                                "example": "We do not encrypt network traffic leaving our system,We encrypt network traffic leaving our system to other systems on the CMS-internal network"
                              },
                              "awsEnclave": {
                                "type": "string",
                                "example": "AWS East"
                              },
                              "awsEnclaveOther": {
                                "type": "string",
                                "example": "AWS Pacific"
                              },
                              "DataCenter": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "55-1-0"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "CMS Baltimore Data Center - EDC4"
                                  },
                                  "version": {
                                    "type": "string",
                                    "example": "1"
                                  },
                                  "description": {
                                    "type": "string"
                                  },
                                  "status": {
                                    "type": "string",
                                    "enum": [
                                      "approved",
                                      "draft"
                                    ]
                                  },
                                  "state": {
                                    "type": "string",
                                    "enum": [
                                      "active",
                                      "planned",
                                      "retired"
                                    ]
                                  },
                                  "startDate": {
                                    "type": "string",
                                    "format": "date"
                                  },
                                  "endDate": {
                                    "type": "string",
                                    "format": "date"
                                  },
                                  "address1": {
                                    "type": "string",
                                    "example": "123 main street"
                                  },
                                  "address2": {
                                    "type": "string",
                                    "example": "suite 100"
                                  },
                                  "city": {
                                    "type": "string",
                                    "example": "New York"
                                  },
                                  "addressState": {
                                    "type": "string",
                                    "example": "NY"
                                  },
                                  "zip": {
                                    "type": "string",
                                    "example": "10002"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/System%20Census%20Core%20API/2.0.0/dataExchangeNotes": {
      "post": {
        "description": "Add a list of notes for a data exchange.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "ExchangeNotes": {
                    "type": "array",
                    "description": "List of data exchange notes to add.",
                    "items": {
                      "type": "object",
                      "required": [
                        "exchangeId",
                        "user",
                        "note"
                      ],
                      "properties": {
                        "exchangeId": {
                          "type": "string",
                          "description": "The ID of the data exchange system the note is for (maps to System_ID).",
                          "example": "{11111111-2222-3333-4444-555555555555}"
                        },
                        "date": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Timestamp when the note was created (will be set by server, should not be provided).",
                          "example": "2024-03-20T12:00:00Z",
                          "nullable": true
                        },
                        "user": {
                          "type": "string",
                          "description": "The ID of the user adding the note (maps to NOTES_USER).",
                          "example": "T3ST"
                        },
                        "role": {
                          "type": "string",
                          "description": "Role of the user (optional, maps to NOTES_USER_ROLE).",
                          "example": "Reviewer",
                          "nullable": true
                        },
                        "note": {
                          "type": "string",
                          "description": "The content of the note (maps to NOTES).",
                          "example": "This is a test note for data exchange."
                        }
                      }
                    }
                  },
                  "EmailFlags": {
                    "type": "object",
                    "description": "Flags for email notifications",
                    "properties": {
                      "notifyReviewer": {
                        "type": "boolean",
                        "description": "Whether to notify reviewers (defaults to false if not provided).",
                        "example": true
                      },
                      "notifyRespondent": {
                        "type": "boolean",
                        "description": "Whether to notify respondents (defaults to false if not provided).",
                        "example": true
                      },
                      "includeHistory": {
                        "type": "boolean",
                        "description": "Whether to include note history in the email (defaults to false if not provided for this specific service).",
                        "example": false
                      }
                    },
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Census Core"
        ],
        "responses": {
          "201": {
            "description": "Notes added successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "inserted": {
                      "type": "integer",
                      "description": "Number of notes inserted",
                      "example": 1
                    },
                    "updated": {
                      "type": "integer",
                      "description": "Number of notes updated (always 0 for add operation)",
                      "example": 0
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Get list of notes for a specific data exchange",
        "parameters": [
          {
            "in": "query",
            "name": "exchangeId",
            "schema": {
              "type": "string",
              "example": "{11111111-2222-3333-4444-555555555555}"
            },
            "required": true,
            "description": "The ID of the data exchange whose notes to retrieve."
          }
        ],
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "Successful response with a list of data exchange notes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 2
                    },
                    "ExchangeNotes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "noteId": {
                            "type": "string",
                            "example": "1234"
                          },
                          "exchangeId": {
                            "type": "string",
                            "example": "{11111111-2222-3333-4444-555555555555}"
                          },
                          "userId": {
                            "type": "string",
                            "example": "T3ST"
                          },
                          "createdOn": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-03-20T12:00:00Z"
                          },
                          "note": {
                            "type": "string",
                            "example": "This is a sample note"
                          },
                          "userRole": {
                            "type": "string",
                            "example": "Reviewer"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/System%20Census%20Core%20API/2.0.0/dataExchange/notes": {
      "delete": {
        "description": "Deletes notes associated with specific data exchange IDs. This endpoint removes notes from the SYSTEM_SURVEY_EXCHANGE_NOTES table based on the provided exchange IDs. This implementation matches the webmethods flow pageDataExchangeNotesDelete.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "An array of one or more data exchange IDs whose associated notes should be deleted. Can be provided as repeated parameters (id=123&id=456) or with bracket notation (id[]=123&id[]=456).",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "11111111-2222-3333-4444-555555555555"
              }
            }
          }
        ],
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "Notes deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "3 object(s) successfully deleted"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing, invalid IDs, or no objects found for the provided IDs",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/System%20Census%20Core%20API/2.0.0/dataExchange/status": {
      "delete": {
        "description": "Delete data exchange status records based on their exchange IDs.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "exchangeIds": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "format": "uuid",
                      "example": "11111111-2222-3333-4444-555555555555"
                    },
                    "description": "An array of exchange IDs to delete",
                    "minItems": 1
                  }
                },
                "required": [
                  "exchangeIds"
                ]
              }
            }
          }
        },
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "Data exchange status records deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "2 object(s) successfully deleted"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input or no objects found to delete",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Object(s) could not be found"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieve data exchange status information by system ID and optionally direction.",
        "parameters": [
          {
            "name": "systemId",
            "in": "query",
            "description": "ID of the system to retrieve data exchange status information about.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "11111111-2222-3333-4444-555555555555"
            }
          },
          {
            "name": "direction",
            "in": "query",
            "description": "Direction of the data exchange.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "both",
                "receiver",
                "sender"
              ],
              "example": "both"
            }
          }
        ],
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved data exchange status information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Number of exchange statuses returned.",
                      "example": 1
                    },
                    "ExchangeStatus": {
                      "type": "array",
                      "description": "List of exchange statuses.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "exchangeId": {
                            "type": "string",
                            "description": "The exchange identifier.",
                            "example": "11111111-2222-3333-4444-555555555555",
                            "nullable": true
                          },
                          "systemId": {
                            "type": "string",
                            "description": "The system identifier.",
                            "example": "11111111-2222-3333-4444-555555555555",
                            "nullable": true
                          },
                          "systemStatus": {
                            "type": "string",
                            "description": "Status of the system.",
                            "example": "Completed",
                            "nullable": true
                          },
                          "partnerId": {
                            "type": "string",
                            "description": "The partner identifier.",
                            "example": "11111111-2222-3333-4444-555555555555",
                            "nullable": true
                          },
                          "partnerStatus": {
                            "type": "string",
                            "description": "Status of the partner.",
                            "example": "Completed",
                            "nullable": true
                          },
                          "reviewerStatus": {
                            "type": "string",
                            "description": "Status from reviewer.",
                            "example": "Reviewed",
                            "nullable": true
                          },
                          "direction": {
                            "type": "string",
                            "enum": [
                              "receiver",
                              "sender"
                            ],
                            "description": "Direction of the data exchange.",
                            "example": "receiver",
                            "nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing or invalid systemId parameter, or invalid direction",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/System%20Census%20Core%20API/2.0.0/page/dataExchange": {
      "post": {
        "description": "Add or update data exchange information for a system. A data exchange can be between two CMS IT systems or between a CMS system and a non-CMS stakeholder.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "systemId",
                  "pageName",
                  "DataExchanges"
                ],
                "properties": {
                  "systemId": {
                    "type": "string",
                    "description": "The ID of the system the data exchanges are for.",
                    "example": "{11111111-2222-3333-4444-555555555555}"
                  },
                  "pageName": {
                    "type": "string",
                    "description": "The name of the page this data is associated with (should be \"DataExchange\").",
                    "example": "DataExchange"
                  },
                  "count": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Count of data exchanges in the list (optional, derived from array length).",
                    "example": 1,
                    "nullable": true
                  },
                  "DataExchanges": {
                    "type": "array",
                    "description": "List of data exchange records to add or update.",
                    "items": {
                      "type": "object",
                      "required": [
                        "Exchange",
                        "Status"
                      ],
                      "properties": {
                        "direction": {
                          "type": "string",
                          "description": "Direction of the exchange (e.g., \"receiver\", \"sender\").",
                          "example": "receiver",
                          "nullable": true
                        },
                        "deleted": {
                          "type": "boolean",
                          "description": "Flag indicating if the record is logically deleted.",
                          "example": false,
                          "nullable": true
                        },
                        "updated": {
                          "type": "boolean",
                          "description": "Flag indicating if the record is updated (must be true for updates, false for adds).",
                          "example": false,
                          "nullable": true
                        },
                        "Exchange": {
                          "type": "object",
                          "description": "Detailed data exchange information.",
                          "properties": {
                            "exchangeId": {
                              "type": "string",
                              "description": "Unique identifier for the data exchange. Required for updates, null for adds.",
                              "example": "11111111-2222-3333-4444-555555555555",
                              "nullable": true
                            },
                            "exchangeName": {
                              "type": "string",
                              "description": "Name of the data exchange.",
                              "example": "Test Data Exchange",
                              "nullable": true
                            },
                            "exchangeDescription": {
                              "type": "string",
                              "description": "Description of the data exchange.",
                              "example": "This is a test description.",
                              "nullable": true
                            },
                            "exchangeVersion": {
                              "type": "string",
                              "description": "Version of the data exchange.",
                              "example": "1.0",
                              "nullable": true
                            },
                            "echangesState": {
                              "type": "string",
                              "description": "State of the data exchange (e.g., \"Active\").",
                              "example": "Active",
                              "nullable": true
                            },
                            "exchangeStartDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Start date of the exchange.",
                              "example": "2023-01-01",
                              "nullable": true
                            },
                            "exchangeEndDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "End date of the exchange.",
                              "example": "2023-12-31",
                              "nullable": true
                            },
                            "exchangeRetiredDate": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Retired date of the exchange.",
                              "example": "2024-01-01",
                              "nullable": true
                            },
                            "fromOwnerId": {
                              "type": "string",
                              "description": "ID of the system/owner from which data flows.",
                              "example": "{66666666-7777-8888-9999-AAAAAAAAAAAA}",
                              "nullable": true
                            },
                            "fromOwnerName": {
                              "type": "string",
                              "description": "Name of the system/owner from which data flows.",
                              "example": "Source System",
                              "nullable": true
                            },
                            "fromOwnerType": {
                              "type": "string",
                              "description": "Type of the source owner (e.g., \"application\").",
                              "example": "application",
                              "nullable": true
                            },
                            "toOwnerId": {
                              "type": "string",
                              "description": "ID of the system/owner to which data flows.",
                              "example": "{BBBBBBBB-CCCC-DDDD-EEEE-FFFFFFFFFFFF}",
                              "nullable": true
                            },
                            "toOwnerName": {
                              "type": "string",
                              "description": "Name of the system/owner to which data flows.",
                              "example": "Target System",
                              "nullable": true
                            },
                            "toOwnerType": {
                              "type": "string",
                              "description": "Type of the target owner (e.g., \"application\").",
                              "example": "application",
                              "nullable": true
                            },
                            "connectionFrequency": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Frequency of data connection (e.g., \"Daily\", \"Weekly\").",
                              "example": [
                                "Daily",
                                "Weekly"
                              ],
                              "nullable": true
                            },
                            "dataExchangeAgreement": {
                              "type": "string",
                              "description": "Data exchange agreement status.",
                              "example": "Yes",
                              "nullable": true
                            },
                            "containsBeneficiaryAddress": {
                              "type": "string",
                              "enum": [
                                "Yes",
                                "No"
                              ],
                              "description": "Indicates if the exchange contains beneficiary address.",
                              "example": "Yes",
                              "nullable": true
                            },
                            "businessPurposeOfAddress": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Business purpose of address data.",
                              "example": [
                                "Purpose 1",
                                "Purpose 2"
                              ],
                              "nullable": true
                            },
                            "isAddressEditable": {
                              "type": "string",
                              "enum": [
                                "Yes",
                                "No"
                              ],
                              "description": "Indicates if the address is editable.",
                              "example": "No",
                              "nullable": true
                            },
                            "containsPii": {
                              "type": "string",
                              "enum": [
                                "Yes",
                                "No"
                              ],
                              "description": "Indicates if the exchange contains PII.",
                              "example": "Yes",
                              "nullable": true
                            },
                            "containsPhi": {
                              "type": "string",
                              "enum": [
                                "Yes",
                                "No"
                              ],
                              "description": "Indicates if the exchange contains PHI.",
                              "example": "Yes",
                              "nullable": true
                            },
                            "isBeneficiaryMailingFile": {
                              "type": "string",
                              "enum": [
                                "Yes",
                                "No"
                              ],
                              "description": "Indicates if it is a beneficiary mailing file.",
                              "example": "No",
                              "nullable": true
                            },
                            "sharedViaApi": {
                              "type": "string",
                              "enum": [
                                "Yes",
                                "No"
                              ],
                              "description": "Indicates if shared via API.",
                              "example": "Yes",
                              "nullable": true
                            },
                            "apiOwnership": {
                              "type": "string",
                              "description": "API ownership information.",
                              "example": "Internal",
                              "nullable": true
                            },
                            "typeOfData": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "example": "data-type-id"
                                  },
                                  "name": {
                                    "type": "string",
                                    "example": "Data Type Name"
                                  }
                                }
                              },
                              "description": "Type of data exchanged.",
                              "nullable": true
                            },
                            "numOfRecords": {
                              "type": "string",
                              "description": "Number of records in the exchange.",
                              "example": "1000",
                              "nullable": true
                            },
                            "dataFormat": {
                              "type": "string",
                              "description": "Format of the data.",
                              "example": "JSON",
                              "nullable": true
                            },
                            "dataFormatOther": {
                              "type": "string",
                              "description": "Other data format details.",
                              "example": "CSV",
                              "nullable": true
                            },
                            "exchangeContainsCUI": {
                              "type": "string",
                              "enum": [
                                "Yes",
                                "No"
                              ],
                              "description": "Indicates if exchange contains CUI.",
                              "example": "Yes",
                              "nullable": true
                            },
                            "exchangeConnectionAuthenticated": {
                              "type": "string",
                              "enum": [
                                "Yes",
                                "No"
                              ],
                              "description": "Indicates if exchange connection is authenticated.",
                              "example": "Yes",
                              "nullable": true
                            },
                            "exchangeCUIDescription": {
                              "type": "string",
                              "description": "Description of CUI.",
                              "example": "Sensitive CUI data.",
                              "nullable": true
                            },
                            "exchangeNetworkProtocol": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Network protocol used.",
                              "example": [
                                "HTTPS"
                              ],
                              "nullable": true
                            },
                            "exchangeNetworkProtocolOther": {
                              "type": "string",
                              "description": "Other network protocol details.",
                              "example": "Custom Protocol",
                              "nullable": true
                            },
                            "containsBankingData": {
                              "type": "string",
                              "enum": [
                                "Yes",
                                "No"
                              ],
                              "description": "Indicates if the exchange contains banking data.",
                              "example": "Yes",
                              "nullable": true
                            },
                            "exchangePrimaryDataArea": {
                              "type": "string",
                              "description": "The primary Data Reference Model (DRM) for the exchange.",
                              "example": "Primary DRM Name",
                              "nullable": true
                            },
                            "exchangeSecondaryDataArea": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Array of secondary Data Reference Models (DRMs) for the exchange. The exchangePrimaryDataArea must be included in this array.",
                              "example": [
                                "Primary DRM Name",
                                "Secondary DRM 1",
                                "Secondary DRM 2"
                              ],
                              "nullable": true
                            }
                          }
                        },
                        "Status": {
                          "type": "object",
                          "description": "Status information for the data exchange.",
                          "required": [
                            "systemId",
                            "systemStatus",
                            "partnerStatus",
                            "reviewerStatus",
                            "direction"
                          ],
                          "properties": {
                            "exchangeId": {
                              "type": "string",
                              "description": "Unique identifier for the data exchange (populated for existing exchanges).",
                              "example": "11111111-2222-3333-4444-555555555555",
                              "nullable": true
                            },
                            "systemId": {
                              "type": "string",
                              "description": "ID of the system.",
                              "example": "{11111111-2222-3333-4444-555555555555}"
                            },
                            "systemStatus": {
                              "type": "string",
                              "description": "Status of the system side of the exchange.",
                              "example": "default"
                            },
                            "partnerId": {
                              "type": "string",
                              "description": "ID of the partner.",
                              "example": "{BBBBBBBB-CCCC-DDDD-EEEE-FFFFFFFFFFFF}",
                              "nullable": true
                            },
                            "partnerStatus": {
                              "type": "string",
                              "description": "Status of the partner side of the exchange.",
                              "example": "default"
                            },
                            "reviewerStatus": {
                              "type": "string",
                              "description": "Status assigned by the reviewer.",
                              "example": "default"
                            },
                            "direction": {
                              "type": "string",
                              "description": "Direction of the exchange for status tracking (e.g., \"receiver\", \"sender\").",
                              "example": "receiver"
                            },
                            "deleted": {
                              "type": "boolean",
                              "description": "Flag indicating if the status record is logically deleted.",
                              "example": false,
                              "nullable": true
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "Data exchanges updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Data exchanges updated successfully"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieve data exchange information by system ID and optionally version.",
        "parameters": [
          {
            "name": "systemId",
            "in": "query",
            "description": "ID of the system to retrieve data exchange information about.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "11111111-2222-3333-4444-555555555555"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "Version of the data exchanges to be retrieved.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "1"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved data exchange information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "systemId": {
                      "type": "string",
                      "example": "11111111-2222-3333-4444-555555555555"
                    },
                    "pageName": {
                      "type": "string",
                      "example": "DataExchanges"
                    },
                    "count": {
                      "type": "integer",
                      "example": 1
                    },
                    "DataExchanges": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "direction": {
                            "type": "string",
                            "example": "receiver",
                            "nullable": true
                          },
                          "deleted": {
                            "type": "boolean",
                            "example": false,
                            "nullable": true
                          },
                          "Exchange": {
                            "type": "object",
                            "properties": {
                              "exchangeId": {
                                "type": "string",
                                "example": "11111111-2222-3333-4444-555555555555",
                                "nullable": true
                              },
                              "exchangeName": {
                                "type": "string",
                                "example": "Sample Exchange",
                                "nullable": true
                              },
                              "exchangeDescription": {
                                "type": "string",
                                "example": "Description of sample exchange",
                                "nullable": true
                              },
                              "exchangeVersion": {
                                "type": "string",
                                "example": "1",
                                "nullable": true
                              },
                              "exchangeState": {
                                "type": "string",
                                "example": "Active",
                                "nullable": true
                              },
                              "exchangeStartDate": {
                                "type": "string",
                                "format": "date",
                                "example": "2023-01-01",
                                "nullable": true
                              },
                              "exchangeEndDate": {
                                "type": "string",
                                "format": "date",
                                "example": "2023-12-31",
                                "nullable": true
                              },
                              "exchangeRetiredDate": {
                                "type": "string",
                                "format": "date",
                                "example": null,
                                "nullable": true
                              },
                              "fromOwnerId": {
                                "type": "string",
                                "example": "11111111-2222-3333-4444-555555555555",
                                "nullable": true
                              },
                              "fromOwnerName": {
                                "type": "string",
                                "example": "System A",
                                "nullable": true
                              },
                              "fromOwnerType": {
                                "type": "string",
                                "example": "Application",
                                "nullable": true
                              },
                              "toOwnerId": {
                                "type": "string",
                                "example": "11111111-2222-3333-4444-555555555555",
                                "nullable": true
                              },
                              "toOwnerName": {
                                "type": "string",
                                "example": "System B",
                                "nullable": true
                              },
                              "toOwnerType": {
                                "type": "string",
                                "example": "Application",
                                "nullable": true
                              },
                              "connectionFrequency": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "Daily"
                                ],
                                "nullable": true
                              },
                              "dataExchangeAgreement": {
                                "type": "string",
                                "example": "MOU",
                                "nullable": true
                              },
                              "containsBeneficiaryAddress": {
                                "type": "string",
                                "enum": [
                                  "Yes",
                                  "No"
                                ],
                                "example": "No",
                                "nullable": true
                              },
                              "businessPurposeOfAddress": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "Enrollment"
                                ],
                                "nullable": true
                              },
                              "isAddressEditable": {
                                "type": "string",
                                "enum": [
                                  "Yes",
                                  "No"
                                ],
                                "example": "No",
                                "nullable": true
                              },
                              "containsPii": {
                                "type": "string",
                                "enum": [
                                  "Yes",
                                  "No"
                                ],
                                "example": "Yes",
                                "nullable": true
                              },
                              "containsPhi": {
                                "type": "string",
                                "enum": [
                                  "Yes",
                                  "No"
                                ],
                                "example": "No",
                                "nullable": true
                              },
                              "containsBankingData": {
                                "type": "string",
                                "enum": [
                                  "Yes",
                                  "No"
                                ],
                                "example": "No",
                                "nullable": true
                              },
                              "isBeneficiaryMailingFile": {
                                "type": "string",
                                "enum": [
                                  "Yes",
                                  "No"
                                ],
                                "example": "No",
                                "nullable": true
                              },
                              "sharedViaApi": {
                                "type": "string",
                                "enum": [
                                  "Yes",
                                  "No"
                                ],
                                "example": "Yes",
                                "nullable": true
                              },
                              "apiOwnership": {
                                "type": "string",
                                "example": "Internal",
                                "nullable": true
                              },
                              "typeOfData": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "example": "TD1",
                                      "nullable": true
                                    },
                                    "name": {
                                      "type": "string",
                                      "example": "Patient Demographics",
                                      "nullable": true
                                    }
                                  }
                                },
                                "nullable": true
                              },
                              "numOfRecords": {
                                "type": "string",
                                "example": "1000",
                                "nullable": true
                              },
                              "dataFormat": {
                                "type": "string",
                                "example": "JSON",
                                "nullable": true
                              },
                              "dataFormatOther": {
                                "type": "string",
                                "example": null,
                                "nullable": true
                              },
                              "exchangeContainsCUI": {
                                "type": "string",
                                "enum": [
                                  "Yes",
                                  "No"
                                ],
                                "example": "No",
                                "nullable": true
                              },
                              "exchangeCUIDescription": {
                                "type": "string",
                                "example": null,
                                "nullable": true
                              },
                              "exchangeCUIType": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "Controlled"
                                ],
                                "nullable": true
                              },
                              "exchangeConnectionAuthenticated": {
                                "type": "string",
                                "enum": [
                                  "Yes",
                                  "No"
                                ],
                                "example": "Yes",
                                "nullable": true
                              },
                              "exchangeNetworkProtocol": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "example": [
                                  "HTTPS"
                                ],
                                "nullable": true
                              },
                              "exchangeNetworkProtocolOther": {
                                "type": "string",
                                "example": null,
                                "nullable": true
                              },
                              "exchangePrimaryDataArea": {
                                "type": "string",
                                "description": "The primary Data Reference Model (DRM) for the exchange.",
                                "example": "Primary DRM Name",
                                "nullable": true
                              },
                              "exchangeSecondaryDataArea": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Array of secondary Data Reference Models (DRMs) for the exchange.",
                                "example": [
                                  "Primary DRM Name",
                                  "Secondary DRM 1",
                                  "Secondary DRM 2"
                                ],
                                "nullable": true
                              }
                            }
                          },
                          "Status": {
                            "type": "object",
                            "properties": {
                              "exchangeId": {
                                "type": "string",
                                "example": "11111111-2222-3333-4444-555555555555",
                                "nullable": true
                              },
                              "systemId": {
                                "type": "string",
                                "example": "11111111-2222-3333-4444-555555555555",
                                "nullable": true
                              },
                              "systemStatus": {
                                "type": "string",
                                "example": "Completed",
                                "nullable": true
                              },
                              "partnerId": {
                                "type": "string",
                                "example": "11111111-2222-3333-4444-555555555555",
                                "nullable": true
                              },
                              "partnerStatus": {
                                "type": "string",
                                "example": "Completed",
                                "nullable": true
                              },
                              "reviewerStatus": {
                                "type": "string",
                                "example": "Reviewed",
                                "nullable": true
                              },
                              "direction": {
                                "type": "string",
                                "example": "receiver",
                                "nullable": true
                              },
                              "deleted": {
                                "type": "boolean",
                                "example": false,
                                "nullable": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/System%20Census%20Core%20API/2.0.0/drm": {
      "get": {
        "description": "Retrieves all Data Reference Model (DRM) flat hierarchy data for reference purposes.",
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved DRM flat hierarchy data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "records": {
                      "type": "array",
                      "description": "List of DRM flat hierarchy records.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "drmName": {
                            "type": "string",
                            "description": "The name of the DRM area (mapped from DRM Area Name).",
                            "example": "Health Care",
                            "nullable": true
                          },
                          "drmCategory": {
                            "type": "string",
                            "description": "The name of the DRM category (mapped from DRM Category Name).",
                            "example": "Health Care Delivery",
                            "nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/gateway/System%20Census%20Core%20API/2.0.0/note": {
      "post": {
        "summary": "Add Notes to System Census",
        "description": "Add one or more notes to a system in the census database. Notes are associated with specific pages within a system and can include optional email notifications to reviewers and respondents. Each note is automatically timestamped upon creation.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "Notes"
                ],
                "properties": {
                  "Notes": {
                    "type": "array",
                    "description": "Array of note objects to add to the system. Each note will be associated with a specific system and page.",
                    "minItems": 1,
                    "maxItems": 100,
                    "items": {
                      "type": "object",
                      "required": [
                        "systemId",
                        "pageName",
                        "userId",
                        "note"
                      ],
                      "properties": {
                        "noteId": {
                          "type": "string",
                          "description": "Unique identifier for the note. This field should NOT be provided when adding new notes as it will be auto-generated by the system.",
                          "example": "1234",
                          "nullable": true,
                          "readOnly": true
                        },
                        "systemId": {
                          "type": "string",
                          "description": "Unique identifier of the system in GUID format. This identifies which system census record the note belongs to.",
                          "example": "{11111111-2222-3333-4444-555555555555}",
                          "pattern": "^\\{[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}\\}$",
                          "minLength": 38,
                          "maxLength": 38
                        },
                        "pageName": {
                          "type": "string",
                          "description": "Name of the specific page or section within the system census where this note applies (e.g., \"Urls\", \"DataExchange\", \"Contracts\").",
                          "example": "Urls",
                          "minLength": 1,
                          "maxLength": 100
                        },
                        "userId": {
                          "type": "string",
                          "description": "User identifier of the person creating the note. This should match the authenticated user's ID.",
                          "example": "T3ST",
                          "minLength": 1,
                          "maxLength": 50
                        },
                        "userFirst": {
                          "type": "string",
                          "description": "First name of the user creating the note. Optional field that can be provided for display purposes.",
                          "example": "John",
                          "nullable": true,
                          "maxLength": 100
                        },
                        "userLast": {
                          "type": "string",
                          "description": "Last name of the user creating the note. Optional field that can be provided for display purposes.",
                          "example": "Doe",
                          "nullable": true,
                          "maxLength": 100
                        },
                        "userRole": {
                          "type": "string",
                          "description": "Role or job title of the user creating the note. Optional field for organizational context.",
                          "example": "Reviewer",
                          "nullable": true,
                          "maxLength": 100
                        },
                        "note": {
                          "type": "string",
                          "description": "The actual content/text of the note. This field contains the message or comment being added to the system.",
                          "example": "This system requires additional security review before deployment to production environment.",
                          "minLength": 1,
                          "maxLength": 4000
                        },
                        "createdOn": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Timestamp when the note was created. This field is automatically set by the server and should NOT be provided in requests.",
                          "example": "2024-03-20T12:00:00Z",
                          "nullable": true,
                          "readOnly": true
                        }
                      }
                    }
                  },
                  "EmailFlags": {
                    "type": "object",
                    "description": "Optional configuration for email notifications when notes are added. If not provided, no email notifications will be sent.",
                    "properties": {
                      "notifyReviewer": {
                        "type": "boolean",
                        "description": "Send email notification to system reviewers when notes are added. Defaults to false if not specified.",
                        "example": true,
                        "default": false
                      },
                      "notifyRespondent": {
                        "type": "boolean",
                        "description": "Send email notification to system respondents when notes are added. Defaults to false if not specified.",
                        "example": true,
                        "default": false
                      },
                      "includeHistory": {
                        "type": "boolean",
                        "description": "Include previous note history in the email notification. Only applies when notifications are enabled. Defaults to true if not specified.",
                        "example": true,
                        "default": true
                      }
                    },
                    "nullable": true
                  }
                },
                "example": {
                  "Notes": [
                    {
                      "systemId": "{11111111-2222-3333-4444-555555555555}",
                      "pageName": "Urls",
                      "userId": "T3ST",
                      "userFirst": "John",
                      "userLast": "Doe",
                      "userRole": "System Reviewer",
                      "note": "This system requires additional security review before deployment to production environment."
                    },
                    {
                      "systemId": "{11111111-2222-3333-4444-555555555555}",
                      "pageName": "DataExchange",
                      "userId": "T3ST",
                      "userFirst": "John",
                      "userLast": "Doe",
                      "userRole": "System Reviewer",
                      "note": "Data exchange protocols need to be updated to comply with new security standards."
                    }
                  ],
                  "EmailFlags": {
                    "notifyReviewer": true,
                    "notifyRespondent": false,
                    "includeHistory": true
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "Notes successfully added to the system. The response indicates how many notes were inserted and confirms the operation completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "result",
                    "message"
                  ],
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "Operation result status. Always \"success\" for successful operations.",
                      "example": "success",
                      "enum": [
                        "success"
                      ]
                    },
                    "message": {
                      "type": "array",
                      "description": "Array of descriptive messages about the operation results, including count of notes inserted.",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Inserted 2 note(s)",
                        "Email notifications sent to reviewers"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        },
        "security": [
          {
            "GatewayApikey": []
          }
        ]
      },
      "put": {
        "description": "Update a specific note by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The ID of the note to update",
            "required": true,
            "schema": {
              "type": "string",
              "example": "3998"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "note"
                ],
                "properties": {
                  "note": {
                    "type": "string",
                    "description": "The updated content of the note",
                    "example": "This is the updated note content."
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "Note updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Updated 1 note(s)"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing or invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/System%20Census%20Core%20API/2.0.0/note/list": {
      "delete": {
        "description": "Delete a list of notes based on their ID(s).",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "An array of one or more note IDs to delete. Can be provided as repeated parameters (id=123&id=456) or with bracket notation (id[]=123&id[]=456).",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "example": "11111111-2222-3333-4444-555555555555"
              }
            }
          }
        ],
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "Notes deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Deleted 1 note(s)"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieve a list of notes based on a system ID and page name.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "A system's ID",
            "required": true,
            "schema": {
              "type": "string",
              "example": "{11111111-2222-3333-4444-555555555555}"
            }
          },
          {
            "name": "pageName",
            "in": "query",
            "description": "The system census page name",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Urls"
            }
          }
        ],
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 1
                    },
                    "Notes": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "noteId": {
                            "type": "string",
                            "example": "3998"
                          },
                          "systemId": {
                            "type": "string",
                            "example": "{11111111-2222-3333-4444-555555555555}"
                          },
                          "pageName": {
                            "type": "string",
                            "example": "Urls"
                          },
                          "userId": {
                            "type": "string",
                            "example": "T3ST"
                          },
                          "userFirst": {
                            "type": "string",
                            "example": "Test"
                          },
                          "userLast": {
                            "type": "string",
                            "example": "User"
                          },
                          "userRole": {
                            "type": "string",
                            "example": "Reviewer"
                          },
                          "note": {
                            "type": "string",
                            "example": "This is a test note."
                          },
                          "createdOn": {
                            "type": "string",
                            "format": "date-time",
                            "example": "2024-03-20T12:00:00Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing or invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/System%20Census%20Core%20API/2.0.0/person": {
      "get": {
        "description": "Retrieve a list of persons from LDAP based on query criteria. At least one parameter must be provided for the search.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "A person's unique identifier (e.g., UID). If provided, this will be the primary search criterion.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "11111111-2222-3333-4444-555555555555",
              "nullable": true
            }
          },
          {
            "name": "userName",
            "in": "query",
            "description": "A person's username (often maps to commonName or uid in LDAP).",
            "required": false,
            "schema": {
              "type": "string",
              "example": "EUA1",
              "nullable": true
            }
          },
          {
            "name": "firstName",
            "in": "query",
            "description": "A person's first name. LDAP searches require a minimum of 2 alpha-characters.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "John",
              "nullable": true
            }
          },
          {
            "name": "lastName",
            "in": "query",
            "description": "A person's last name. LDAP searches require a minimum of 2 alpha-characters.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Doe",
              "nullable": true
            }
          },
          {
            "name": "phone",
            "in": "query",
            "description": "A person's phone number.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "123-456-7890",
              "nullable": true
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "A person's email address.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "john.doe@example.com",
              "nullable": true
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {}
              }
            }
          }
        },
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "Successful response with a list of persons",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count",
                    "Users"
                  ],
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "The number of persons found.",
                      "example": 1
                    },
                    "Users": {
                      "type": "array",
                      "description": "A list of person objects matching the search criteria.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The unique identifier of the person.",
                            "example": "EUA1",
                            "nullable": true
                          },
                          "userName": {
                            "type": "string",
                            "description": "The username of the person.",
                            "example": "EUA1",
                            "nullable": true
                          },
                          "firstName": {
                            "type": "string",
                            "description": "The first name of the person.",
                            "example": "John",
                            "nullable": true
                          },
                          "lastName": {
                            "type": "string",
                            "description": "The last name of the person.",
                            "example": "Doe",
                            "nullable": true
                          },
                          "phone": {
                            "type": "string",
                            "description": "The phone number of the person.",
                            "example": "123-456-7890",
                            "nullable": true
                          },
                          "email": {
                            "type": "string",
                            "description": "The email address of the person.",
                            "example": "john.doe@example.com",
                            "nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid or missing search parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - authentication required or failed.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - an unexpected error occurred on the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/System%20Census%20Core%20API/2.0.0/softwareProducts": {
      "post": {
        "description": "Add or update software product details and system-level API/AI information.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "applicationId"
                ],
                "properties": {
                  "productOnly": {
                    "type": "boolean",
                    "description": "If true, only process SoftwareProducts section, skip system API/AI updates. Defaults to false.",
                    "example": false,
                    "nullable": true
                  },
                  "applicationId": {
                    "type": "string",
                    "description": "The ID of the system the software products are for.",
                    "example": "{11111111-2222-3333-4444-555555555555}"
                  },
                  "apisDeveloped": {
                    "type": "string",
                    "description": "Indicates if APIs are developed for the system.",
                    "example": "Yes",
                    "nullable": true
                  },
                  "apiDescPublished": {
                    "type": "string",
                    "description": "Indicates if API descriptions are published.",
                    "example": "Yes",
                    "nullable": true
                  },
                  "apiDescPubLocation": {
                    "type": "string",
                    "description": "Location where API descriptions are published.",
                    "example": "Example Portal",
                    "nullable": true
                  },
                  "apiDataArea": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "The data area(s) of the API.",
                    "example": [
                      "Financial Data",
                      "HR Data"
                    ],
                    "nullable": true
                  },
                  "apisAccessibility": {
                    "type": "string",
                    "description": "Accessibility of the APIs (e.g., Public, Private).",
                    "example": "Public",
                    "nullable": true
                  },
                  "apiFHIRUse": {
                    "type": "string",
                    "description": "Indicates if FHIR is used in the API.",
                    "example": "Yes",
                    "nullable": true
                  },
                  "apiFHIRUseOther": {
                    "type": "string",
                    "description": "Other details if FHIR is used.",
                    "example": "Specific FHIR standard.",
                    "nullable": true
                  },
                  "systemHasApiGateway": {
                    "type": "boolean",
                    "description": "Indicates if the system uses an API Gateway.",
                    "example": true,
                    "nullable": true
                  },
                  "apiHasPortal": {
                    "type": "boolean",
                    "description": "Indicates if the API has a portal.",
                    "example": true,
                    "nullable": true
                  },
                  "usesAiTech": {
                    "type": "string",
                    "description": "Indicates if the system uses AI technology.",
                    "example": "Yes",
                    "nullable": true
                  },
                  "developmentStage": {
                    "type": "string",
                    "description": "The development stage of AI technology.",
                    "example": "Production",
                    "nullable": true
                  },
                  "aiSolnCatg": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "AI solution category.",
                    "example": [
                      "Machine Learning",
                      "Natural Language Processing"
                    ],
                    "nullable": true
                  },
                  "aiSolnCatgOther": {
                    "type": "string",
                    "description": "Other details for AI solution category.",
                    "example": "Custom AI model.",
                    "nullable": true
                  },
                  "SoftwareProducts": {
                    "type": "array",
                    "description": "List of software product updates/additions/deletions.",
                    "items": {
                      "type": "object",
                      "required": [
                        "Products"
                      ],
                      "properties": {
                        "deleted": {
                          "type": "boolean",
                          "description": "Set to true to delete the associated software product connections. If true, only `systemSoftwareConnectionGuid` within `Products` is required for deletion.",
                          "example": false,
                          "nullable": true
                        },
                        "Products": {
                          "type": "array",
                          "description": "Details of the software product(s).",
                          "items": {
                            "type": "object",
                            "properties": {
                              "softwareProductId": {
                                "type": "string",
                                "description": "ID of the software product. If null, a new product will be created.",
                                "example": "d9e0f1d2-a3b4-c5d6-e7f8-9a0b1c2d3e4f",
                                "nullable": true
                              },
                              "technopedia_id": {
                                "type": "string",
                                "description": "Technopedia ID for the software product (required if adding a new product).",
                                "example": "TECH12345",
                                "nullable": true
                              },
                              "software_name": {
                                "type": "string",
                                "description": "Name of the software product (required if adding a new product).",
                                "example": "Windows Server",
                                "nullable": true
                              },
                              "vendor_name": {
                                "type": "string",
                                "description": "Vendor name for the software product (required if adding a new product).",
                                "example": "Microsoft",
                                "nullable": true
                              },
                              "category": {
                                "type": "string",
                                "description": "Category of the software product (e.g., Operating System, Database) (required if adding a new product).",
                                "example": "Operating System",
                                "nullable": true
                              },
                              "api_gateway_use": {
                                "type": "boolean",
                                "description": "Indicates if this software product is used as an API Gateway.",
                                "example": true,
                                "nullable": true
                              },
                              "provides_ai_capability": {
                                "type": "string",
                                "description": "Indicates if this software product provides AI capabilities.",
                                "example": "Yes",
                                "enum": [
                                  "Yes",
                                  "No"
                                ],
                                "nullable": true
                              },
                              "ela_purchase": {
                                "type": "string",
                                "description": "Details about Enterprise License Agreement purchase.",
                                "example": "Yes, via Enterprise Agreement",
                                "nullable": true
                              },
                              "ela_organization": {
                                "type": "string",
                                "description": "Organization name for ELA.",
                                "example": "IT Department",
                                "nullable": true
                              },
                              "systemSoftwareConnectionGuid": {
                                "type": "string",
                                "description": "GUID of the system-software connection. Required for update/delete operations.",
                                "example": "f8e7d6c5-b4a3-21c0-d9e8-76f5e4d3c2b1",
                                "nullable": true
                              },
                              "software_cost": {
                                "type": "string",
                                "description": "Cost associated with the software. Null values will be converted to empty string before saving.",
                                "example": "10000 USD",
                                "nullable": true
                              },
                              "actualVersion": {
                                "type": "string",
                                "description": "Actual version of the software deployed/installed (may differ from Technopedia version).",
                                "example": "2.5.1",
                                "nullable": true
                              },
                              "closestVersion": {
                                "type": "string",
                                "description": "If the exact version is not found, this indicates the closest available version.",
                                "example": "2.5.0",
                                "nullable": true
                              },
                              "softwareLicenseMechanismType": {
                                "type": "string",
                                "description": "Type of software license mechanism.",
                                "example": "Named User",
                                "enum": [
                                  "Named User",
                                  "Concurrent User",
                                  "Site License",
                                  "Processor",
                                  "Other"
                                ],
                                "nullable": true
                              },
                              "softwareLicenseMechanismTypeOther": {
                                "type": "string",
                                "description": "Custom license mechanism type description (used when softwareLicenseMechanismType is \"Other\").",
                                "example": "Custom per-project licensing",
                                "nullable": true
                              },
                              "numberOfLicensesBought": {
                                "type": "string",
                                "description": "Total number of licenses purchased for this software.",
                                "example": "100",
                                "nullable": true
                              },
                              "numberOfLicensesUtilized": {
                                "type": "string",
                                "description": "Number of licenses currently in use.",
                                "example": "75",
                                "nullable": true
                              },
                              "softwareLicenseNotes": {
                                "type": "string",
                                "description": "Free-text notes about software licensing.",
                                "example": "Renewal due in Q4 2024",
                                "nullable": true
                              },
                              "softwareNonELAPurchaseNotes": {
                                "type": "string",
                                "description": "Notes about how software was procured if not purchased under an ELA.",
                                "example": "Purchased via direct vendor contract",
                                "nullable": true
                              },
                              "isSaasProduct": {
                                "type": "string",
                                "description": "Indicates if this is a Software as a Service (SaaS) product.",
                                "example": "Yes",
                                "enum": [
                                  "Yes",
                                  "No"
                                ],
                                "nullable": true
                              },
                              "vendorOffersAIcapabilityviaSoftwareProduct": {
                                "type": "string",
                                "description": "Indicates if the software vendor currently offers AI capabilities through this software product.",
                                "example": "Yes",
                                "enum": [
                                  "Yes",
                                  "No"
                                ],
                                "nullable": true
                              },
                              "softwarePurchaseContractNumber": {
                                "type": "string",
                                "description": "Contract or purchase order number associated with the software purchase.",
                                "example": "CONTRACT-2024-12345",
                                "nullable": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "Software Products and system information processed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Software Products completed successfully."
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing or invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/System%20Census%20Core%20API/2.0.0/page/softwareProducts": {
      "get": {
        "description": "Get software products list for a system by system ID.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The ID of the system to retrieve software products for.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "{11111111-2222-3333-4444-555555555555}"
            }
          }
        ],
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "Software products list retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Software products information for the system",
                  "properties": {
                    "softwareProducts": {
                      "type": "array",
                      "description": "Array of software products associated with the system",
                      "items": {
                        "type": "object",
                        "properties": {
                          "software_name": {
                            "type": "string",
                            "description": "Name of the software product"
                          },
                          "vendor_name": {
                            "type": "string",
                            "description": "Vendor/manufacturer name"
                          },
                          "version": {
                            "type": "string",
                            "description": "Technopedia version"
                          },
                          "edition": {
                            "type": "string",
                            "description": "Technopedia edition (e.g., Professional, Enterprise)"
                          },
                          "actualVersion": {
                            "type": "string",
                            "description": "FY26: Actual version deployed/installed"
                          },
                          "closestVersion": {
                            "type": "string",
                            "description": "FY26: Closest available version if exact match not found"
                          },
                          "technopedia_id": {
                            "type": "string",
                            "description": "Technopedia Release ID"
                          },
                          "technopedia_category": {
                            "type": "string",
                            "description": "Software category from Technopedia"
                          },
                          "api_gateway_use": {
                            "type": "boolean",
                            "description": "Whether software is used as API gateway"
                          },
                          "provides_ai_capability": {
                            "type": "string",
                            "description": "Whether software provides AI capabilities",
                            "enum": [
                              "Yes",
                              "No"
                            ]
                          },
                          "software_cost": {
                            "type": "string",
                            "description": "Software cost"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing or invalid systemId parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/System%20Census%20Core%20API/2.0.0/status": {
      "post": {
        "description": "Adds or updates a list of system status records.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "Status"
                ],
                "properties": {
                  "Status": {
                    "type": "array",
                    "minItems": 1,
                    "description": "Array of status records to add or update",
                    "items": {
                      "type": "object",
                      "required": [
                        "systemId",
                        "pageName"
                      ],
                      "properties": {
                        "statusId": {
                          "type": "string",
                          "description": "The unique identifier of the status record (for updates)",
                          "example": "123",
                          "nullable": true
                        },
                        "systemId": {
                          "type": "string",
                          "description": "The unique identifier (GUID) of the system.",
                          "example": "{11111111-2222-3333-4444-555555555555}"
                        },
                        "pageName": {
                          "type": "string",
                          "description": "Name of the page/survey section.",
                          "example": "SystemBasicInfo"
                        },
                        "displayPageName": {
                          "type": "string",
                          "description": "Display name of the page/survey section.",
                          "example": "System Basic Information",
                          "nullable": true
                        },
                        "percentComplete": {
                          "type": "number",
                          "format": "float",
                          "description": "Percentage of completion for this page.",
                          "example": 75.5,
                          "minimum": 0,
                          "maximum": 100,
                          "nullable": true
                        },
                        "status": {
                          "type": "string",
                          "description": "Current status of the page.",
                          "example": "In Progress",
                          "enum": [
                            "Not Started",
                            "In Progress",
                            "Complete",
                            "Issues Found",
                            "Passed",
                            "Not Required"
                          ],
                          "nullable": true
                        },
                        "respondentId": {
                          "type": "string",
                          "description": "ID of the person responsible for this page.",
                          "example": "user123",
                          "nullable": true
                        },
                        "respondentFirstName": {
                          "type": "string",
                          "description": "First name of the page respondent.",
                          "example": "John",
                          "nullable": true
                        },
                        "respondentLastName": {
                          "type": "string",
                          "description": "Last name of the page respondent.",
                          "example": "Doe",
                          "nullable": true
                        },
                        "lastUpdatedDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Date and time when the record was last updated.",
                          "example": "2023-12-01T10:30:00Z",
                          "nullable": true
                        },
                        "lastUpdatedById": {
                          "type": "string",
                          "description": "ID of the person who last updated this record.",
                          "example": "user456",
                          "nullable": true
                        },
                        "lastUpdatedByFirstName": {
                          "type": "string",
                          "description": "First name of the person who last updated this record.",
                          "example": "Jane",
                          "nullable": true
                        },
                        "lastUpdatedByLastName": {
                          "type": "string",
                          "description": "Last name of the person who last updated this record.",
                          "example": "Smith",
                          "nullable": true
                        }
                      }
                    }
                  }
                },
                "example": {
                  "Status": [
                    {
                      "statusId": "123",
                      "systemId": "{11111111-2222-3333-4444-555555555555}",
                      "pageName": "SystemBasicInfo",
                      "displayPageName": "System Basic Information",
                      "status": "In Progress",
                      "percentComplete": 75.5,
                      "respondentId": "user123",
                      "respondentFirstName": "John",
                      "respondentLastName": "Doe",
                      "lastUpdatedDate": "2023-12-01T10:30:00Z",
                      "lastUpdatedById": "user456",
                      "lastUpdatedByFirstName": "Jane",
                      "lastUpdatedByLastName": "Smith"
                    },
                    {
                      "systemId": "{22222222-2222-3333-4444-555555555555}",
                      "pageName": "SystemArchitecture",
                      "displayPageName": "System Architecture",
                      "status": "Complete",
                      "percentComplete": 100,
                      "respondentId": "user789",
                      "respondentFirstName": "Bob",
                      "respondentLastName": "Wilson",
                      "lastUpdatedById": "user101",
                      "lastUpdatedByFirstName": "Alice",
                      "lastUpdatedByLastName": "Johnson"
                    }
                  ]
                }
              }
            }
          }
        },
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "Status records processed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "inserted": {
                      "type": "integer",
                      "description": "Number of new records inserted.",
                      "example": 2
                    },
                    "updated": {
                      "type": "integer",
                      "description": "Number of existing records updated.",
                      "example": 3
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Body must be an object with a Status list"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - Database operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Failed to insert status record"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Deletes one or more system status records by their IDs.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "description": "Comma-separated list of status record IDs to delete",
            "schema": {
              "type": "string",
              "pattern": "^\\d+(,\\d+)*$",
              "example": "123,456,789"
            }
          },
          {
            "name": "soft",
            "in": "query",
            "required": false,
            "description": "If true, performs a soft delete. If false or omitted, performs a hard delete.",
            "schema": {
              "type": "boolean",
              "default": false,
              "example": true
            }
          }
        ],
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "Status records deleted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "description": "Success message indicating number of records deleted.",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "1 object(s) successfully deleted"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid input parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "id query parameter is required"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - Database operation failed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "example": "Database operation failed"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves system census status information for systems and pages.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The unique identifier (GUID) of the system to filter by.",
            "example": "{11111111-2222-3333-4444-555555555555}"
          },
          {
            "name": "pageName",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "The specific census page name to filter by. Requires id parameter when provided.",
            "example": "SystemMaintainerBasicInfo"
          },
          {
            "name": "summarize",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            },
            "description": "Whether to return a summarized list per system.",
            "example": false
          }
        ],
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "System status data retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of status records returned.",
                      "example": 25
                    },
                    "status": {
                      "type": "array",
                      "description": "Array of system status records.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "SYSTEM_SURVEY_PAGE_STATUS_ID": {
                            "type": "integer",
                            "description": "Unique identifier for the system survey page status.",
                            "example": 12345
                          },
                          "APPLICATION_REFSTR": {
                            "type": "string",
                            "description": "Application reference string.",
                            "example": "{11111111-2222-3333-4444-555555555555}"
                          },
                          "PAGE_NAME": {
                            "type": "string",
                            "description": "Name of the census page.",
                            "example": "SystemMaintainerBasicInfo"
                          },
                          "STATUS": {
                            "type": "string",
                            "description": "Current status of the page.",
                            "example": "In Progress"
                          },
                          "PAGE_RESPONDENT": {
                            "type": "string",
                            "description": "Username of the page respondent.",
                            "example": "john.doe"
                          },
                          "PERCENT_COMPLETE": {
                            "type": "number",
                            "format": "float",
                            "description": "Percentage completion of the page.",
                            "example": 75.5
                          },
                          "LAST_UPDATED_DATE": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date and time when the page was last updated.",
                            "example": "2023-12-01T10:30:00Z"
                          },
                          "LAST_UPDATED_BY": {
                            "type": "string",
                            "description": "Username of the person who last updated the page.",
                            "example": "jane.smith"
                          },
                          "LAST_COMMUNICATION_DATE": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date and time of last communication.",
                            "example": "2023-11-28T14:15:00Z"
                          },
                          "DISPLAY_PAGE_NAME": {
                            "type": "string",
                            "description": "Display-friendly name of the page.",
                            "example": "System Maintainer - Basic Information"
                          },
                          "PAGE_RESPONDENT_FIRST_NAME": {
                            "type": "string",
                            "description": "First name of the page respondent.",
                            "example": "John"
                          },
                          "PAGE_RESPONDENT_LAST_NAME": {
                            "type": "string",
                            "description": "Last name of the page respondent.",
                            "example": "Doe"
                          },
                          "LAST_UPDATED_FIRST_NAME": {
                            "type": "string",
                            "description": "First name of the person who last updated the page.",
                            "example": "Jane"
                          },
                          "LAST_UPDATED_LAST_NAME": {
                            "type": "string",
                            "description": "Last name of the person who last updated the page.",
                            "example": "Smith"
                          },
                          "System_ID": {
                            "type": "string",
                            "description": "System identifier.",
                            "example": "{11111111-2222-3333-4444-555555555555}"
                          },
                          "LAST_RESPONDENT_DATE": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date and time when respondent last accessed.",
                            "example": "2023-11-25T09:00:00Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid parameters provided.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - Error executing database query.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/System%20Census%20Core%20API/2.0.0/system/ai-use": {
      "get": {
        "description": "Retrieves AI Use census data for a specific system by its GUID.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique identifier (GUID) of the system.",
            "example": "{11111111-2222-3333-4444-555555555555}"
          }
        ],
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "AI Use census data retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "record": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "System GUID",
                          "example": "{11111111-2222-3333-4444-555555555555}"
                        },
                        "pageName": {
                          "type": "string",
                          "example": "AIUseCensus"
                        },
                        "systemId": {
                          "type": "number",
                          "description": "Sparx System ID",
                          "example": 12345
                        },
                        "systemName": {
                          "type": "string",
                          "example": "System Name"
                        },
                        "description": {
                          "type": "string",
                          "nullable": true,
                          "example": "System Description"
                        },
                        "acronym": {
                          "type": "string",
                          "nullable": true,
                          "example": "SYS"
                        },
                        "objectState": {
                          "type": "string",
                          "nullable": true,
                          "example": "Active"
                        },
                        "cmsUUID": {
                          "type": "string",
                          "nullable": true,
                          "example": "cms-uuid-123"
                        },
                        "usesAITechnology": {
                          "type": "string",
                          "nullable": true,
                          "description": "Whether the system uses AI technology",
                          "example": "Yes"
                        },
                        "artificialIntelligence": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "nullable": true,
                          "description": "Types of artificial intelligence used",
                          "example": [
                            "Machine Learning",
                            "Natural Language Processing",
                            "Computer Vision"
                          ]
                        },
                        "artificialIntelligenceOtherDescription": {
                          "type": "string",
                          "nullable": true,
                          "description": "Description of other AI types not listed (supports longer text)",
                          "example": "Custom AI solution with advanced machine learning algorithms"
                        },
                        "aiProjectLifeCycleStage": {
                          "type": "string",
                          "nullable": true,
                          "description": "Current stage of AI project lifecycle",
                          "example": "Development"
                        },
                        "aiCapabilityImpact": {
                          "type": "string",
                          "nullable": true,
                          "description": "Impact level of AI capability",
                          "example": "High"
                        },
                        "aiCapabilityITGRReviewed": {
                          "type": "boolean",
                          "nullable": true,
                          "description": "Whether ITGR review has been completed",
                          "example": true
                        },
                        "aiCapabilityITGRSubmissionDate": {
                          "type": "string",
                          "nullable": true,
                          "description": "ITGR submission date",
                          "example": "2024-01-15"
                        },
                        "aiCapabilityITGRLifecycleAssigned": {
                          "type": "string",
                          "nullable": true,
                          "description": "Assigned lifecycle phase for ITGR",
                          "example": "Development"
                        },
                        "aiCapabilityITGRLifecycleMissing": {
                          "type": "string",
                          "nullable": true,
                          "description": "Whether lifecycle assignment is missing (Yes/No)",
                          "example": "No"
                        },
                        "aiCapabilitySensitiveInformationInvolved": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "nullable": true,
                          "description": "Types of sensitive information involved",
                          "example": [
                            "PII",
                            "PHI"
                          ]
                        },
                        "aiCapabilitySystemDataCategory": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "nullable": true,
                          "description": "System data categories",
                          "example": [
                            "Healthcare",
                            "Financial"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - missing or invalid id parameter.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "id is required as a query parameter"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "description": "System not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "System not found"
                      ]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "post": {
        "description": "Updates AI Use census information for a given system.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The unique identifier (GUID) of the system.",
                    "example": "{11111111-2222-3333-4444-555555555555}"
                  },
                  "usesAITechnology": {
                    "type": "string",
                    "description": "Whether the system uses AI technology (Yes/No)",
                    "example": "Yes",
                    "nullable": true
                  },
                  "artificialIntelligence": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Types of artificial intelligence used (e.g., Machine Learning, Natural Language Processing, Computer Vision)",
                    "example": [
                      "Machine Learning",
                      "Natural Language Processing",
                      "Computer Vision"
                    ],
                    "nullable": true
                  },
                  "artificialIntelligenceOtherDescription": {
                    "type": "string",
                    "description": "Description of other AI types not listed in the standard options (supports longer text)",
                    "example": "Custom AI solution with advanced machine learning algorithms",
                    "nullable": true
                  },
                  "aiProjectLifeCycleStage": {
                    "type": "string",
                    "description": "Current stage of AI project lifecycle (e.g., Planning, Development, Testing, Production)",
                    "example": "Development",
                    "nullable": true
                  },
                  "aiCapabilityImpact": {
                    "type": "string",
                    "description": "Impact level of AI capability (e.g., High, Medium, Low)",
                    "example": "High",
                    "nullable": true
                  },
                  "aiCapabilityITGRReviewed": {
                    "type": "string",
                    "description": "Whether ITGR (IT Governance Review) has been completed (Yes/No)",
                    "example": "Yes",
                    "nullable": true
                  },
                  "aiCapabilityITGRSubmissionDate": {
                    "type": "string",
                    "description": "Date when ITGR was submitted (YYYY-MM-DD)",
                    "example": "2024-01-15",
                    "nullable": true
                  },
                  "aiCapabilityITGRLifecycleAssigned": {
                    "type": "string",
                    "description": "Lifecycle phase assigned for ITGR (e.g., Development, Production)",
                    "example": "Development",
                    "nullable": true
                  },
                  "aiCapabilityITGRLifecycleMissing": {
                    "type": "string",
                    "description": "Whether lifecycle assignment is missing (Yes/No/Plans)",
                    "example": "No",
                    "nullable": true
                  },
                  "aiCapabilitySensitiveInformationInvolved": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Types of sensitive information involved (e.g., PII, PHI, Financial)",
                    "example": [
                      "PII",
                      "PHI"
                    ],
                    "nullable": true
                  },
                  "aiCapabilitySystemDataCategory": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Categories of system data (e.g., Healthcare, Financial)",
                    "example": [
                      "Healthcare",
                      "Financial"
                    ],
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "AI Use census information updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "description": "Success message.",
                      "example": "AI Use Census data updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Error message describing the validation failure.",
                      "example": [
                        "id is required in request body"
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "500": {
            "description": "Internal server error - failed to update AI Use census data.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "error"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Failed to update AI Use Census data"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gateway/System%20Census%20Core%20API/2.0.0/systemComponents": {
      "post": {
        "description": "Add, update or delete system components for a given system.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "systemId",
                  "SystemComponents"
                ],
                "properties": {
                  "systemId": {
                    "type": "string",
                    "description": "The ID of the parent system.",
                    "example": "{11111111-2222-3333-4444-555555555555}"
                  },
                  "SystemComponents": {
                    "type": "array",
                    "description": "An array of operations (add, update, or delete) for system components.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "updated": {
                          "type": "boolean",
                          "description": "Set to true for add/update operations.",
                          "example": true,
                          "nullable": true
                        },
                        "deleted": {
                          "type": "boolean",
                          "description": "Set to true for delete operations (soft delete).",
                          "example": false,
                          "nullable": true
                        },
                        "Components": {
                          "type": "array",
                          "description": "List of system components to be processed.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "componentId": {
                                "type": "string",
                                "description": "The ID of the component (required for update/delete, omitted for add).",
                                "example": "{66666666-7777-8888-9999-000000000000}",
                                "nullable": true
                              },
                              "componentName": {
                                "type": "string",
                                "description": "Name of the component (required for add).",
                                "example": "New Web Server",
                                "nullable": true
                              },
                              "componentAcronym": {
                                "type": "string",
                                "description": "Acronym of the component.",
                                "example": "NWS",
                                "nullable": true
                              },
                              "componentRetirementYear": {
                                "type": "string",
                                "description": "Planned retirement year of the component.",
                                "example": "2028",
                                "nullable": true
                              },
                              "componentRetirementQuarter": {
                                "type": "string",
                                "description": "Planned retirement quarter of the component.",
                                "example": "Q4",
                                "nullable": true
                              },
                              "description": {
                                "type": "string",
                                "description": "Description of the component.",
                                "example": "Handles all incoming web traffic.",
                                "nullable": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "System components processed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Software Components completed successfully.",
                        "Added to System successfully (New Component GUID: {GUID})"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieves a list of sub-systems or components that make up the overall system. If no components are found, an empty list is returned. This endpoint aligns with the Webmethods `pageSystemComponentsFind` service.",
        "parameters": [
          {
            "name": "systemId",
            "in": "query",
            "description": "ID of the system to retrieve system component information about.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "{11111111-2222-3333-4444-555555555555}"
            }
          }
        ],
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "Successful response with system components.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "example": 1
                    },
                    "parentSystem": {
                      "type": "string",
                      "description": "The name of the parent system.",
                      "example": "Example Parent System",
                      "nullable": true
                    },
                    "parentSystemId": {
                      "type": "string",
                      "description": "The GUID of the parent system.",
                      "example": "{11111111-2222-3333-4444-555555555555}",
                      "nullable": true
                    },
                    "isSubsystem": {
                      "type": "string",
                      "description": "The object state of the system being queried, indicating if it acts as a subsystem to another.",
                      "example": "Active",
                      "nullable": true
                    },
                    "noSubsystemFlag": {
                      "type": "boolean",
                      "description": "A flag indicating no subsystems exist. In the original Webmethods service, this field was defined but not populated by the service logic.",
                      "example": false,
                      "nullable": true
                    },
                    "SystemComponents": {
                      "type": "array",
                      "description": "List of system components (subsystems).",
                      "items": {
                        "type": "object",
                        "properties": {
                          "componentId": {
                            "type": "string",
                            "description": "The GUID of the subsystem component.",
                            "example": "{11111111-2222-3333-4444-666666666666}"
                          },
                          "componentName": {
                            "type": "string",
                            "description": "The name of the subsystem component.",
                            "example": "Example Subsystem"
                          },
                          "componentAcronym": {
                            "type": "string",
                            "description": "The acronym of the subsystem component.",
                            "example": "EPS",
                            "nullable": true
                          },
                          "componentRetirementYear": {
                            "type": "string",
                            "description": "The planned retirement year of the subsystem component.",
                            "example": "2028",
                            "nullable": true
                          },
                          "componentRetirementQuarter": {
                            "type": "string",
                            "description": "The planned retirement quarter of the subsystem component.",
                            "example": "Q4",
                            "nullable": true
                          },
                          "description": {
                            "type": "string",
                            "description": "A description of the subsystem component.",
                            "example": "Description of the subsystem.",
                            "nullable": true
                          },
                          "componentObjectState": {
                            "type": "string",
                            "description": "The object state of the subsystem component.",
                            "example": "Active",
                            "nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing or invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/System%20Census%20Core%20API/2.0.0/page/systemData": {
      "post": {
        "description": "Adds or updates system data page census information for a given system.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "systemGUID"
                ],
                "properties": {
                  "systemGUID": {
                    "type": "string",
                    "description": "The unique identifier (GUID) of the system.",
                    "example": "{11111111-2222-3333-4444-555555555555}"
                  },
                  "primaryDRM": {
                    "type": "string",
                    "description": "The primary Data Reference Model (DRM) for the system.",
                    "example": "Primary DRM Name",
                    "nullable": true
                  },
                  "secondaryDRM": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Array of secondary Data Reference Models (DRMs) for the system. If primaryDRM is also provided, it must be included in this array.",
                    "example": [
                      "Primary DRM Name",
                      "Secondary DRM 1",
                      "Secondary DRM 2"
                    ],
                    "nullable": true
                  },
                  "systemDataSummary": {
                    "type": "string",
                    "description": "Summary of the system data.",
                    "example": "This system manages patient data and billing information.",
                    "nullable": true
                  },
                  "systemDataAuthoritativeSource": {
                    "type": "string",
                    "description": "The authoritative source for the system data.",
                    "example": "Master Data Management System",
                    "nullable": true
                  },
                  "systemDataLocation": {
                    "type": "string",
                    "description": "Physical or logical location of the system data.",
                    "example": "AWS Cloud - US East Region",
                    "nullable": true
                  },
                  "systemDataLocationNotes": {
                    "type": "string",
                    "description": "Additional notes about the system data location.",
                    "example": "Data is replicated across multiple availability zones.",
                    "nullable": true
                  },
                  "amountofData": {
                    "type": "string",
                    "description": "Amount or volume of data managed by the system.",
                    "example": "Large (>1TB)",
                    "nullable": true
                  },
                  "systemDataInvolvement": {
                    "type": "string",
                    "description": "Description of how the system is involved with data management.",
                    "example": "Primary data collection and processing system.",
                    "nullable": true
                  },
                  "externalUserSensitiveDataAccess": {
                    "type": "string",
                    "description": "Whether external users have access to sensitive data.",
                    "example": "Yes",
                    "nullable": true
                  },
                  "permitsDataTransferOutsideUS": {
                    "type": "string",
                    "description": "Whether the system permits data transfer outside the United States.",
                    "example": "No",
                    "nullable": true
                  },
                  "apiDeveloped": {
                    "type": "string",
                    "description": "Whether APIs have been developed for the system.",
                    "example": "Yes",
                    "nullable": true
                  },
                  "doestheAPIuseFHIR": {
                    "type": "string",
                    "description": "Whether the API uses FHIR (Fast Healthcare Interoperability Resources) standards.",
                    "example": "Yes",
                    "nullable": true
                  },
                  "doestheAPIuseFHIROther": {
                    "type": "string",
                    "description": "Other FHIR-related information or specifications.",
                    "example": "FHIR R4",
                    "nullable": true
                  },
                  "beneficiaryInformation": {
                    "type": "string",
                    "description": "Information about beneficiaries associated with the system data.",
                    "example": "Medicare beneficiaries with chronic conditions.",
                    "nullable": true
                  },
                  "editBeneficiaryInformation": {
                    "type": "string",
                    "description": "Whether beneficiary information can be edited in the system.",
                    "example": "Yes",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "System data page census information added successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Success message.",
                      "example": [
                        "system data page census updated successfully"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the validation failure.",
                      "example": "the primaryDRM must be included in the secondaryDRM array"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      },
      "get": {
        "description": "Retrieves system data page census information for a given system or all systems.",
        "parameters": [
          {
            "name": "systemGUID",
            "in": "query",
            "description": "The unique identifier (GUID) of the system to retrieve data for.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "{11111111-2222-3333-4444-555555555555}"
          },
          {
            "name": "systemId",
            "in": "query",
            "description": "The system ID to retrieve data for.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "12345"
          }
        ],
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved system data page census information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "records": {
                      "type": "array",
                      "description": "List of system data page census records.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "sparxSystemId": {
                            "type": "integer",
                            "description": "The Sparx system ID.",
                            "example": 123,
                            "nullable": true
                          },
                          "sparxSystemGuid": {
                            "type": "string",
                            "description": "The Sparx system GUID.",
                            "example": "{11111111-2222-3333-4444-555555555555}",
                            "nullable": true
                          },
                          "systemName": {
                            "type": "string",
                            "description": "The name of the system.",
                            "example": "Example System",
                            "nullable": true
                          },
                          "acronym": {
                            "type": "string",
                            "description": "The acronym of the system.",
                            "example": "EXS",
                            "nullable": true
                          },
                          "amountOfData": {
                            "type": "string",
                            "description": "Amount or volume of data managed by the system.",
                            "example": "Large (>1TB)",
                            "nullable": true
                          },
                          "externalUserSensitiveDataAccess": {
                            "type": "string",
                            "description": "Whether external users have access to sensitive data.",
                            "example": "Yes",
                            "nullable": true
                          },
                          "permitsDataTransferOutsideUS": {
                            "type": "string",
                            "description": "Whether the system permits data transfer outside the United States.",
                            "example": "No",
                            "nullable": true
                          },
                          "apiDeveloped": {
                            "type": "string",
                            "description": "Whether APIs have been developed for the system.",
                            "example": "Yes",
                            "nullable": true
                          },
                          "doesTheApiUseFhir": {
                            "type": "string",
                            "description": "Whether the API uses FHIR standards.",
                            "example": "Yes",
                            "nullable": true
                          },
                          "doesTheApiUseFhirOther": {
                            "type": "string",
                            "description": "Other FHIR-related information.",
                            "example": "FHIR R4",
                            "nullable": true
                          },
                          "editBeneficiaryInformation": {
                            "type": "string",
                            "description": "Whether beneficiary information can be edited.",
                            "example": "Yes",
                            "nullable": true
                          },
                          "systemDataSummary": {
                            "type": "string",
                            "description": "Summary of the system data.",
                            "example": "This system manages patient data and billing information.",
                            "nullable": true
                          },
                          "systemDataAuthoritativeSource": {
                            "type": "string",
                            "description": "The authoritative source for the system data.",
                            "example": "Master Data Management System",
                            "nullable": true
                          },
                          "systemDataLocation": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Physical or logical locations of the system data (converted from comma-separated string).",
                            "example": [
                              "AWS Cloud - US East Region",
                              "On-premises Data Center"
                            ]
                          },
                          "systemDataLocationNotes": {
                            "type": "string",
                            "description": "Additional notes about the system data location.",
                            "example": "Data is replicated across multiple availability zones.",
                            "nullable": true
                          },
                          "systemDataInvolvement": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Description of how the system is involved with data management (converted from comma-separated string).",
                            "example": [
                              "Primary data collection",
                              "Data processing system",
                              "Analytics platform"
                            ]
                          },
                          "beneficiaryInformation": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Information about beneficiaries associated with the system data (converted from comma-separated string).",
                            "example": [
                              "Medicare beneficiaries",
                              "Medicaid recipients",
                              "Chronic condition patients"
                            ]
                          },
                          "primaryDRM": {
                            "type": "string",
                            "description": "The primary Data Reference Model (DRM) for the system.",
                            "example": "Primary DRM Name",
                            "nullable": true
                          },
                          "secondaryDRM": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Array of all Data Reference Models (DRMs) for the system, including the primary DRM.",
                            "example": [
                              "Primary DRM Name",
                              "Secondary DRM 1",
                              "Secondary DRM 2"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "string",
                      "description": "Error message describing the parameter validation failure.",
                      "example": "the systemGUID parameter must be a string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/gateway/System%20Census%20Core%20API/2.0.0/systemMaintainer": {
      "post": {
        "description": "Adds or updates system maintainer details for a given system.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "id"
                ],
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The unique identifier (GUID) of the system.",
                    "example": "{11111111-2222-3333-4444-555555555555}"
                  },
                  "version": {
                    "type": "string",
                    "description": "Version of the system.",
                    "example": "1.0",
                    "nullable": true
                  },
                  "pageName": {
                    "type": "string",
                    "description": "Name of the page being updated (e.g., \"SystemMaintainerBasicInfo\").",
                    "example": "SystemMaintainerBasicInfo",
                    "nullable": true
                  },
                  "name": {
                    "type": "string",
                    "description": "Name of the system.",
                    "example": "Census Core System",
                    "nullable": true
                  },
                  "systemCustomization": {
                    "type": "string",
                    "description": "Description of system customizations.",
                    "example": "Customizations for reporting.",
                    "nullable": true
                  },
                  "frontendAccessType": {
                    "type": "string",
                    "description": "Type of frontend access.",
                    "example": "Web Application",
                    "nullable": true
                  },
                  "netAccessibility": {
                    "type": "string",
                    "description": "Network accessibility type.",
                    "example": "Public",
                    "nullable": true
                  },
                  "ipEnabledAssetCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Count of IP enabled assets.",
                    "example": 10,
                    "nullable": true
                  },
                  "ip6EnabledAssetPercent": {
                    "type": "string",
                    "description": "Percentage of IPv6 enabled assets.",
                    "example": "50%",
                    "nullable": true
                  },
                  "ip6TransitionPlan": {
                    "type": "string",
                    "description": "IPv6 transition plan details.",
                    "example": "Transitioning by 2025",
                    "nullable": true
                  },
                  "systemProductionDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Date system went into production (YYYY-MM-DD).",
                    "example": "2023-01-15",
                    "nullable": true
                  },
                  "devWorkDescription": {
                    "type": "string",
                    "description": "Description of development work.",
                    "example": "Continuous development",
                    "nullable": true
                  },
                  "agileUsed": {
                    "type": "boolean",
                    "description": "Indicates if Agile methodology is used.",
                    "example": true,
                    "nullable": true
                  },
                  "deploymentFrequency": {
                    "type": "string",
                    "description": "Frequency of deployments.",
                    "example": "Monthly",
                    "nullable": true
                  },
                  "majorRefreshDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Date of last major refresh (MM/DD/YYYY).",
                    "example": "01/01/2023",
                    "nullable": true
                  },
                  "nextMajorRefreshDate": {
                    "type": "string",
                    "format": "date",
                    "description": "Date of next major refresh (MM/DD/YYYY).",
                    "example": "01/01/2024",
                    "nullable": true
                  },
                  "plansToRetireReplace": {
                    "type": "string",
                    "description": "Plans to retire or replace the system.",
                    "example": "No plans",
                    "nullable": true
                  },
                  "yearToRetireReplace": {
                    "type": "string",
                    "description": "Year planned for retirement or replacement.",
                    "example": "2030",
                    "nullable": true
                  },
                  "quarterToRetireReplace": {
                    "type": "string",
                    "description": "Quarter planned for retirement or replacement.",
                    "example": "Q4",
                    "nullable": true
                  },
                  "businessArtifactsOnDemand": {
                    "type": "boolean",
                    "description": "Are business artifacts available on demand?",
                    "example": true,
                    "nullable": true
                  },
                  "businessArtifactsLocation": {
                    "type": "string",
                    "description": "Location of business artifacts.",
                    "example": "SharePoint",
                    "nullable": true
                  },
                  "systemRequirementsOnDemand": {
                    "type": "boolean",
                    "description": "Are system requirements available on demand?",
                    "example": true,
                    "nullable": true
                  },
                  "systemRequirementsLocation": {
                    "type": "string",
                    "description": "Location of system requirements.",
                    "example": "Confluence",
                    "nullable": true
                  },
                  "systemDesignOnDemand": {
                    "type": "boolean",
                    "description": "Is system design available on demand?",
                    "example": true,
                    "nullable": true
                  },
                  "systemDesignLocation": {
                    "type": "string",
                    "description": "Location of system design documentation.",
                    "example": "Architect Docs",
                    "nullable": true
                  },
                  "sourceCodeOnDemand": {
                    "type": "boolean",
                    "description": "Is source code available on demand?",
                    "example": true,
                    "nullable": true
                  },
                  "sourceCodeLoction": {
                    "type": "string",
                    "description": "Location of source code.",
                    "example": "Git",
                    "nullable": true
                  },
                  "testPlanOnDemand": {
                    "type": "boolean",
                    "description": "Is test plan available on demand?",
                    "example": true,
                    "nullable": true
                  },
                  "testPlanLocation": {
                    "type": "string",
                    "description": "Location of test plan.",
                    "example": "Jira",
                    "nullable": true
                  },
                  "testScriptsOnDemand": {
                    "type": "boolean",
                    "description": "Are test scripts available on demand?",
                    "example": true,
                    "nullable": true
                  },
                  "testScriptsLocation": {
                    "type": "string",
                    "description": "Location of test scripts.",
                    "example": "Jira",
                    "nullable": true
                  },
                  "testReportsOnDemand": {
                    "type": "boolean",
                    "description": "Are test reports available on demand?",
                    "example": true,
                    "nullable": true
                  },
                  "testReportsLocation": {
                    "type": "string",
                    "description": "Location of test reports.",
                    "example": "Confluence",
                    "nullable": true
                  },
                  "omDocumentationOnDemand": {
                    "type": "boolean",
                    "description": "Is O&M documentation available on demand?",
                    "example": true,
                    "nullable": true
                  },
                  "omDocumentationLocation": {
                    "type": "string",
                    "description": "Location of O&M documentation.",
                    "example": "Confluence",
                    "nullable": true
                  },
                  "recordsManagementBucket": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Records management bucket(s).",
                    "example": [
                      "Bucket A",
                      "Bucket B"
                    ],
                    "nullable": true
                  },
                  "hasMetadataGlossary": {
                    "type": "boolean",
                    "description": "Does the system have a metadata glossary?",
                    "example": true,
                    "nullable": true
                  },
                  "storeInCentralDataCatalog": {
                    "type": "boolean",
                    "description": "Is data stored in central data catalog?",
                    "example": true,
                    "nullable": true
                  },
                  "haveEnterpriseDataLakePlan": {
                    "type": "string",
                    "description": "Enterprise Data Lake plan details.",
                    "example": "Yes",
                    "nullable": true
                  },
                  "identityManagementSolution": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Identity management solution(s).",
                    "example": [
                      "LDAP"
                    ],
                    "nullable": true
                  },
                  "identityManagementSolutionOther": {
                    "type": "string",
                    "description": "Other identity management solutions.",
                    "example": "OAuth",
                    "nullable": true
                  },
                  "isRecordManagementScheduleApproved": {
                    "type": "boolean",
                    "description": "Is records management schedule approved?",
                    "example": true,
                    "nullable": true
                  },
                  "adHocAgileDeploymentFrequency": {
                    "type": "string",
                    "description": "Ad-hoc Agile deployment frequency.",
                    "example": "Daily",
                    "nullable": true
                  },
                  "authoritativeDatasource": {
                    "type": "string",
                    "description": "Authoritative data source details.",
                    "example": "MDM",
                    "nullable": true
                  },
                  "dataAtRestEncryptionKeyManagement": {
                    "type": "string",
                    "description": "Data at rest encryption key management details.",
                    "example": "KMS",
                    "nullable": true
                  },
                  "legalHoldCaseName": {
                    "type": "string",
                    "description": "Legal hold case name.",
                    "example": "Case 123",
                    "nullable": true
                  },
                  "locallyStoredUserInformation": {
                    "type": "string",
                    "description": "Is user information stored locally?",
                    "example": "Yes",
                    "nullable": true
                  },
                  "multifactorAuthenticationMethod": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Multi-factor authentication method(s).",
                    "example": [
                      "TOTP"
                    ],
                    "nullable": true
                  },
                  "multifactorAuthenticationMethodOther": {
                    "type": "string",
                    "description": "Other multi-factor authentication methods.",
                    "example": "Biometrics",
                    "nullable": true
                  },
                  "networkTrafficEncryptionKeyManagement": {
                    "type": "string",
                    "description": "Network traffic encryption key management details.",
                    "example": "VPN",
                    "nullable": true
                  },
                  "noMajorRefresh": {
                    "type": "boolean",
                    "description": "No major refresh planned?",
                    "example": false,
                    "nullable": true
                  },
                  "noPersistentRecordsFlag": {
                    "type": "boolean",
                    "description": "No persistent records flag.",
                    "example": false,
                    "nullable": true
                  },
                  "noPlannedMajorRefresh": {
                    "type": "boolean",
                    "description": "No planned major refresh?",
                    "example": false,
                    "nullable": true
                  },
                  "recordsUnderLegalHold": {
                    "type": "boolean",
                    "description": "Are records under legal hold?",
                    "example": false,
                    "nullable": true
                  },
                  "systemDataLocation": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "System data location(s).",
                    "example": [
                      "Cloud"
                    ],
                    "nullable": true
                  },
                  "systemDataLocationNotes": {
                    "type": "string",
                    "description": "Notes regarding system data location.",
                    "example": "Notes for data location",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "System maintainer data added successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "description": "The system ID that was processed.",
                      "example": "{11111111-2222-3333-4444-555555555555}"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          }
        }
      }
    },
    "/gateway/System%20Census%20Core%20API/2.0.0/page/systemMaintainer": {
      "get": {
        "description": "Retrieve system maintainer information for a given system ID.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "The unique identifier (GUID) of the system.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "{C195B6EE-AE59-432b-80C6-11A5A2F9C969}"
            }
          }
        ],
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved system maintainer information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The unique identifier (GUID) of the system.",
                      "example": "{C195B6EE-AE59-432b-80C6-11A5A2F9C969}"
                    },
                    "version": {
                      "type": "string",
                      "description": "Version of the system.",
                      "nullable": true,
                      "example": "26"
                    },
                    "pageName": {
                      "type": "string",
                      "description": "The name of the page, always \"SystemMaintainerBasicInfo\".",
                      "example": "SystemMaintainerBasicInfo"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the system.",
                      "nullable": true,
                      "example": "Comprehensive Error Rate Testing - Statistical Contractor"
                    },
                    "systemCustomization": {
                      "type": "string",
                      "description": "Description of system customization.",
                      "nullable": true,
                      "example": "Custom"
                    },
                    "frontendAccessType": {
                      "type": "string",
                      "description": "Type of frontend access.",
                      "nullable": true,
                      "example": "IPv4 Only"
                    },
                    "netAccessibility": {
                      "type": "string",
                      "description": "Network accessibility of the system.",
                      "nullable": true,
                      "example": "Accessible to the Public Internet (non-restricted access)"
                    },
                    "ipEnabledAssetCount": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Count of IP enabled assets.",
                      "nullable": true,
                      "example": 3
                    },
                    "ip6EnabledAssetPercent": {
                      "type": "string",
                      "description": "Percentage of IPV6 enabled assets.",
                      "nullable": true,
                      "example": "Less than 20%"
                    },
                    "ip6TransitionPlan": {
                      "type": "string",
                      "description": "Long-term IPV6 transition plan.",
                      "nullable": true,
                      "example": "Yes, transition to IPv6"
                    },
                    "systemProductionDate": {
                      "type": "string",
                      "description": "Date when the system went into production.",
                      "nullable": true,
                      "example": "2014-03-31"
                    },
                    "devWorkDescription": {
                      "type": "string",
                      "description": "Description of ongoing development work.",
                      "nullable": true,
                      "example": "Ad hoc development from user feedback"
                    },
                    "agileUsed": {
                      "type": "boolean",
                      "description": "Indicates if Agile methodology is used for development.",
                      "nullable": true,
                      "example": false
                    },
                    "deploymentFrequency": {
                      "type": "string",
                      "description": "Frequency of system deployments.",
                      "nullable": true,
                      "example": "Ad Hoc/As Needed"
                    },
                    "adHocAgileDeploymentFrequency": {
                      "type": "string",
                      "description": "Ad-hoc agile deployment frequency.",
                      "nullable": true,
                      "example": "Quarterly"
                    },
                    "majorRefreshDate": {
                      "type": "string",
                      "description": "Date of the last major technology refresh.",
                      "nullable": true,
                      "example": null
                    },
                    "noMajorRefresh": {
                      "type": "boolean",
                      "description": "Indicates if there has been no major refresh.",
                      "nullable": true,
                      "example": true
                    },
                    "nextMajorRefreshDate": {
                      "type": "string",
                      "description": "Date of the next planned major technology refresh.",
                      "nullable": true,
                      "example": null
                    },
                    "noPlannedMajorRefresh": {
                      "type": "boolean",
                      "description": "Indicates if there is no planned major refresh.",
                      "nullable": true,
                      "example": true
                    },
                    "plansToRetireReplace": {
                      "type": "string",
                      "description": "Plans to retire or replace the system.",
                      "nullable": true,
                      "example": "No"
                    },
                    "yearToRetireReplace": {
                      "type": "string",
                      "description": "Year planned for retirement or replacement.",
                      "nullable": true,
                      "example": null
                    },
                    "quarterToRetireReplace": {
                      "type": "string",
                      "description": "Quarter planned for retirement or replacement.",
                      "nullable": true,
                      "example": null
                    },
                    "businessArtifactsOnDemand": {
                      "type": "boolean",
                      "description": "Availability of business artifacts on demand.",
                      "nullable": true,
                      "example": true
                    },
                    "businessArtifactsLocation": {
                      "type": "string",
                      "description": "Location of business artifacts.",
                      "nullable": true,
                      "example": "edgar.mounib@lewin.com"
                    },
                    "systemRequirementsOnDemand": {
                      "type": "boolean",
                      "description": "Availability of system requirements on demand.",
                      "nullable": true,
                      "example": true
                    },
                    "systemRequirementsLocation": {
                      "type": "string",
                      "description": "Location of system requirements.",
                      "nullable": true,
                      "example": "edgar.mounib@lewin.com"
                    },
                    "systemDesignOnDemand": {
                      "type": "boolean",
                      "description": "Availability of system design on demand.",
                      "nullable": true,
                      "example": true
                    },
                    "systemDesignLocation": {
                      "type": "string",
                      "description": "Location of system design documents.",
                      "nullable": true,
                      "example": "edgar.mounib@lewin.com"
                    },
                    "sourceCodeOnDemand": {
                      "type": "boolean",
                      "description": "Availability of source code on demand.",
                      "nullable": true,
                      "example": true
                    },
                    "sourceCodeLoction": {
                      "type": "string",
                      "description": "Location of source code.",
                      "nullable": true,
                      "example": "edgar.mounib@lewin.com"
                    },
                    "testPlanOnDemand": {
                      "type": "boolean",
                      "description": "Availability of test plans on demand.",
                      "nullable": true,
                      "example": true
                    },
                    "testPlanLocation": {
                      "type": "string",
                      "description": "Location of test plans.",
                      "nullable": true,
                      "example": "edgar.mounib@lewin.com"
                    },
                    "testScriptsOnDemand": {
                      "type": "boolean",
                      "description": "Availability of test scripts on demand.",
                      "nullable": true,
                      "example": true
                    },
                    "testScriptsLocation": {
                      "type": "string",
                      "description": "Location of test scripts.",
                      "nullable": true,
                      "example": "edgar.mounib@lewin.com"
                    },
                    "testReportsOnDemand": {
                      "type": "boolean",
                      "description": "Availability of test reports on demand.",
                      "nullable": true,
                      "example": true
                    },
                    "testReportsLocation": {
                      "type": "string",
                      "description": "Location of test reports.",
                      "nullable": true,
                      "example": "edgar.mounib@lewin.com"
                    },
                    "omDocumentationOnDemand": {
                      "type": "boolean",
                      "description": "Availability of O&M documentation on demand.",
                      "nullable": true,
                      "example": true
                    },
                    "omDocumentationLocation": {
                      "type": "string",
                      "description": "Location of O&M documentation.",
                      "nullable": true,
                      "example": "edgar.mounib@lewin.com"
                    },
                    "noPersistentRecordsFlag": {
                      "type": "boolean",
                      "description": "Indicates if there are no persistent records.",
                      "nullable": true,
                      "example": false
                    },
                    "recordsManagementBucket": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "List of records management buckets.",
                      "nullable": true,
                      "example": [
                        "Public Use, Statistical, and Summary Files",
                        "Research and Program Analysis"
                      ]
                    },
                    "hasMetadataGlossary": {
                      "type": "boolean",
                      "description": "Indicates if the system has a metadata glossary.",
                      "nullable": true,
                      "example": false
                    },
                    "authoritativeDatasource": {
                      "type": "string",
                      "description": "Authoritative data source for the system.",
                      "nullable": true,
                      "example": "N/A"
                    },
                    "systemDataLocation": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Locations where system data is stored.",
                      "nullable": true,
                      "example": [
                        "This system"
                      ]
                    },
                    "systemDataLocationNotes": {
                      "type": "string",
                      "description": "Notes regarding system data locations.",
                      "nullable": true,
                      "example": "Having appropriate access"
                    },
                    "storeInCentralDataCatalog": {
                      "type": "boolean",
                      "description": "Indicates if data is stored in a central data catalog.",
                      "nullable": true,
                      "example": true
                    },
                    "haveEnterpriseDataLakePlan": {
                      "type": "string",
                      "description": "Status of Enterprise Data Lake plan.",
                      "nullable": true,
                      "example": "No Plans"
                    },
                    "identityManagementSolution": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Identity management solutions used.",
                      "nullable": true,
                      "example": [
                        "Other"
                      ]
                    },
                    "identityManagementSolutionOther": {
                      "type": "string",
                      "description": "Other identity management solutions.",
                      "nullable": true,
                      "example": "The CERT-SC is a custom developed application which requires multifactor authentication to access the application.  The first step is to enter an authorized username and password which will trigger the system to send a one-time passcode (OTP) (random 6-di"
                    },
                    "locallyStoredUserInformation": {
                      "type": "boolean",
                      "description": "Indicates if user information is stored locally.",
                      "nullable": true,
                      "example": false
                    },
                    "multifactorAuthenticationMethod": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Methods of multifactor authentication used.",
                      "nullable": true,
                      "example": [
                        "One Time Password sent via Email"
                      ]
                    },
                    "multifactorAuthenticationMethodOther": {
                      "type": "string",
                      "description": "Other multifactor authentication methods.",
                      "nullable": true,
                      "example": null
                    },
                    "networkTrafficEncryptionKeyManagement": {
                      "type": "string",
                      "description": "Network traffic encryption key management details.",
                      "nullable": true,
                      "example": "We have a process for managing encryption keys."
                    },
                    "dataAtRestEncryptionKeyManagement": {
                      "type": "string",
                      "description": "Data at rest encryption key management details.",
                      "nullable": true,
                      "example": "We have a process for managing encryption keys."
                    },
                    "recordsUnderLegalHold": {
                      "type": "boolean",
                      "description": "Indicates if records are under legal hold.",
                      "nullable": true,
                      "example": false
                    },
                    "legalHoldCaseName": {
                      "type": "string",
                      "description": "Name of the legal hold case.",
                      "nullable": true,
                      "example": null
                    },
                    "isRecordManagementScheduleApproved": {
                      "type": "boolean",
                      "description": "Indicates if the record management schedule is approved.",
                      "nullable": true,
                      "example": false
                    },
                    "recordsManagementDisposalPlan": {
                      "type": "boolean",
                      "description": "Indicates if a records management disposal plan exists.",
                      "nullable": true,
                      "example": true
                    },
                    "recordsManagementDisposalLocation": {
                      "type": "string",
                      "description": "Location for records management disposal.",
                      "nullable": true,
                      "example": "Offsite archive"
                    },
                    "recordsManagementFormat": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Formats of records management.",
                      "nullable": true,
                      "example": [
                        "PDF",
                        "XML"
                      ]
                    },
                    "recordManagementFormatOther": {
                      "type": "string",
                      "description": "Other records management formats.",
                      "nullable": true,
                      "example": "Proprietary format"
                    },
                    "anotherCMSsystem": {
                      "type": "boolean",
                      "description": "Indicates if it is another CMS system.",
                      "nullable": true,
                      "example": true
                    },
                    "hardCodedIpAddress": {
                      "type": "boolean",
                      "description": "Indicates if the system uses hardcoded IP addresses.",
                      "nullable": true,
                      "example": false
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/System%20Census%20Core%20API/2.0.0/systemProperty": {
      "post": {
        "description": "Add or update a system property value for a given system ID and property name.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "systemId": {
                    "type": "string",
                    "description": "The unique identifier (GUID) of the system.",
                    "example": "{11111111-2222-3333-4444-555555555555}"
                  },
                  "propertyName": {
                    "type": "string",
                    "description": "The name of the system property to add or update.",
                    "example": "System Name"
                  },
                  "propertyValue": {
                    "type": "string",
                    "description": "The value of the system property.",
                    "example": "Example System Name",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "Successfully added or updated system property value.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "System Property Updated Successfully"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing or invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieve a specific system property value for a given system ID and property name.",
        "parameters": [
          {
            "name": "systemId",
            "in": "query",
            "description": "The unique identifier (GUID) of the system.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "{11111111-2222-3333-4444-555555555555}"
            }
          },
          {
            "name": "propertyName",
            "in": "query",
            "description": "The name of the system property to retrieve.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "System Name"
            }
          }
        ],
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved system property value.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "propertyValue": {
                      "type": "string",
                      "description": "The value of the requested system property. Can be string, number, or null.",
                      "example": "Example System Name",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing or invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - Invalid property name, property not found, or database error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/System%20Census%20Core%20API/2.0.0/page/systemsList": {
      "get": {
        "description": "Retrieve a list of all systems in the System Census.",
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved systems list.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "pageName": {
                      "type": "string",
                      "description": "The name of the page, always \"SystemsList\".",
                      "example": "SystemsList"
                    },
                    "count": {
                      "type": "integer",
                      "description": "The number of systems returned.",
                      "example": 25
                    },
                    "SystemsList": {
                      "type": "array",
                      "description": "List of systems.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The unique identifier of the system.",
                            "example": "{11111111-2222-3333-4444-555555555555}"
                          },
                          "nextVersionId": {
                            "type": "string",
                            "description": "The ID of the next version of the system.",
                            "example": "{22222222-3333-4444-5555-666666666666}",
                            "nullable": true
                          },
                          "previousVersionId": {
                            "type": "string",
                            "description": "The ID of the previous version of the system.",
                            "example": "{00000000-1111-2222-3333-444444444444}",
                            "nullable": true
                          },
                          "ictObjectId": {
                            "type": "string",
                            "description": "The ICT object identifier.",
                            "example": "ICT123",
                            "nullable": true
                          },
                          "uuid": {
                            "type": "string",
                            "description": "The UUID of the system.",
                            "example": "{11111111-2222-3333-4444-555555555555}",
                            "nullable": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the system.",
                            "example": "Example System",
                            "nullable": true
                          },
                          "description": {
                            "type": "string",
                            "description": "The description of the system.",
                            "example": "A comprehensive system for managing operations.",
                            "nullable": true
                          },
                          "version": {
                            "type": "string",
                            "description": "The version of the system.",
                            "example": "1.0",
                            "nullable": true
                          },
                          "acronym": {
                            "type": "string",
                            "description": "The acronym of the system.",
                            "example": "EXS",
                            "nullable": true
                          },
                          "objectState": {
                            "type": "string",
                            "description": "The current state of the system object.",
                            "example": "Active",
                            "nullable": true
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of the system.",
                            "example": "Operational",
                            "nullable": true
                          },
                          "belongsTo": {
                            "type": "string",
                            "description": "The organization the system belongs to.",
                            "example": "IT Department",
                            "nullable": true
                          },
                          "businessOwnerOrg": {
                            "type": "string",
                            "description": "The business owner organization.",
                            "example": "Business Operations",
                            "nullable": true
                          },
                          "businessOwnerOrgComp": {
                            "type": "string",
                            "description": "The business owner organization component.",
                            "example": "Operations Team",
                            "nullable": true
                          },
                          "systemMaintainerOrg": {
                            "type": "string",
                            "description": "The system maintainer organization.",
                            "example": "IT Support",
                            "nullable": true
                          },
                          "systemMaintainerOrgComp": {
                            "type": "string",
                            "description": "The system maintainer organization component.",
                            "example": "Development Team",
                            "nullable": true
                          },
                          "qaReviewerAssignmentId": {
                            "type": "string",
                            "description": "The QA reviewer assignment ID.",
                            "example": "QA123",
                            "nullable": true
                          },
                          "qaReviewerFirstName": {
                            "type": "string",
                            "description": "The first name of the QA reviewer.",
                            "example": "John",
                            "nullable": true
                          },
                          "qaReviewerLastName": {
                            "type": "string",
                            "description": "The last name of the QA reviewer.",
                            "example": "Doe",
                            "nullable": true
                          },
                          "qaReviewerUserName": {
                            "type": "string",
                            "description": "The username of the QA reviewer.",
                            "example": "EUA1",
                            "nullable": true
                          },
                          "daReviewerAssignmentId": {
                            "type": "string",
                            "description": "The DA reviewer assignment ID.",
                            "example": "DA456",
                            "nullable": true
                          },
                          "daReviewerFirstName": {
                            "type": "string",
                            "description": "The first name of the DA reviewer.",
                            "example": "Jane",
                            "nullable": true
                          },
                          "daReviewerLastName": {
                            "type": "string",
                            "description": "The last name of the DA reviewer.",
                            "example": "Smith",
                            "nullable": true
                          },
                          "daReviewerUserName": {
                            "type": "string",
                            "description": "The username of the DA reviewer.",
                            "example": "EUA1",
                            "nullable": true
                          },
                          "censusStatus": {
                            "type": "string",
                            "description": "The census status of the system.",
                            "example": "In Progress",
                            "nullable": true
                          },
                          "percentComplete": {
                            "type": "string",
                            "description": "The percentage completion of the system census.",
                            "example": "75%",
                            "nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - Database query error or JSON parsing error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/System%20Census%20Core%20API/2.0.0/page/Urls": {
      "post": {
        "description": "Creates, updates, or deletes URL records associated with a system.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "systemId",
                  "Urls"
                ],
                "properties": {
                  "systemId": {
                    "type": "string",
                    "description": "The unique identifier (GUID) of the system.",
                    "example": "{11111111-2222-3333-4444-555555555555}"
                  },
                  "Urls": {
                    "type": "array",
                    "description": "Array of URL containers with operation flags.",
                    "items": {
                      "type": "object",
                      "required": [
                        "Url"
                      ],
                      "properties": {
                        "deleted": {
                          "type": "boolean",
                          "description": "Flag indicating if URLs should be deleted.",
                          "example": false,
                          "nullable": true
                        },
                        "updated": {
                          "type": "boolean",
                          "description": "Flag indicating if URLs should be updated.",
                          "example": true,
                          "nullable": true
                        },
                        "Url": {
                          "type": "array",
                          "description": "Array of URL objects to process.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "urlId": {
                                "type": "string",
                                "description": "The unique identifier of the URL (required for update/delete operations).",
                                "example": "{22222222-3333-4444-5555-666666666666}",
                                "nullable": true
                              },
                              "link": {
                                "type": "string",
                                "description": "The URL link (required for create/update operations).",
                                "example": "https://example.gov/system",
                                "nullable": true
                              },
                              "urlHostingEnv": {
                                "type": "string",
                                "description": "The hosting environment of the URL.",
                                "example": "Production",
                                "nullable": true
                              },
                              "urlApiEndpoint": {
                                "type": "string",
                                "description": "API endpoint URL.",
                                "example": "https://api.example.gov/v1",
                                "nullable": true
                              },
                              "urlApiWaf": {
                                "type": "string",
                                "description": "Web Application Firewall for the API.",
                                "example": "Cloudflare",
                                "nullable": true
                              },
                              "providesVerCodeAccess": {
                                "type": "string",
                                "description": "Indicates if URL provides version code repository access.",
                                "example": "Yes",
                                "nullable": true
                              },
                              "confidenceLevel": {
                                "type": "string",
                                "description": "Confidence level of the URL information.",
                                "example": "High",
                                "nullable": true
                              },
                              "isIntranetOnly": {
                                "type": "string",
                                "description": "Indicates if URL is intranet only.",
                                "example": "No",
                                "nullable": true
                              },
                              "portalServicesUsed": {
                                "type": "string",
                                "description": "Portal services used by the URL.",
                                "example": "SSO Portal",
                                "nullable": true
                              },
                              "usedforBeneficiary": {
                                "type": "string",
                                "description": "Indicates if URL is used for beneficiary access.",
                                "example": "Yes",
                                "nullable": true
                              },
                              "usesHTTPS": {
                                "type": "string",
                                "description": "Indicates if URL uses HTTPS.",
                                "example": "Yes",
                                "nullable": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "URL operations completed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "example": [
                        "Urls completed successfully."
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing required fields or invalid data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Missing or invalid authentication credentials.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - Database operation failed or error creating Sparx object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Retrieve the URLs that are used to access the system, for a given System ID.",
        "parameters": [
          {
            "name": "systemId",
            "in": "query",
            "description": "ID of system to retrieve system component information about.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "{550e8400-e29b-41d4-a716-446655440000}"
            }
          }
        ],
        "tags": [
          "Census Core"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved a list of URLs associated with an object in CEDAR.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "count"
                  ],
                  "properties": {
                    "count": {
                      "type": "string",
                      "description": "Number of URLs returned (as string).",
                      "example": "1"
                    },
                    "pageName": {
                      "type": "string",
                      "description": "The page name, only present when count is 0.",
                      "example": "Urls",
                      "nullable": true
                    },
                    "noURLsFlag": {
                      "type": "boolean",
                      "description": "Flag indicating no URLs are available.",
                      "nullable": true
                    },
                    "Urls": {
                      "type": "array",
                      "description": "List of URLs associated with the system.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "urlId": {
                            "type": "string",
                            "description": "Unique key that uniquely identifies the URL in database.",
                            "example": "218-10-0"
                          },
                          "link": {
                            "type": "string",
                            "description": "A valid and full system URL.",
                            "example": "https://example.system.com"
                          },
                          "urlApiEndpoint": {
                            "type": "string",
                            "description": "A boolean flag to indicate whether URL is an API Endpoint.",
                            "example": "Yes"
                          },
                          "urlApiWaf": {
                            "type": "string",
                            "description": "A boolean flag to indicate whether application is behind a Web Application Firewall (WAF).",
                            "example": "No"
                          },
                          "providesVerCodeAccess": {
                            "type": "string",
                            "description": "A boolean flag to indicate if this URL provides access to a versioned code repository.",
                            "example": "No"
                          },
                          "urlHostingEnv": {
                            "type": "string",
                            "description": "A string that contains what hosting environment this URL is for.",
                            "example": "Production"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/swagger-ui": {
      "get": {
        "description": "Loads the Swagger UI tool.",
        "tags": [
          "OpenAPI",
          "Swagger",
          "Swagger UI"
        ],
        "responses": {
          "200": {
            "description": "Returns the Swagger UI.",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": []
      }
    },
    "/gateway/intake-schema/{id}": {
      "get": {
        "description": "Find an intake schema by name",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The name of the schema",
            "required": true,
            "schema": {
              "type": "string",
              "example": "SampleSchema"
            }
          }
        ],
        "tags": [
          "Gateway - Intake Schema"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "schema",
                    "createdBy",
                    "createdDate",
                    "updatedBy",
                    "updatedDate"
                  ],
                  "properties": {
                    "id": {
                      "type": "number",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "example": "SampleSchema"
                    },
                    "schema": {
                      "type": "string",
                      "example": "{\"foo\":\"bar\"}"
                    },
                    "createdBy": {
                      "type": "string",
                      "example": "TST1"
                    },
                    "createdDate": {
                      "type": "string",
                      "example": "2025-03-19T14:36:00.000Z"
                    },
                    "updatedBy": {
                      "type": "string",
                      "example": "TST2"
                    },
                    "updatedDate": {
                      "type": "string",
                      "example": "2025-03-20T14:36:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete an intake schema by name",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The name of the schema",
            "required": true,
            "schema": {
              "type": "string",
              "example": "SampleSchema"
            }
          }
        ],
        "tags": [
          "Gateway - Intake Schema"
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Update an intake schema by name",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The name of the schema",
            "required": true,
            "schema": {
              "type": "string",
              "example": "SampleSchema"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "schema"
                ],
                "properties": {
                  "schema": {
                    "type": "string",
                    "example": "{\"foo\":\"bar\"}"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Gateway - Intake Schema"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "id",
                    "name",
                    "schema",
                    "createdBy",
                    "createdDate",
                    "updatedBy",
                    "updatedDate"
                  ],
                  "properties": {
                    "id": {
                      "type": "number",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "example": "SampleSchema"
                    },
                    "schema": {
                      "type": "string",
                      "example": "{\"foo\":\"bar\"}"
                    },
                    "createdBy": {
                      "type": "string",
                      "example": "TST1"
                    },
                    "createdDate": {
                      "type": "string",
                      "example": "2025-03-19T14:36:00.000Z"
                    },
                    "updatedBy": {
                      "type": "string",
                      "example": "TST2"
                    },
                    "updatedDate": {
                      "type": "string",
                      "example": "2025-03-20T14:36:00.000Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFound"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/intake-schema": {
      "post": {
        "description": "Create an intake schema by name",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "schema"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "SampleSchema"
                  },
                  "schema": {
                    "type": "string",
                    "example": "{\"foo\":\"bar\"}"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Gateway - Intake Schema"
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "schemaId",
                    "name"
                  ],
                  "properties": {
                    "schemaId": {
                      "type": "number",
                      "description": "The ID of the created schema",
                      "example": 1
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the created schema",
                      "example": "SampleSchema"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Conflict"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "description": "Find all intake schemas",
        "tags": [
          "Gateway - Intake Schema"
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "schemas": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "required": [
                          "id",
                          "name",
                          "schema",
                          "createdBy",
                          "createdDate",
                          "updatedBy",
                          "updatedDate"
                        ],
                        "properties": {
                          "id": {
                            "type": "number",
                            "example": 1
                          },
                          "name": {
                            "type": "string",
                            "example": "SampleSchema"
                          },
                          "schema": {
                            "type": "string",
                            "example": "{\"foo\":\"bar\"}"
                          },
                          "createdBy": {
                            "type": "string",
                            "example": "TST1"
                          },
                          "createdDate": {
                            "type": "string",
                            "example": "2025-03-19T14:36:00.000Z"
                          },
                          "updatedBy": {
                            "type": "string",
                            "example": "TST2"
                          },
                          "updatedDate": {
                            "type": "string",
                            "example": "2025-03-20T14:36:00.000Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/keys": {
      "post": {
        "description": "Create a new gateway API key",
        "tags": [
          "Gateway"
        ],
        "responses": {
          "200": {
            "description": "Gateway key created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "The generated gateway API key",
                      "example": "gw_1234567890abcdef"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid authorization method or user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTKey": []
          }
        ]
      },
      "get": {
        "description": "Get a list of all gateway API keys",
        "tags": [
          "Gateway"
        ],
        "responses": {
          "200": {
            "description": "Gateway keys list retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "description": "List of gateway keys",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The gateway key ID",
                            "example": "key-123"
                          },
                          "key": {
                            "type": "string",
                            "description": "The gateway API key",
                            "example": "gw_1234567890abcdef"
                          },
                          "createdBy": {
                            "type": "string",
                            "description": "User who created the key",
                            "example": "user123"
                          },
                          "createdDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Date when the key was created",
                            "example": "2024-01-15T10:30:00Z"
                          },
                          "isActive": {
                            "type": "boolean",
                            "description": "Whether the key is active",
                            "example": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid authorization method",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTKey": []
          }
        ]
      }
    },
    "/gateway/keys/{id}": {
      "delete": {
        "description": "Remove a gateway API key by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the gateway key to remove",
            "required": true,
            "schema": {
              "type": "string",
              "example": "key-123"
            }
          }
        ],
        "tags": [
          "Gateway"
        ],
        "responses": {
          "204": {
            "description": "Gateway key removed successfully (No Content)"
          },
          "400": {
            "description": "Bad request - No gateway key provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid authorization method or user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWTKey": []
          }
        ]
      }
    },
    "/health": {
      "get": {
        "description": "Health check endpoint",
        "tags": [
          "Health"
        ],
        "responses": {
          "200": {
            "description": "Health check OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Health status message",
                      "example": "Server is healthy"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gateway/LDAP/1.0/person/{id}": {
      "get": {
        "description": "Get person details by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Person ID - 4 character alphanumeric string",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "^[a-zA-Z0-9]{4}$",
              "minLength": 4,
              "maxLength": 4,
              "description": "Alphanumeric string with exactly 4 characters",
              "example": "TEST"
            }
          }
        ],
        "tags": [
          "LDAP"
        ],
        "responses": {
          "200": {
            "description": "Person details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Person details object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid person id or no person id provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - Unable to retrieve system application or failed to get person data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/LDAP/1.0/person": {
      "get": {
        "description": "Search for persons using various filter criteria. At least one search parameter must be provided.",
        "parameters": [
          {
            "name": "first_name",
            "in": "query",
            "description": "First name of the person to search for",
            "required": false,
            "schema": {
              "type": "string",
              "example": "John"
            }
          },
          {
            "name": "last_name",
            "in": "query",
            "description": "Last name of the person to search for",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Smith"
            }
          },
          {
            "name": "commonName",
            "in": "query",
            "description": "Common name of the person to search for",
            "required": false,
            "schema": {
              "type": "string",
              "example": "John Smith"
            }
          },
          {
            "name": "email",
            "in": "query",
            "description": "Email address of the person to search for",
            "required": false,
            "schema": {
              "type": "string",
              "format": "email",
              "example": "john.smith@cms.hhs.gov"
            }
          },
          {
            "name": "telephone",
            "in": "query",
            "description": "Telephone number of the person to search for",
            "required": false,
            "schema": {
              "type": "string",
              "example": "555-123-4567"
            }
          }
        ],
        "tags": [
          "LDAP"
        ],
        "responses": {
          "200": {
            "description": "Person search results retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Person search results"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - No items provided for the filter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - Unable to retrieve system application or search failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/sparx/{id}": {
      "get": {
        "description": "Get SparxEA object by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Object ID - UUID format",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "UUID of the object to retrieve",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            }
          }
        ],
        "tags": [
          "sparx"
        ],
        "responses": {
          "200": {
            "description": "Object retrieved successfully",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string",
                  "description": "XML representation of the object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid object id or no object id provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - Unable to retrieve system application or query failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "description": "Delete SparxEA object by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Object ID - UUID format",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "UUID of the object to delete",
              "example": "123e4567-e89b-12d3-a456-426614174000"
            }
          }
        ],
        "tags": [
          "sparx"
        ],
        "responses": {
          "200": {
            "description": "Object deleted successfully",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string",
                  "description": "XML confirmation of the deleted object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid object id or no object id provided",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - Unable to retrieve system application or deletion failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/sparx": {
      "post": {
        "description": "Create a new SparxEA object",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "title",
                  "packageName"
                ],
                "properties": {
                  "title": {
                    "type": "string",
                    "description": "Title of the object to create",
                    "example": "My New Object"
                  },
                  "packageName": {
                    "type": "string",
                    "description": "Name of the package where the object will be created",
                    "example": "Intake"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "sparx"
        ],
        "responses": {
          "200": {
            "description": "Object created successfully",
            "content": {
              "application/xml": {
                "schema": {
                  "type": "string",
                  "description": "XML representation of the created object"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - No body provided, title is required and can not be empty, or packageName is required and can not be empty",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Unable to find the parent package ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Unable to get find the parent package ID"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - Unable to retrieve system application, unable to get token, or object creation failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/gateway/Technopedia/1.0/softwareExtended/{id}": {
      "get": {
        "description": "Retrieve extended software information by ID from Technopedia database.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the software record to retrieve.",
            "required": true,
            "schema": {
              "type": "integer",
              "example": 936552
            }
          }
        ],
        "tags": [
          "Technopedia"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved software extended information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "enum": [
                        "success",
                        "error"
                      ],
                      "description": "Indicates if the request was successful.",
                      "example": "success"
                    },
                    "message": {
                      "type": "array",
                      "description": "Array of Technopedia software extended records matching the ID.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "description": "Software identifier",
                            "example": 936552,
                            "nullable": true
                          },
                          "product_name": {
                            "type": "string",
                            "description": "Software product name",
                            "example": "Excel for Mac",
                            "nullable": true
                          },
                          "version": {
                            "type": "string",
                            "description": "Software version",
                            "example": "10.0",
                            "nullable": true
                          },
                          "version_group": {
                            "type": "string",
                            "description": "Version group",
                            "example": "X",
                            "nullable": true
                          },
                          "manufacturer": {
                            "type": "string",
                            "description": "Software manufacturer",
                            "example": "Microsoft",
                            "nullable": true
                          },
                          "category": {
                            "type": "string",
                            "description": "Software category",
                            "example": "Productivity",
                            "nullable": true
                          },
                          "sub_category": {
                            "type": "string",
                            "description": "Software sub-category",
                            "example": "Spreadsheets",
                            "nullable": true
                          },
                          "release": {
                            "type": "string",
                            "description": "Software release name",
                            "example": "Excel for Mac",
                            "nullable": true
                          },
                          "edition": {
                            "type": "string",
                            "description": "Software edition",
                            "example": "Academic",
                            "nullable": true
                          },
                          "brand_family": {
                            "type": "string",
                            "description": "Brand family",
                            "example": "Office",
                            "nullable": true
                          },
                          "general_availability_date": {
                            "type": "string",
                            "format": "date-time",
                            "description": "General availability date",
                            "example": "2001-10-24T12:10:00.000Z",
                            "nullable": true
                          },
                          "general_availability_str": {
                            "type": "string",
                            "description": "General availability date as string",
                            "example": "10/24/2001",
                            "nullable": true
                          },
                          "end_of_life_date": {
                            "type": "string",
                            "format": "date-time",
                            "description": "End of life date",
                            "example": "2007-01-09T12:01:00.000Z",
                            "nullable": true
                          },
                          "end_of_life_str": {
                            "type": "string",
                            "description": "End of life date as string",
                            "example": "1/9/2007",
                            "nullable": true
                          },
                          "end_of_life_support_level": {
                            "type": "string",
                            "description": "End of life support level",
                            "example": "Mainstream Support (2-Level Policy)",
                            "nullable": true
                          },
                          "obsolete_date": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Obsolete date",
                            "example": "2007-01-09T12:01:00.000Z",
                            "nullable": true
                          },
                          "obsolete_str": {
                            "type": "string",
                            "description": "Obsolete date as string",
                            "example": "1/9/2007",
                            "nullable": true
                          },
                          "licensable": {
                            "type": "string",
                            "description": "Whether the software is licensable",
                            "example": "yes",
                            "nullable": true
                          },
                          "belongs_to_suite": {
                            "type": "string",
                            "description": "Whether belongs to a suite",
                            "example": "yes",
                            "nullable": true
                          },
                          "suite_name": {
                            "type": "string",
                            "description": "Suite name if part of a suite",
                            "example": "Microsoft Office",
                            "nullable": true
                          },
                          "is_major_release": {
                            "type": "string",
                            "description": "Whether this is a major release",
                            "example": "Y",
                            "nullable": true
                          },
                          "is_major_version": {
                            "type": "string",
                            "description": "Whether this is a major version",
                            "example": "Y",
                            "nullable": true
                          },
                          "resource_uri": {
                            "type": "string",
                            "description": "Resource URI for the software",
                            "example": "/api/v1/software_extended/936552/",
                            "nullable": true
                          },
                          "status": {
                            "type": "string",
                            "description": "Software status",
                            "example": "N/A",
                            "nullable": true
                          },
                          "tier": {
                            "type": "integer",
                            "description": "Software tier",
                            "example": 1,
                            "nullable": true
                          },
                          "create_date": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Record creation date",
                            "example": "2015-02-26T12:02:00.000Z",
                            "nullable": true
                          },
                          "last_modified_date": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last modified date",
                            "example": "2024-08-20T12:08:00.000Z",
                            "nullable": true
                          },
                          "cat_manufacturer_id": {
                            "type": "integer",
                            "description": "Category manufacturer ID",
                            "example": 7365,
                            "nullable": true
                          },
                          "cat_sw_product_id": {
                            "type": "integer",
                            "description": "Category software product ID",
                            "example": 2654,
                            "nullable": true
                          },
                          "cat_sw_release_id": {
                            "type": "integer",
                            "description": "Category software release ID",
                            "example": 936552,
                            "nullable": true
                          },
                          "cat_sw_version_id": {
                            "type": "integer",
                            "description": "Category software version ID",
                            "example": 1147549,
                            "nullable": true
                          },
                          "product_alias": {
                            "type": "string",
                            "description": "Product alias",
                            "example": "Microsoft Excel X",
                            "nullable": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Missing or invalid ID parameter, or no records found matching the ID.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "enum": [
                        "failure"
                      ],
                      "example": "failure"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message describing what went wrong.",
                      "example": "Number of records matched not equalt to 1"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - Database error or software ID not found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "enum": [
                        "error"
                      ],
                      "example": "error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Error message describing what went wrong.",
                      "example": "Internal Server Error"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/gateway/Technopedia/1.0/softwareExtended": {
      "get": {
        "description": "Retrieve software product information from Technopedia database. Supports multiple query modes: exact match by manufacturer, product name, version, and edition (update=true), fuzzy search with LIKE matching (update=false), or lookup by ID. All filter parameters are optional and can be combined.",
        "parameters": [
          {
            "name": "product_name",
            "in": "query",
            "description": "Software product name. Used for product matching.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Windows Server"
            }
          },
          {
            "name": "product_name_operation",
            "in": "query",
            "description": "Operation type for product name matching (e.g., exact, fuzzy).",
            "required": false,
            "schema": {
              "type": "string",
              "example": "exact"
            }
          },
          {
            "name": "vendor",
            "in": "query",
            "description": "Software vendor/manufacturer name. Used for vendor matching.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Microsoft"
            }
          },
          {
            "name": "vendor_operation",
            "in": "query",
            "description": "Operation type for vendor matching (e.g., exact, fuzzy).",
            "required": false,
            "schema": {
              "type": "string",
              "example": "exact"
            }
          },
          {
            "name": "version",
            "in": "query",
            "description": "Software version for filtering results. Uses exact match when update=true, LIKE match when update=false.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2019"
            }
          },
          {
            "name": "version_operation",
            "in": "query",
            "description": "Operation type for version matching (e.g., exact, fuzzy). NOTE: Currently not implemented - use \"update\" parameter to control match type.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "exact"
            }
          },
          {
            "name": "edition",
            "in": "query",
            "description": "Software edition for filtering results (e.g., Professional, Enterprise, Standard). Uses exact match when update=true, LIKE match when update=false.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Professional"
            }
          },
          {
            "name": "edition_operation",
            "in": "query",
            "description": "Operation type for edition matching (e.g., exact, fuzzy). NOTE: Currently not implemented - use \"update\" parameter to control match type.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "exact"
            }
          },
          {
            "name": "summary",
            "in": "query",
            "description": "Controls the response mode. When \"true\", returns summary data.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "example": "true"
            }
          },
          {
            "name": "update",
            "in": "query",
            "description": "Controls update behavior when summary is true. When \"true\", uses update mode.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "true",
                "false"
              ],
              "example": "true"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Pagination offset for result sets.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "0"
            }
          },
          {
            "name": "fetch_limit",
            "in": "query",
            "description": "Maximum number of results to return. Defaults to 200.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "200"
            }
          }
        ],
        "tags": [
          "Technopedia"
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved software product information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Indicates if the request was successful.",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "description": "Array of software product records.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier for the software product."
                          },
                          "product_name": {
                            "type": "string",
                            "description": "Name of the software product."
                          },
                          "manufacturer": {
                            "type": "string",
                            "description": "Software manufacturer or vendor."
                          },
                          "category": {
                            "type": "string",
                            "description": "Software category classification."
                          },
                          "version": {
                            "type": "string",
                            "description": "Software version information."
                          },
                          "edition": {
                            "type": "string",
                            "description": "Software edition details."
                          },
                          "end_of_life_date": {
                            "type": "string",
                            "description": "End of life date for the software."
                          },
                          "general_availability_date": {
                            "type": "string",
                            "description": "General availability release date."
                          }
                        }
                      }
                    },
                    "count": {
                      "type": "number",
                      "description": "Number of records returned.",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request - Invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unauthorized"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error - Database connection or query error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "GatewayApikey": []
    },
    {
      "JWTKey": []
    }
  ],
  "components": {
    "securitySchemes": {
      "GatewayApikey": {
        "type": "apiKey",
        "in": "header",
        "name": "x-gateway-apikey"
      },
      "JWTKey": {
        "type": "apiKey",
        "in": "header",
        "name": "x-jwt-key"
      }
    },
    "schemas": {
      "BadRequest": {
        "type": "object",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string",
            "example": "Bad request - missing or invalid parameter"
          }
        }
      },
      "Conflict": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "Conflict"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "required": [
          "error",
          "message"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "Unable to retrieve system application"
          },
          "message": {
            "type": "string",
            "example": "Internal Service Error"
          }
        }
      },
      "Forbidden": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "Forbidden access"
          }
        }
      },
      "InternalServerError": {
        "type": "object",
        "required": [
          "error",
          "message"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "Internal Server Error"
          },
          "message": {
            "type": "string",
            "example": "An unexpected error occurred on the server"
          }
        }
      },
      "NotFound": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "Not Found"
          }
        }
      },
      "OrganizationSchema": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "{11111111-2222-3333-4444-555555555555}",
            "description": "Unique identifier for the organization"
          },
          "name": {
            "type": "string",
            "example": "Office of Management and Budget (OMB)",
            "description": "Name of the organization"
          },
          "acronym": {
            "type": "string",
            "example": "OMB",
            "nullable": true,
            "description": "Acronym of the organization"
          },
          "description": {
            "type": "string",
            "example": "The primary office of the President responsible for developing the President's annual budget and for overseeing the implementation of that budget.",
            "nullable": true,
            "description": "Description of the organization"
          },
          "component": {
            "type": "string",
            "example": "Department/Operating Division",
            "nullable": true,
            "description": "Component type of the organization"
          },
          "fullPath": {
            "type": "string",
            "example": "Department of Health & Human Services > Centers for Medicare & Medicaid Services > Office of Management and Budget (OMB)",
            "nullable": true,
            "description": "Full hierarchical path of the organization"
          },
          "parentId": {
            "type": "string",
            "example": "{66666666-7777-8888-9999-000000000000}",
            "nullable": true,
            "description": "ID of the parent organization"
          },
          "Organizations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationSchema"
            },
            "nullable": true,
            "description": "Child organizations (recursive structure)"
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "Response": {
        "type": "object",
        "required": [
          "result",
          "message"
        ],
        "properties": {
          "result": {
            "type": "string"
          },
          "message": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Role": {
        "type": "object",
        "required": [
          "application",
          "objectId",
          "roleTypeId"
        ],
        "properties": {
          "application": {
            "type": "string",
            "enum": [
              "alfabet",
              "all"
            ],
            "example": "alfabet",
            "description": "Application where the role assignment exists"
          },
          "assigneeDesc": {
            "type": "string",
            "example": "description"
          },
          "assigneeEmail": {
            "type": "string",
            "example": "jdoe@email.com"
          },
          "assigneeFirstName": {
            "type": "string",
            "example": "John"
          },
          "assigneeId": {
            "type": "string",
            "example": "{550e8400-e29b-41d4-a716-446655440000}",
            "description": "ID of the role assignee, if a person"
          },
          "assigneeIsDeleted": {
            "type": "string",
            "example": "false",
            "description": "Indicated the person assigned the role is marked for deletion"
          },
          "assigneeLastName": {
            "type": "string",
            "example": "Doe"
          },
          "assigneeOrgId": {
            "type": "string",
            "example": "{550e8400-e29b-41d4-a716-446655440000}",
            "description": "ID of the role assignee, if an organization"
          },
          "assigneeOrgName": {
            "type": "string",
            "example": "CMS"
          },
          "assigneePhone": {
            "type": "string",
            "example": "123-456-7890"
          },
          "assigneeType": {
            "type": "string",
            "enum": [
              "organization",
              "person"
            ],
            "example": "person"
          },
          "assigneeUserName": {
            "type": "string",
            "example": "EUA1",
            "description": "Username of the role assignee, if a person"
          },
          "objectId": {
            "type": "string",
            "example": "{550e8400-e29b-41d4-a716-446655440000}",
            "description": "ID of the object the role is assigned to"
          },
          "objectType": {
            "type": "string",
            "example": "project",
            "description": "The type of object the role is assigned to"
          },
          "roleId": {
            "type": "string",
            "example": "{550e8400-e29b-41d4-a716-446655440000}",
            "description": "ID of the role assignment"
          },
          "roleTypeDesc": {
            "type": "string",
            "example": "Description",
            "description": "Description of the role type"
          },
          "roleTypeId": {
            "type": "string",
            "example": "{550e8400-e29b-41d4-a716-446655440000}",
            "description": "ID of the role type"
          },
          "roleTypeName": {
            "type": "string",
            "example": "Analyst",
            "description": "Name of the role type"
          }
        }
      },
      "RoleType": {
        "type": "object",
        "required": [
          "application",
          "objectId",
          "roleTypeId"
        ],
        "properties": {
          "application": {
            "type": "string",
            "enum": [
              "alfabet",
              "all"
            ],
            "example": "alfabet",
            "description": "Application where the role assignment exists"
          },
          "name": {
            "type": "string",
            "enum": [
              "AI Contact",
              "API Contact",
              "Budget Analyst",
              "Business Owner",
              "Business Question Contact",
              "Contracting Officer's Representative (COR)",
              "DA Reviewer",
              "Data Center Contact",
              "ISSO Government Task Lead (GTL)",
              "Project Lead",
              "QA Reviewer",
              "System Maintainer",
              "Subject Matter Expert (SME)",
              "Support Staff",
              "Survey Point of Contact",
              "Technical System Issues Contact"
            ]
          },
          "description": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "Unauthorized": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "string",
            "example": "Unauthorized access"
          }
        }
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Bad request - Invalid input data provided. This occurs when required fields are missing, data formats are incorrect, or validation rules are violated.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/BadRequest"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden - User lacks permission to add notes to the specified system. Verify that your user account has the necessary permissions for this system.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Forbidden"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal server error - An unexpected error occurred on the server. If this persists, contact system administrators.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/InternalServerError"
            }
          }
        }
      },
      "NotFound": {
        "description": "Not found - The specified system ID does not exist in the census database. Verify the system ID is correct and the system has been registered.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/NotFound"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized - Missing or invalid authentication credentials. Ensure you have provided valid API key or authentication token.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Unauthorized"
            }
          }
        }
      }
    }
  }
}
