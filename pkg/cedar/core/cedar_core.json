{
  "swagger" : "2.0",
  "info" : {
    "description" : "The CMS System Census Core API consists of interfaces specific to System Census Web Application, which captures the information of several business applications at CMS. This API resources are organized by the web application views (pages). System Census Core API internally leverages the broader Cedar Core API for several CRUD operation.\n",
    "version" : "2.0.0",
    "title" : "System Census Core API",
    "termsOfService" : "https://www.cedardev.cms.gov/",
    "contact" : {
      "email" : "EnterpriseArchitecture@cms.hhs.gov"
    }
  },
  "host" : "webmethods-apigw.cedardev.cms.gov",
  "basePath" : "/gateway/System Census Core API/2.0.0",
  "tags" : [ {
    "name" : "admin",
    "description" : ""
  }, {
    "name" : "note",
    "description" : ""
  }, {
    "name" : "status",
    "description" : ""
  }, {
    "name" : "page",
    "description" : ""
  }, {
    "name" : "person",
    "description" : "CMS people",
    "externalDocs" : {
      "description" : "Is there an external site?",
      "url" : "http://localhost.com"
    }
  } ],
  "schemes" : [ "http" ],
  "security" : [ {
    "apiKey" : [ ]
  } ],
  "paths" : {
    "/page/budgetAndContracts" : {
      "get" : {
        "tags" : [ "page" ],
        "summary" : "Retrieve budget and contracts data",
        "description" : "Retrieve budget and contracts information by system ID.",
        "operationId" : "pageBudgetAndContractsFind",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "systemId",
          "in" : "query",
          "description" : "ID of system to retrieve budget and contracts information.",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PageBudgetAndContracts"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "page" ],
        "summary" : "Add (or update) budget and contracts data",
        "description" : "Add  (or update) budget and contracts information for a system.",
        "operationId" : "pageBudgetAndContractsAdd",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Budget and contracts information.",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PageBudgetAndContracts"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      }
    },
    "/page/dataExchange/status" : {
      "get" : {
        "tags" : [ "page" ],
        "summary" : "Retrieve a list of data exhange status",
        "description" : "Retrieve a list of data exchange status based on query criteria",
        "operationId" : "pageDataExchangeStatusFind",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "systemId",
          "in" : "query",
          "description" : "ID of the system that the data exchange is associated with",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "direction",
          "in" : "query",
          "description" : "The direction of the data exchange, relative to the systemId provided",
          "required" : false,
          "type" : "string",
          "enum" : [ "sender", "receiver", "both" ]
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PageDataExchangeStatusFindResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "page" ],
        "summary" : "Add (or update) a list of data exhange status",
        "description" : "Add (or update) a list of data exchange status for a given system",
        "operationId" : "pageDataExchangeStatusAdd",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Data Exchange Status information",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PageDataExchangeStatusAddRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/UpsertResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "page" ],
        "summary" : "Delete a list of data exchange status",
        "description" : "Delete a list of data exchange status based on the exchange IDs",
        "operationId" : "pageDataExchangeStatusDelete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "An ID of one or more data exchanges whose status should be deleted",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      }
    },
    "/page/dataExchange/notes" : {
      "get" : {
        "tags" : [ "page" ],
        "summary" : "Retrieve data exchange notes",
        "description" : "Retrieve data exchange notes by exchange ID",
        "operationId" : "pageDataExchangeNotesFind",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "exchangeId",
          "in" : "query",
          "description" : "ID of data exchange whose notes to retrieve",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PageDataExchangeNotesFindResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "page" ],
        "summary" : "Add data exchange notes",
        "description" : "Add data exchange notes",
        "operationId" : "pageDataExchangeNotesAdd",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Data Exchange notes information",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PageDataExchangeNotesAddRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/UpsertResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "page" ],
        "summary" : "Delete a list of data exchange notes",
        "description" : "Delete a list of data exchange notes based on the exchange IDs",
        "operationId" : "pageDataExchangeNotesDelete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "An ID of one or more data exchanges whose notes should be deleted",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      }
    },
    "/page/systemsList" : {
      "get" : {
        "tags" : [ "page" ],
        "summary" : "Retrieve the systems list",
        "description" : "Retreives the list of Systems that were collected as part of System Census till to date. It contains high-level information for each of the System including the point of contacts",
        "operationId" : "pageSystemsListFind",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "A system's ID",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "System state",
          "required" : false,
          "type" : "string",
          "enum" : [ "active", "retired" ]
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "System status",
          "required" : false,
          "type" : "string",
          "enum" : [ "approved", "draft" ]
        }, {
          "name" : "version",
          "in" : "query",
          "description" : "System versions",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "includeInSurvey",
          "in" : "query",
          "description" : "Include only system census eligible systems",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "idsOnly",
          "in" : "query",
          "description" : "Return only system ids and names",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "belongsTo",
          "in" : "query",
          "description" : "Return only sub-systems of the system ID provided",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PageSystemsList"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      }
    },
    "/page/systemMaintainer" : {
      "get" : {
        "tags" : [ "page" ],
        "summary" : "Retrieve the system maintainer",
        "description" : "Retrieve the system maintainer based on query criteria",
        "operationId" : "pageSystemMaintainerFind",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Application RefStr",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "query",
          "description" : "Application version",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PageSystemMaintainerResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "page" ],
        "summary" : "Add data from a given page",
        "description" : "Add data from a given page",
        "operationId" : "pageSystemMaintainerAdd",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Page detail information to be added to CEDAR",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PageSystemMaintainer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      }
    },
    "/admin/reviewer" : {
      "get" : {
        "tags" : [ "admin" ],
        "summary" : "Retrieve a list of potential reviewers",
        "description" : "Reviewers are CMS employees responsible for verifying the accuracy and completeness of the System Census Survey data each year. There are two types of reviewers, QA and DA. The list of potential reviewers is returned by this endpoint and can be filtered by 'type'",
        "operationId" : "adminReviewerFindList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "description" : "The type of reviewers to be returned. Either 'QA', 'DA', or 'null'. Null will return both QA and DA reviewers.",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/ReviewerFindResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "admin" ],
        "summary" : "Add a list of potential reviewers",
        "description" : "Reviewers are CMS employees responsible for verifying the accuracy and completeness of the System Census Survey data each year. There are two types of reviewers, QA and DA. Additional reviewers may be added via this endpoint. 'id' is ignored for POSTs. 'userName' and 'fullName' are required.",
        "operationId" : "adminReviewerAddList",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "List of notes to add to a system",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReviewerAddRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "207" : {
            "description" : "Multi-Status",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "admin" ],
        "summary" : "Delete a list of potential reviewers",
        "description" : "Reviewers are CMS employees responsible for verifying the accuracy and completeness of the System Census Survey data each year. There are two types of reviewers, QA and DA. One or more reviewers may be deleted via this endpoint. Either 'id' or 'userName' must be required. All else is ignored.",
        "operationId" : "adminReviewerDeleteList",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "List of notes to add to a system",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ReviewerDeleteRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "207" : {
            "description" : "Multi-Status",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      }
    },
    "/note" : {
      "get" : {
        "tags" : [ "note" ],
        "summary" : "Retrieve a list of notes for a given system.",
        "description" : "Retrieve a list of notes based on a system ID and page name.",
        "operationId" : "noteFindList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "A system's ID",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "pageName",
          "in" : "query",
          "description" : "The system census page name",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/NoteFindResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "note" ],
        "summary" : "Add a list of notes",
        "description" : "Add a list of notes for a system. This interface takes an array of Notes documents.",
        "operationId" : "noteAddList",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "List of notes to add to a system",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/NoteAddRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "note" ],
        "summary" : "Delete a list of notes",
        "description" : "Delete a list of notes based on the note's ID(s).",
        "operationId" : "noteDeleteList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "An ID of one or more notes",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      }
    },
    "/person" : {
      "get" : {
        "tags" : [ "person" ],
        "summary" : "Retrieve a list of persons from LDAP",
        "description" : "Retrieve a list of persons from LDAP based on query criteria",
        "operationId" : "personFindList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "A person's id",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "userName",
          "in" : "query",
          "description" : "A person's username",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "firstName",
          "in" : "query",
          "description" : "A person's first name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "lastName",
          "in" : "query",
          "description" : "A person's last name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "phone",
          "in" : "query",
          "description" : "A person's phone number",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "email",
          "in" : "query",
          "description" : "A person's email",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PersonFindResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      }
    },
    "/page/Urls" : {
      "get" : {
        "tags" : [ "page" ],
        "summary" : "Retrieve Url information",
        "description" : "Retrieve the URLs that are used to access the system, for a given System ID",
        "operationId" : "pageUrlsFind",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "systemId",
          "in" : "query",
          "description" : "ID of system to retrieve system component information about",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PageUrlsFindResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "page" ],
        "summary" : "Add, update or delete Urls",
        "description" : "Allows to update or delete the URLs from the existing list of URLs that are used to access the system",
        "operationId" : "pageUrlsAdd",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Page detail information to be added to CEDAR",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PageUrlsAddRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      }
    },
    "/page/dataCenters" : {
      "get" : {
        "tags" : [ "page" ],
        "summary" : "Retrieve data center/deployment information",
        "description" : "Retrieves the deployment information  including the data center or cloud service provider information, for given System ID",
        "operationId" : "pageDataCentersFind",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "systemId",
          "in" : "query",
          "description" : "ID of the system that the deployment(s) is associated with",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "state",
          "in" : "query",
          "description" : "Deployment state",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "Deployment status",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "Deployment type",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PageDataCenters"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "page" ],
        "summary" : "Add (or update) data center/deployment information",
        "description" : "Add (or update) the deployment information including the data center or cloud service provider. If an update, Deployment ID and Deployment Element ID are required. ",
        "operationId" : "pageDataCenterAdd",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Data center/deployment information",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PageDataCenters"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      }
    },
    "/page/softwareProducts" : {
      "get" : {
        "tags" : [ "page" ],
        "summary" : "Retrieve the softwareProducts",
        "description" : "Retrieves the list of software products such as operating sytems, database, middleware etc. and versions that are used by the system to perform business functions",
        "operationId" : "pageSoftwareProductsFind",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Application RefStr",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "query",
          "description" : "Application version",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PageSoftwareProductsResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "page" ],
        "summary" : "Add a software product that is used by the system",
        "description" : "Add the software product and version details that is used by the system. Software produt can be operating sytems, database, middleware etc. that are needed to perform business function",
        "operationId" : "pageSoftwareProductsAdd",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Page detail information to be added to CEDAR",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PageSoftwareProducts"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      }
    },
    "/status" : {
      "get" : {
        "tags" : [ "status" ],
        "summary" : "Retrieve a list of status",
        "description" : "Retrieve a list of status based on a system ID and survey page name",
        "operationId" : "statusFindList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "A system's ID",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "pageName",
          "in" : "query",
          "description" : "The system census page name",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "summarize",
          "in" : "query",
          "description" : "Whether to return a summarized list per system",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/StatusFindResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "status" ],
        "summary" : "Add a list of status",
        "description" : "Add a list of survey pages and it's status for the system",
        "operationId" : "statusAddList",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "List of status to add to a system",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/StatusAddRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/UpsertResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "status" ],
        "summary" : "Delete a list of system status",
        "description" : "Delete a list of statuses for given the list of the status ID(s)",
        "operationId" : "statusDeleteList",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "An ID of one or more status",
          "required" : true,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "soft",
          "in" : "query",
          "description" : "Whether to perform a soft instead of a hard delete",
          "required" : false,
          "type" : "boolean"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      }
    },
    "/page/dataExchange" : {
      "get" : {
        "tags" : [ "page" ],
        "summary" : "Retrieve data exchange information",
        "description" : "Retrieves data exchange information by system ID. A data exchange can be between two CMS IT systems or between a CMS system and a non-CMS stakeholder such as the Social Security Administration.",
        "operationId" : "pageDataExchangeFind",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "systemId",
          "in" : "query",
          "description" : "ID of system to retrieve data exchange information about",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "query",
          "description" : "Version of the data exchanges to be retrieved",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PageDataExchange"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "page" ],
        "summary" : "Add (or update) data exchange information",
        "description" : "Add  (or update) data exchange information for a system. A data exchange can be between two CMS IT systems or between a CMS system and a non-CMS stakeholder such as the Social Security Administration. For updates, exchangeId is required.",
        "operationId" : "pageDataExchangeAdd",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Data exchange information",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PageDataExchange"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      }
    },
    "/page/systemLifecycle" : {
      "get" : {
        "tags" : [ "page" ],
        "summary" : "Retrieve the system lifecycle",
        "description" : "Retrieve the system lifecycle information such as development methodology, requirements management, state of development and deployment etc.",
        "operationId" : "pageSystemLifecycleFind",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Application RefStr",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "query",
          "description" : "Application version",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PageSystemLifecycleResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "page" ],
        "summary" : "Add system lifecycle information for a system",
        "description" : "Add system lifecycle information such as development methodology, requirements management, state of development and deployment etc.",
        "operationId" : "pageSystemLifecycleAdd",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Page detail information to be added to CEDAR",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PageSystemLifecycle"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "page" ],
        "summary" : "Delete the Enterprise Release and Release Item records",
        "description" : "Delete the Enterprise Release and Release Item records",
        "operationId" : "pageSystemLifecycleDelete",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Application RefStr",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "enterpriseReleaseRefstr",
          "in" : "query",
          "description" : "EnterpriseRelease RefStr",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "query",
          "description" : "EnterpriseRelease version",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      }
    },
    "/page/systemComponents" : {
      "get" : {
        "tags" : [ "page" ],
        "summary" : "Retrieve the sub-systems or components information of the system",
        "description" : "Retrieves the information for list of sub-systems or components that make up the overall system",
        "operationId" : "pageSystemComponentsFind",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "systemId",
          "in" : "query",
          "description" : "ID of system to retrieve system component information about",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "query",
          "description" : "Version of system to retrieve system component information about",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PageSystemComponentsFindResponse"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "page" ],
        "summary" : "Add, update or delete system components",
        "description" : "Add, update or delete any of the sub-systems or components information of the system",
        "operationId" : "pageSystemComponentsAdd",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Page detail information to be added to CEDAR",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PageSystemComponents"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      }
    },
    "/page/businessOwner" : {
      "get" : {
        "tags" : [ "page" ],
        "summary" : "Retrieve business owner basic information data",
        "description" : "Retrieve business owner basic information by system ID.",
        "operationId" : "pageBusinessOwnerFind",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "ID of system to retrieve",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/PageBusinessOwner"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "page" ],
        "summary" : "Add (or update) business owner basic information data",
        "description" : "Add  (or update) business owner basic information data for a system. If an update, ID is required.",
        "operationId" : "pageBusinessOwnerAdd",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "description" : "Business owner basic information",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PageBusinessOwner"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "400" : {
            "description" : "Bad Request",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "401" : {
            "description" : "Access Denied",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          },
          "500" : {
            "description" : "Internal Server Error",
            "schema" : {
              "$ref" : "#/definitions/Response"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "apiKey" : {
      "type" : "apiKey",
      "name" : "x-Gateway-APIKey",
      "in" : "header"
    }
  },
  "definitions" : {
    "PageSystemComponents" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "systemId" : {
          "type" : "string",
          "example" : "326-1100-0"
        },
        "parentSystemId" : {
          "type" : "string",
          "example" : "326-1550-0"
        },
        "subSystem" : {
          "type" : "string",
          "example" : "Yes/No"
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "SystemComponents" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SystemComponents"
          }
        },
        "pageName" : {
          "type" : "string",
          "example" : "System Components"
        }
      }
    },
    "Products" : {
      "type" : "object",
      "required" : [ "technopedia_id" ],
      "properties" : {
        "technopedia_id" : {
          "type" : "string"
        },
        "api_gateway_use" : {
          "type" : "boolean"
        },
        "local_component_refstr" : {
          "type" : "string"
        },
        "closest_version" : {
          "type" : "boolean"
        },
        "ela_purchase" : {
          "type" : "string"
        },
        "actual_version" : {
          "type" : "string"
        },
        "provides_ai_capability" : {
          "type" : "boolean"
        },
        "ela_vendor_id" : {
          "type" : "string"
        }
      }
    },
    "PageSoftwareProducts" : {
      "type" : "object",
      "required" : [ "applicationId" ],
      "properties" : {
        "machineLearningType" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "aiSolnCatg" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "usesMachineLearning" : {
          "type" : "boolean"
        },
        "usesAiTech" : {
          "type" : "string"
        },
        "apisDeveloped" : {
          "type" : "string"
        },
        "apiFHIRUseOther" : {
          "type" : "string"
        },
        "SoftwareProducts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SoftwareProducts"
          }
        },
        "apisAccessibility" : {
          "type" : "string"
        },
        "machineLearnClasOther" : {
          "type" : "string"
        },
        "apiDescPubLocation" : {
          "type" : "string"
        },
        "machineLearnClstOther" : {
          "type" : "string"
        },
        "machineLearnAsalOther" : {
          "type" : "string"
        },
        "machineLearnRegrOther" : {
          "type" : "string"
        },
        "apiDescPublished" : {
          "type" : "string"
        },
        "systemHasApiGateway" : {
          "type" : "boolean"
        },
        "applicationId" : {
          "type" : "string"
        },
        "apiHasPortal" : {
          "type" : "boolean"
        },
        "apiDataArea" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "apiFHIRUse" : {
          "type" : "string"
        },
        "aiSolnCatgOther" : {
          "type" : "string"
        }
      }
    },
    "Deployments" : {
      "type" : "object",
      "properties" : {
        "deleted" : {
          "type" : "boolean"
        },
        "Deployment" : {
          "$ref" : "#/definitions/Deployment"
        },
        "updated" : {
          "type" : "boolean"
        }
      }
    },
    "Deployment" : {
      "type" : "object",
      "required" : [ "id", "name", "systemId" ],
      "properties" : {
        "systemId" : {
          "type" : "string",
          "example" : "326-1-0"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date"
        },
        "isHotSite" : {
          "type" : "string",
          "example" : "yes"
        },
        "description" : {
          "type" : "string"
        },
        "contractorName" : {
          "type" : "string",
          "example" : "Acumen"
        },
        "systemVersion" : {
          "type" : "string",
          "example" : "1"
        },
        "hasProductionData" : {
          "type" : "string",
          "example" : "yes"
        },
        "replicatedSystemElements" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "System Server Software"
          }
        },
        "deploymentType" : {
          "type" : "string",
          "enum" : [ "COOP DR", "Development", "Implementation", "Integration", "Production", "Testing", "Training", "Validation", "Other" ]
        },
        "DataCenter" : {
          "$ref" : "#/definitions/DataCenter"
        },
        "systemName" : {
          "type" : "string",
          "example" : "Health Insurance and Oversight System"
        },
        "deploymentElementId" : {
          "type" : "string",
          "example" : "69-1-0"
        },
        "name" : {
          "type" : "string",
          "example" : "Accountable Care Organization Management System v.1.0 (COOP DR)"
        },
        "id" : {
          "type" : "string",
          "example" : "351-1-0"
        },
        "state" : {
          "type" : "string",
          "enum" : [ "active", "planned", "retired" ]
        },
        "startDate" : {
          "type" : "string",
          "format" : "date"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "approved", "draft" ]
        },
        "wanType" : {
          "type" : "string",
          "example" : "Internet - Contractor"
        }
      }
    },
    "StatusAddRequest" : {
      "type" : "object",
      "required" : [ "Status" ],
      "properties" : {
        "Status" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Status"
          }
        }
      }
    },
    "PageDataExchangeNote" : {
      "type" : "object",
      "required" : [ "exchangeId", "note", "user" ],
      "properties" : {
        "exchangeId" : {
          "type" : "string",
          "example" : "139-186-0"
        },
        "date" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2020-09-29T10:34:00.000Z"
        },
        "note" : {
          "type" : "string",
          "example" : "Sample note"
        },
        "role" : {
          "type" : "string",
          "example" : "Reviewer"
        },
        "user" : {
          "type" : "string",
          "example" : "John Smith"
        }
      }
    },
    "PageBusinessOwner" : {
      "type" : "object",
      "required" : [ "id" ],
      "properties" : {
        "numberOfFederalFteId" : {
          "type" : "string",
          "example" : "123-456-7"
        },
        "costPerYear" : {
          "type" : "string",
          "example" : "13759255.66"
        },
        "isCmsOwned" : {
          "type" : "boolean",
          "example" : true
        },
        "description" : {
          "type" : "string",
          "example" : "CMS system description"
        },
        "numberOfContractorFteId" : {
          "type" : "string",
          "example" : "123-456-7"
        },
        "version" : {
          "type" : "string",
          "example" : "fy22"
        },
        "pageName" : {
          "type" : "string",
          "example" : "Business Owner Basic Information Page"
        },
        "numberOfSupportedUsersPerMonth" : {
          "type" : "string",
          "example" : "314"
        },
        "storesBeneficiaryAddress" : {
          "type" : "boolean",
          "example" : true
        },
        "storesBankingData" : {
          "type" : "boolean",
          "example" : false
        },
        "numberOfContractorFte" : {
          "type" : "string",
          "example" : "100"
        },
        "storesHealthDisparityData" : {
          "type" : "boolean",
          "example" : true
        },
        "id" : {
          "type" : "string",
          "example" : "123-456-7"
        },
        "numberOfFederalFte" : {
          "type" : "string",
          "example" : "25"
        },
        "numberOfSupportedUsersPerMonthId" : {
          "type" : "string",
          "example" : "123-456-7"
        }
      }
    },
    "PageDataExchangeStatusFindResponse" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "ExchangeStatus" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PageDataExchangeStatus"
          }
        }
      }
    },
    "BudgetIds" : {
      "type" : "object",
      "required" : [ "projectId" ],
      "properties" : {
        "contractDeliverableId" : {
          "type" : "string",
          "example" : "22-123-00",
          "description" : "Contract deliverable ID tying this budget project to the contract"
        },
        "deleted" : {
          "type" : "boolean",
          "description" : "Flag indicating whether this budget was dissociated with the contract"
        },
        "id" : {
          "type" : "string",
          "example" : "589-329-0",
          "description" : "OFM budget internal ID in system of record"
        },
        "projectId" : {
          "type" : "string",
          "example" : "000010",
          "description" : "OFM budget project ID in system of record"
        }
      }
    },
    "PageSoftwareProductsResponse" : {
      "type" : "object",
      "properties" : {
        "machineLearningType" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "aiSolnCatg" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "usesMachineLearning" : {
          "type" : "boolean"
        },
        "usesAiTech" : {
          "type" : "string"
        },
        "apisDeveloped" : {
          "type" : "string"
        },
        "apiFHIRUseOther" : {
          "type" : "string"
        },
        "apisAccessibility" : {
          "type" : "string"
        },
        "machineLearnClasOther" : {
          "type" : "string"
        },
        "apiDescPubLocation" : {
          "type" : "string"
        },
        "machineLearnClstOther" : {
          "type" : "string"
        },
        "machineLearnAsalOther" : {
          "type" : "string"
        },
        "machineLearnRegrOther" : {
          "type" : "string"
        },
        "softwareProducts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SoftwareProductsSearchItem"
          }
        },
        "apiDescPublished" : {
          "type" : "string"
        },
        "systemHasApiGateway" : {
          "type" : "boolean"
        },
        "apiHasPortal" : {
          "type" : "boolean"
        },
        "apiDataArea" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "apiFHIRUse" : {
          "type" : "string"
        },
        "aiSolnCatgOther" : {
          "type" : "string"
        }
      }
    },
    "PageSystemLifecycleResponse" : {
      "type" : "object",
      "properties" : {
        "agile_methodology_use" : {
          "type" : "string"
        },
        "source_code_on_demand" : {
          "type" : "string"
        },
        "ops_maint_on_demand" : {
          "type" : "string"
        },
        "enterprise_release" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "description" : {
                "type" : "string"
              },
              "enterprise_release_refstr" : {
                "type" : "string"
              },
              "major_release" : {
                "type" : "string"
              },
              "start_date" : {
                "type" : "string"
              }
            }
          }
        },
        "system_design_on_demand" : {
          "type" : "string"
        },
        "req_on_demand" : {
          "type" : "string"
        },
        "planning_retirement_quart" : {
          "type" : "string"
        },
        "test_reports_on_demand" : {
          "type" : "string"
        },
        "test_script_on_demand" : {
          "type" : "string"
        },
        "development_work" : {
          "type" : "string"
        },
        "release_description" : {
          "type" : "string"
        },
        "dev_complete_percent" : {
          "type" : "string"
        },
        "retiredorreplace_date" : {
          "type" : "string"
        },
        "retire_or_replace" : {
          "type" : "string"
        },
        "test_plan_on_demand" : {
          "type" : "string"
        },
        "bus_artifacts_on_demand" : {
          "type" : "string"
        }
      }
    },
    "DataExchanges" : {
      "type" : "object",
      "properties" : {
        "Exchange" : {
          "$ref" : "#/definitions/Exchange"
        },
        "Status" : {
          "$ref" : "#/definitions/PageDataExchangeStatus"
        },
        "undeleted" : {
          "type" : "boolean"
        },
        "deleted" : {
          "type" : "boolean"
        },
        "updated" : {
          "type" : "boolean"
        },
        "direction" : {
          "type" : "string",
          "enum" : [ "sender", "receiver", "both" ]
        }
      }
    },
    "NoteAddRequest" : {
      "type" : "object",
      "required" : [ "Notes" ],
      "properties" : {
        "Notes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Note"
          }
        }
      }
    },
    "PageBudgetAndContracts" : {
      "type" : "object",
      "required" : [ "Budgets" ],
      "properties" : {
        "systemId" : {
          "type" : "string",
          "example" : "123-45-67"
        },
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageName" : {
          "type" : "string",
          "example" : "Budget and Contracts"
        },
        "Budgets" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Budget"
          }
        },
        "Contracts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Contract"
          }
        }
      }
    },
    "PageDataExchange" : {
      "type" : "object",
      "required" : [ "count", "systemId" ],
      "properties" : {
        "systemId" : {
          "type" : "string",
          "example" : "123-45-67"
        },
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "DataExchanges" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DataExchanges"
          }
        },
        "pageName" : {
          "type" : "string",
          "example" : "Data Exchanges"
        }
      }
    },
    "ReviewerAddRequest" : {
      "type" : "object",
      "properties" : {
        "Reviewers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Reviewer"
          }
        }
      }
    },
    "Status" : {
      "type" : "object",
      "required" : [ "status", "systemId" ],
      "properties" : {
        "systemId" : {
          "type" : "string",
          "example" : "326-1-0"
        },
        "displayPageName" : {
          "type" : "string",
          "example" : "Page Name"
        },
        "percentComplete" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100
        },
        "pageName" : {
          "type" : "string",
          "example" : "PageName"
        },
        "respondentId" : {
          "type" : "string",
          "example" : "ABCD"
        },
        "respondentFirstName" : {
          "type" : "string",
          "example" : "John"
        },
        "lastUpdatedDate" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2020-11-03T00:00:00.000Z"
        },
        "statusId" : {
          "type" : "string",
          "example" : "9999"
        },
        "respondentLastName" : {
          "type" : "string",
          "example" : "Smith"
        },
        "lastUpdatedById" : {
          "type" : "string",
          "example" : "ABCD"
        },
        "lastUpdatedByFirstName" : {
          "type" : "string",
          "example" : "John"
        },
        "status" : {
          "type" : "string",
          "example" : "Not Started"
        },
        "lastUpdatedByLastName" : {
          "type" : "string",
          "example" : "Smith"
        }
      }
    },
    "PageSystemComponentsFindResponse" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "parentSystem" : {
          "type" : "string"
        },
        "parentSystemId" : {
          "type" : "string"
        },
        "isSubsystem" : {
          "type" : "string"
        },
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "SystemComponents" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PageSystemComponentsStatus"
          }
        }
      }
    },
    "ReviewerDeleteRequest" : {
      "type" : "object",
      "properties" : {
        "Reviewers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Reviewer"
          }
        }
      }
    },
    "StatusFindResponse" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "Status" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Status"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        }
      }
    },
    "PageDataCenters" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "movingToCloudDate" : {
          "type" : "string",
          "format" : "date",
          "example" : "2021-10-01"
        },
        "systemId" : {
          "type" : "string",
          "example" : "123-45-67"
        },
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Deployments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Deployments"
          }
        },
        "pageName" : {
          "type" : "string",
          "example" : "DataCenterHostingEnvironments"
        },
        "movingToCloud" : {
          "type" : "string",
          "example" : "Yes"
        }
      }
    },
    "Urls" : {
      "type" : "object",
      "properties" : {
        "deleted" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Boolean indicator for deleting the URL entry"
        },
        "updated" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Boolean indicator for updating the URL entry"
        },
        "Url" : {
          "type" : "array",
          "description" : "List of URLs that are to be updated or deleted based on the above flags",
          "items" : {
            "$ref" : "#/definitions/Url"
          }
        }
      }
    },
    "Exchange" : {
      "type" : "object",
      "properties" : {
        "connectionFrequency" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : ""
          }
        },
        "containsHealthDisparityData" : {
          "type" : "boolean"
        },
        "isAddressEditable" : {
          "type" : "boolean"
        },
        "toOwnerId" : {
          "type" : "string",
          "example" : "326-762-0"
        },
        "sharedViaApi" : {
          "type" : "boolean"
        },
        "exchangeVersion" : {
          "type" : "string",
          "example" : "1"
        },
        "toOwnerName" : {
          "type" : "string",
          "example" : "Account Management"
        },
        "containsPii" : {
          "type" : "boolean"
        },
        "exchangeStartDate" : {
          "type" : "string",
          "format" : "date"
        },
        "exchangeState" : {
          "type" : "string",
          "example" : "Active"
        },
        "exchangeEndDate" : {
          "type" : "string",
          "format" : "date"
        },
        "fromOwnerId" : {
          "type" : "string",
          "example" : "326-762-0"
        },
        "dataExchangeAgreement" : {
          "type" : "string",
          "example" : ""
        },
        "isBeneficiaryMailingFile" : {
          "type" : "boolean"
        },
        "dataFormat" : {
          "type" : "string",
          "example" : ""
        },
        "dataFormatOther" : {
          "type" : "string"
        },
        "toOwnerType" : {
          "type" : "string",
          "enum" : [ "application", "organization" ]
        },
        "containsBeneficiaryAddress" : {
          "type" : "boolean"
        },
        "fromOwnerName" : {
          "type" : "string",
          "example" : "Account Management"
        },
        "exchangeId" : {
          "type" : "string",
          "example" : "139-1178-0"
        },
        "numOfRecords" : {
          "type" : "string",
          "example" : "100,000 – 1 Million"
        },
        "exchangeRetiredDate" : {
          "type" : "string",
          "format" : "date"
        },
        "exchangeDescription" : {
          "type" : "string",
          "example" : "Reference data on vendors acting on behalf of insurance issuers"
        },
        "containsPhi" : {
          "type" : "boolean"
        },
        "exchangeName" : {
          "type" : "string",
          "example" : "Acumen Web Portals 1.0 >> Drug Data Processing System 1.0"
        },
        "businessPurposeOfAddress" : {
          "type" : "string",
          "example" : ""
        },
        "fromOwnerType" : {
          "type" : "string",
          "enum" : [ "application", "organization" ]
        },
        "typeOfData" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "example" : ""
              },
              "id" : {
                "type" : "string",
                "example" : ""
              }
            }
          }
        },
        "apiOwnership" : {
          "type" : "string",
          "example" : ""
        }
      }
    },
    "SystemsList" : {
      "type" : "object",
      "required" : [ "id", "name" ],
      "properties" : {
        "qaReviewerLastName" : {
          "type" : "string",
          "example" : "Doe"
        },
        "acronym" : {
          "type" : "string",
          "example" : "CMSS"
        },
        "systemMaintainerOrg" : {
          "type" : "string",
          "example" : "OIT"
        },
        "description" : {
          "type" : "string",
          "example" : "This is a CMS System decription"
        },
        "daReviewerAssignmentId" : {
          "type" : "string",
          "example" : "384-1234-0"
        },
        "percentComplete" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 100
        },
        "daReviewerLastName" : {
          "type" : "string",
          "example" : "Doe"
        },
        "version" : {
          "type" : "string",
          "example" : "1.0"
        },
        "daReviewerFirstName" : {
          "type" : "string",
          "example" : "John"
        },
        "nextVersionId" : {
          "type" : "string",
          "example" : "326-1-0"
        },
        "previousVersionId" : {
          "type" : "string",
          "example" : "326-3-0"
        },
        "daReviewerUserName" : {
          "type" : "string",
          "example" : "XXYY"
        },
        "businessOwnerOrg" : {
          "type" : "string",
          "example" : "Center for Medicare Management"
        },
        "censusStatus" : {
          "type" : "string",
          "example" : "Not Started"
        },
        "qaReviewerAssignmentId" : {
          "type" : "string",
          "example" : "384-1234-0"
        },
        "name" : {
          "type" : "string",
          "example" : "CMS System"
        },
        "businessOwnerOrgComp" : {
          "type" : "string",
          "example" : "CM-(FFS)"
        },
        "qaReviewerUserName" : {
          "type" : "string",
          "example" : "AABB"
        },
        "id" : {
          "type" : "string",
          "example" : "326-2-0"
        },
        "state" : {
          "type" : "string",
          "example" : "Active"
        },
        "systemMaintainerOrgComp" : {
          "type" : "string",
          "example" : "Enterprise Architecture and Data Group"
        },
        "qaReviewerFirstName" : {
          "type" : "string",
          "example" : "John"
        },
        "status" : {
          "type" : "string",
          "example" : "Approved"
        }
      }
    },
    "Note" : {
      "type" : "object",
      "required" : [ "note", "pageName", "systemId", "userId" ],
      "properties" : {
        "note" : {
          "type" : "string",
          "example" : "This is a note"
        },
        "systemId" : {
          "type" : "string",
          "example" : "326-1-0"
        },
        "userFirst" : {
          "type" : "string",
          "example" : "John"
        },
        "noteId" : {
          "type" : "string",
          "example" : "9999"
        },
        "userLast" : {
          "type" : "string",
          "example" : "Doe"
        },
        "userRole" : {
          "type" : "string",
          "example" : "requestor"
        },
        "pageName" : {
          "type" : "string",
          "example" : "PageName"
        },
        "userId" : {
          "type" : "string",
          "example" : "ABCD"
        },
        "createdOn" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "Contract" : {
      "type" : "object",
      "required" : [ "awardId", "id", "parentAwardId" ],
      "properties" : {
        "budgetIds" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BudgetIds"
          }
        },
        "awardId" : {
          "type" : "string",
          "example" : "HHSM500201600052I",
          "description" : "Contract number"
        },
        "tbmCostPool" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "example" : ""
              },
              "id" : {
                "type" : "string",
                "example" : ""
              }
            }
          }
        },
        "contractDeliverableId" : {
          "type" : "string",
          "example" : "11-22-333"
        },
        "deleted" : {
          "type" : "boolean",
          "description" : "Flag indicating whether this contract was deleted by the user"
        },
        "contractAdo" : {
          "type" : "string",
          "description" : "Yes/No"
        },
        "description" : {
          "type" : "string",
          "example" : "Strategic partners acquisition readiness",
          "description" : "Contract description"
        },
        "id" : {
          "type" : "string",
          "example" : "18-3-0"
        },
        "parentAwardId" : {
          "type" : "string",
          "example" : "HHSM500201600052I",
          "description" : "Parent contract number"
        },
        "tbmItTowerCategory" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "string",
                "example" : ""
              },
              "id" : {
                "type" : "string",
                "example" : ""
              }
            }
          }
        },
        "updated" : {
          "type" : "boolean",
          "description" : "Flag indicating whether this contract was added or updated by the user"
        }
      }
    },
    "PageDataExchangeNotesAddRequest" : {
      "type" : "object",
      "required" : [ "ExchangeNotes" ],
      "properties" : {
        "ExchangeNotes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PageDataExchangeNote"
          }
        }
      }
    },
    "Person" : {
      "type" : "object",
      "properties" : {
        "firstName" : {
          "type" : "string"
        },
        "lastName" : {
          "type" : "string"
        },
        "phone" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "userName" : {
          "type" : "string"
        },
        "email" : {
          "type" : "string"
        }
      }
    },
    "PageDataExchangeNotesFindResponse" : {
      "type" : "object",
      "required" : [ "ExchangeNotes", "count" ],
      "properties" : {
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1
        },
        "ExchangeNotes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PageDataExchangeNote"
          }
        }
      }
    },
    "PageSystemComponentsStatus" : {
      "type" : "object",
      "required" : [ "componentId", "componentName" ],
      "properties" : {
        "componentRetirementQuarter" : {
          "type" : "string",
          "example" : "2"
        },
        "componentId" : {
          "type" : "string",
          "example" : "139-6353-0"
        },
        "componentAcronym" : {
          "type" : "string",
          "example" : "ASO"
        },
        "description" : {
          "type" : "string"
        },
        "componentRetirementYear" : {
          "type" : "string",
          "example" : "2030"
        },
        "componentName" : {
          "type" : "string",
          "example" : "Account Management"
        }
      }
    },
    "ReviewerFindResponse" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Reviewers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Reviewer"
          }
        }
      }
    },
    "PageUrlsFindResponse" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1
        },
        "Urls" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Url"
          }
        },
        "pageName" : {
          "type" : "string"
        }
      }
    },
    "NoteFindResponse" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "Notes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Note"
          }
        }
      }
    },
    "PageSystemMaintainer" : {
      "type" : "object",
      "required" : [ "id", "version" ],
      "properties" : {
        "sourceCodeLoction" : {
          "type" : "string",
          "example" : "CMS Github"
        },
        "omDocumentationLocation" : {
          "type" : "string",
          "example" : "Sharepoint"
        },
        "majorRefreshDate" : {
          "type" : "string",
          "format" : "date"
        },
        "isRecordManagementScheduleApproved" : {
          "type" : "boolean",
          "example" : true
        },
        "yearToRetireReplace" : {
          "type" : "string",
          "example" : "2023"
        },
        "haveEnterpriseDataLakePlan" : {
          "type" : "string",
          "example" : "Enumeration of (Now | In 1 Year | In 3 Years | No Plans | What is EDL)"
        },
        "systemProductionDate" : {
          "type" : "string",
          "format" : "date"
        },
        "sourceCodeOnDemand" : {
          "type" : "boolean",
          "example" : true
        },
        "hasMetadataGlossary" : {
          "type" : "boolean",
          "example" : true
        },
        "hardCodedIpAddress" : {
          "type" : "boolean",
          "example" : true
        },
        "systemRequirementsLocation" : {
          "type" : "string",
          "example" : "Confluence"
        },
        "pageName" : {
          "type" : "string",
          "example" : "SystemMaintainerBasicInfo"
        },
        "systemRequirementsOnDemand" : {
          "type" : "boolean",
          "example" : true
        },
        "businessArtifactsOnDemand" : {
          "type" : "boolean",
          "example" : true
        },
        "businessArtifactsLocation" : {
          "type" : "string",
          "example" : "CMS Enterprise Confluence"
        },
        "nextMajorRefreshDate" : {
          "type" : "string",
          "format" : "date"
        },
        "testScriptsOnDemand" : {
          "type" : "boolean",
          "example" : true
        },
        "frontendAccessType" : {
          "type" : "string",
          "example" : "IPv4 and IPv6"
        },
        "netAccessibility" : {
          "type" : "string",
          "example" : "Accessible to a CMS-internal network only"
        },
        "id" : {
          "type" : "string"
        },
        "identityManagementSolutionOther" : {
          "type" : "string",
          "example" : ""
        },
        "recordManagementMetadata" : {
          "type" : "string",
          "example" : ""
        },
        "testPlanOnDemand" : {
          "type" : "boolean",
          "example" : true
        },
        "quarterToRetireReplace" : {
          "type" : "string",
          "example" : "3"
        },
        "agileUsed" : {
          "type" : "boolean",
          "example" : true
        },
        "systemDesignOnDemand" : {
          "type" : "boolean",
          "example" : true
        },
        "plansToRetireReplace" : {
          "type" : "string",
          "example" : "Yes - Retire and Replace"
        },
        "ipEnabledAssetCount" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1
        },
        "devWorkDescription" : {
          "type" : "string",
          "example" : "The type of development work underway..."
        },
        "testReportsOnDemand" : {
          "type" : "boolean",
          "example" : true
        },
        "identityManagementSolution" : {
          "type" : "string",
          "example" : ""
        },
        "systemDesignLocation" : {
          "type" : "string",
          "example" : "SharePoint"
        },
        "canDisposeRecordsData" : {
          "type" : "boolean",
          "example" : true
        },
        "version" : {
          "type" : "string",
          "example" : "22"
        },
        "testScriptsLocation" : {
          "type" : "string",
          "example" : "Github"
        },
        "recordManagementFormatOther" : {
          "type" : "string",
          "example" : ""
        },
        "ip6TransitionPlan" : {
          "type" : "string",
          "example" : "Yes, transition to IPv6"
        },
        "testReportsLocation" : {
          "type" : "string",
          "example" : "In Acumen's secure server"
        },
        "storeInCentralDataCatalog" : {
          "type" : "boolean",
          "example" : true
        },
        "ip6EnabledAssetPercent" : {
          "type" : "string",
          "example" : "Between 20% and 49%"
        },
        "deploymentFrequency" : {
          "type" : "string",
          "example" : "Monthly"
        },
        "name" : {
          "type" : "string",
          "example" : "CMS Enterprise Data Analytics Repository"
        },
        "recordsManagementBucket" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "Administrative Management"
          }
        },
        "omDocumentationOnDemand" : {
          "type" : "boolean",
          "example" : true
        },
        "systemCustomization" : {
          "type" : "string",
          "example" : "Less Than 20% Customization"
        },
        "testPlanLocation" : {
          "type" : "string",
          "example" : "Sharepoint"
        },
        "recordManagementFormat" : {
          "type" : "string",
          "example" : ""
        }
      }
    },
    "Url" : {
      "type" : "object",
      "properties" : {
        "providesVerCodeAccess" : {
          "type" : "string",
          "example" : "Yes/No",
          "description" : "A boolean flag to indicate Does this URL provide access to a versioned code repository?"
        },
        "urlHostingEnv" : {
          "type" : "string",
          "description" : "A string that contains What hosting environment is this URL for?"
        },
        "urlApiWaf" : {
          "type" : "string",
          "example" : "Yes/No",
          "description" : "A boolean flag to indicate whether application is behind a Web Application Firewall (WAF)"
        },
        "link" : {
          "type" : "string",
          "description" : "A valid and full system URL"
        },
        "urlId" : {
          "type" : "string",
          "example" : "218-10-0",
          "description" : "Unique key that uniquely identified the URL in database"
        },
        "urlApiEndpoint" : {
          "type" : "string",
          "example" : "Yes/No",
          "description" : "A boolean flag to indicate whether URL is an API Endpoint"
        }
      }
    },
    "PageSystemMaintainerResponse" : {
      "type" : "object",
      "required" : [ "id", "version" ],
      "properties" : {
        "sourceCodeLoction" : {
          "type" : "string",
          "example" : "CMS Github"
        },
        "omDocumentationLocation" : {
          "type" : "string",
          "example" : "Sharepoint"
        },
        "majorRefreshDate" : {
          "type" : "string",
          "format" : "date"
        },
        "isRecordManagementScheduleApproved" : {
          "type" : "boolean",
          "example" : true
        },
        "yearToRetireReplace" : {
          "type" : "string",
          "example" : "2023"
        },
        "haveEnterpriseDataLakePlan" : {
          "type" : "string",
          "example" : "Enumeration of (Now | In 1 Year | In 3 Years | No Plans | What is EDL)"
        },
        "systemProductionDate" : {
          "type" : "string",
          "format" : "date"
        },
        "sourceCodeOnDemand" : {
          "type" : "boolean",
          "example" : true
        },
        "hasMetadataGlossary" : {
          "type" : "boolean",
          "example" : true
        },
        "hardCodedIpAddress" : {
          "type" : "boolean",
          "example" : true
        },
        "systemRequirementsLocation" : {
          "type" : "string",
          "example" : "Confluence"
        },
        "pageName" : {
          "type" : "string",
          "example" : "SystemMaintainerBasicInfo"
        },
        "systemRequirementsOnDemand" : {
          "type" : "boolean",
          "example" : true
        },
        "businessArtifactsOnDemand" : {
          "type" : "boolean",
          "example" : true
        },
        "businessArtifactsLocation" : {
          "type" : "string",
          "example" : "CMS Enterprise Confluence"
        },
        "nextMajorRefreshDate" : {
          "type" : "string",
          "format" : "date"
        },
        "testScriptsOnDemand" : {
          "type" : "boolean",
          "example" : true
        },
        "frontendAccessType" : {
          "type" : "string",
          "example" : "IPv4 and IPv6"
        },
        "netAccessibility" : {
          "type" : "string",
          "example" : "Accessible to a CMS-internal network only"
        },
        "id" : {
          "type" : "string"
        },
        "identityManagementSolutionOther" : {
          "type" : "string",
          "example" : ""
        },
        "recordManagementMetadata" : {
          "type" : "string",
          "example" : ""
        },
        "testPlanOnDemand" : {
          "type" : "boolean",
          "example" : true
        },
        "quarterToRetireReplace" : {
          "type" : "string",
          "example" : "3"
        },
        "agileUsed" : {
          "type" : "boolean",
          "example" : true
        },
        "systemDesignOnDemand" : {
          "type" : "boolean",
          "example" : true
        },
        "plansToRetireReplace" : {
          "type" : "string",
          "example" : "Yes - Retire and Replace"
        },
        "ipEnabledAssetCount" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1
        },
        "devWorkDescription" : {
          "type" : "string",
          "example" : "The type of development work underway..."
        },
        "testReportsOnDemand" : {
          "type" : "boolean",
          "example" : true
        },
        "identityManagementSolution" : {
          "type" : "string",
          "example" : ""
        },
        "systemDesignLocation" : {
          "type" : "string",
          "example" : "SharePoint"
        },
        "canDisposeRecordsData" : {
          "type" : "boolean",
          "example" : true
        },
        "version" : {
          "type" : "string",
          "example" : "22"
        },
        "testScriptsLocation" : {
          "type" : "string",
          "example" : "Github"
        },
        "recordManagementFormatOther" : {
          "type" : "string",
          "example" : ""
        },
        "ip6TransitionPlan" : {
          "type" : "string",
          "example" : "Yes, transition to IPv6"
        },
        "testReportsLocation" : {
          "type" : "string",
          "example" : "In Acumen's secure server"
        },
        "storeInCentralDataCatalog" : {
          "type" : "boolean",
          "example" : true
        },
        "ip6EnabledAssetPercent" : {
          "type" : "string",
          "example" : "Between 20% and 49%"
        },
        "deploymentFrequency" : {
          "type" : "string",
          "example" : "Monthly"
        },
        "name" : {
          "type" : "string",
          "example" : "CMS Enterprise Data Analytics Repository"
        },
        "recordsManagementBucket" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "example" : "Administrative Management"
          }
        },
        "omDocumentationOnDemand" : {
          "type" : "boolean",
          "example" : true
        },
        "systemCustomization" : {
          "type" : "string",
          "example" : "Less Than 20% Customization"
        },
        "testPlanLocation" : {
          "type" : "string",
          "example" : "Sharepoint"
        },
        "recordManagementFormat" : {
          "type" : "string",
          "example" : ""
        }
      }
    },
    "PageDataExchangeStatus" : {
      "type" : "object",
      "required" : [ "direction", "exchangeId", "partnerId", "partnerStatus", "reviewerStatus", "systemId", "systemStatus" ],
      "properties" : {
        "exchangeId" : {
          "type" : "string",
          "example" : "139-6353-0"
        },
        "systemId" : {
          "type" : "string",
          "example" : "326-1091-0"
        },
        "partnerStatus" : {
          "type" : "string",
          "example" : "Requires Response"
        },
        "deleted" : {
          "type" : "boolean"
        },
        "systemStatus" : {
          "type" : "string",
          "example" : "Requires Response"
        },
        "reviewerStatus" : {
          "type" : "string",
          "example" : "Issues Found"
        },
        "partnerId" : {
          "type" : "string",
          "example" : "326-1001-0"
        },
        "direction" : {
          "type" : "string",
          "enum" : [ "sender", "receiver", "both" ]
        }
      }
    },
    "SoftwareProductsSearchItem" : {
      "type" : "object",
      "properties" : {
        "api_gateway_use" : {
          "type" : "boolean"
        },
        "local_component_refstr" : {
          "type" : "string"
        },
        "component_name" : {
          "type" : "string"
        },
        "vendor_name" : {
          "type" : "string"
        },
        "technopedia_id" : {
          "type" : "string"
        },
        "technopedia_version" : {
          "type" : "string"
        },
        "technopedia_edition" : {
          "type" : "string"
        },
        "closest_version" : {
          "type" : "boolean"
        },
        "ela_purchase" : {
          "type" : "string"
        },
        "actual_version" : {
          "type" : "string"
        },
        "provides_ai_capability" : {
          "type" : "boolean"
        },
        "refstr" : {
          "type" : "string"
        },
        "ela_vendor_id" : {
          "type" : "string"
        },
        "technopedia_category" : {
          "type" : "string"
        }
      }
    },
    "SystemComponents" : {
      "type" : "object",
      "properties" : {
        "Components" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SysComponents"
          }
        },
        "deleted" : {
          "type" : "boolean",
          "example" : false
        },
        "updated" : {
          "type" : "boolean",
          "example" : false
        }
      }
    },
    "Budget" : {
      "type" : "object",
      "required" : [ "projectId" ],
      "properties" : {
        "funding" : {
          "type" : "string",
          "example" : "Most of this funding is directly and only for this system (over 80%)",
          "description" : "Description of the allocation of this budget to the system in question"
        },
        "fundingId" : {
          "type" : "string",
          "example" : "123-45-678",
          "description" : "Cross-reference ID for relationship between budget project and application in system of record"
        },
        "deleted" : {
          "type" : "boolean",
          "description" : "Flag indicating whether this budget was deleted by the user"
        },
        "id" : {
          "type" : "string",
          "example" : "589-329-0",
          "description" : "OFM budget internal ID in system of record"
        },
        "projectId" : {
          "type" : "string",
          "example" : "000010",
          "description" : "OFM budget project ID in system of record"
        },
        "updated" : {
          "type" : "boolean",
          "description" : "Flag indicating whether this budget was added or updated by the user"
        },
        "projectTitle" : {
          "type" : "string",
          "example" : "Consolidated Information Technology Infrastructure Contract (CITIC) - Baltimore Data Center Operations",
          "description" : "Project Title in system of record"
        }
      }
    },
    "PageDataExchangeStatusAddRequest" : {
      "type" : "object",
      "required" : [ "ExchangeStatus" ],
      "properties" : {
        "ExchangeStatus" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PageDataExchangeStatus"
          }
        }
      }
    },
    "PageSystemLifecycle" : {
      "type" : "object",
      "properties" : {
        "agile_methodology_use" : {
          "type" : "string"
        },
        "source_code_on_demand" : {
          "type" : "string"
        },
        "ops_maint_on_demand" : {
          "type" : "string"
        },
        "enterprise_release" : {
          "type" : "array",
          "items" : {
            "type" : "object",
            "properties" : {
              "description" : {
                "type" : "string"
              },
              "enterprise_release_refstr" : {
                "type" : "string"
              },
              "major_release" : {
                "type" : "string"
              },
              "start_date" : {
                "type" : "string"
              }
            }
          }
        },
        "system_design_on_demand" : {
          "type" : "string"
        },
        "version" : {
          "type" : "string"
        },
        "req_on_demand" : {
          "type" : "string"
        },
        "planning_retirement_quart" : {
          "type" : "string"
        },
        "test_reports_on_demand" : {
          "type" : "string"
        },
        "test_script_on_demand" : {
          "type" : "string"
        },
        "development_work" : {
          "type" : "string"
        },
        "release_description" : {
          "type" : "string"
        },
        "dev_complete_percent" : {
          "type" : "string"
        },
        "retiredorreplace_date" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "retire_or_replace" : {
          "type" : "string"
        },
        "test_plan_on_demand" : {
          "type" : "string"
        },
        "bus_artifacts_on_demand" : {
          "type" : "string"
        }
      }
    },
    "PageSystemsList" : {
      "type" : "object",
      "required" : [ "count", "pageName" ],
      "properties" : {
        "SystemsList" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SystemsList"
          }
        },
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageName" : {
          "type" : "string",
          "example" : "SystemsList"
        }
      }
    },
    "SoftwareProducts" : {
      "type" : "object",
      "properties" : {
        "Products" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Products"
          }
        },
        "deleted" : {
          "type" : "boolean"
        },
        "updated" : {
          "type" : "boolean"
        }
      }
    },
    "Reviewer" : {
      "type" : "object",
      "properties" : {
        "fullName" : {
          "type" : "string"
        },
        "id" : {
          "type" : "string"
        },
        "userName" : {
          "type" : "string"
        },
        "type" : {
          "type" : "string",
          "enum" : [ "QA", "DA" ]
        }
      }
    },
    "SoftwareProductsSearchApplicationItem" : {
      "type" : "object",
      "properties" : {
        "machineLearningType" : {
          "type" : "string"
        },
        "aiSolnCatg" : {
          "type" : "string"
        },
        "usesMachineLearning" : {
          "type" : "string"
        },
        "usesAiTech" : {
          "type" : "string"
        },
        "apisDeveloped" : {
          "type" : "string"
        },
        "apiFHIRUseOther" : {
          "type" : "string"
        },
        "apisAccessibility" : {
          "type" : "string"
        },
        "machineLearnClasOther" : {
          "type" : "string"
        },
        "apiDescPubLocation" : {
          "type" : "string"
        },
        "machineLearnClstOther" : {
          "type" : "string"
        },
        "machineLearnAsalOther" : {
          "type" : "string"
        },
        "machineLearnRegrOther" : {
          "type" : "string"
        },
        "apiDescPublished" : {
          "type" : "string"
        },
        "systemHasApiGateway" : {
          "type" : "string"
        },
        "apiHasPortal" : {
          "type" : "string"
        },
        "apiDataArea" : {
          "type" : "string"
        },
        "apiFHIRUse" : {
          "type" : "string"
        },
        "aiSolnCatgOther" : {
          "type" : "string"
        }
      }
    },
    "Response" : {
      "type" : "object",
      "properties" : {
        "result" : {
          "type" : "string"
        },
        "message" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "DataCenter" : {
      "type" : "object",
      "properties" : {
        "zip" : {
          "type" : "string",
          "example" : "10002"
        },
        "endDate" : {
          "type" : "string",
          "format" : "date"
        },
        "address2" : {
          "type" : "string",
          "example" : "suite 100"
        },
        "city" : {
          "type" : "string",
          "example" : "New York"
        },
        "address1" : {
          "type" : "string",
          "example" : "123 main street"
        },
        "description" : {
          "type" : "string"
        },
        "addressState" : {
          "type" : "string",
          "example" : "NY"
        },
        "version" : {
          "type" : "string",
          "example" : "1"
        },
        "name" : {
          "type" : "string",
          "example" : "CMS Baltimore Data Center - EDC4"
        },
        "id" : {
          "type" : "string",
          "example" : "55-1-0"
        },
        "state" : {
          "type" : "string",
          "enum" : [ "active", "planned", "retired" ]
        },
        "startDate" : {
          "type" : "string",
          "format" : "date"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "approved", "draft" ]
        }
      }
    },
    "UpsertResponse" : {
      "type" : "object",
      "properties" : {
        "inserted" : {
          "type" : "integer",
          "format" : "int32"
        },
        "updated" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "SysComponents" : {
      "type" : "object",
      "properties" : {
        "componentRetirementQuarter" : {
          "type" : "string",
          "example" : "2"
        },
        "componentId" : {
          "type" : "string",
          "example" : "326-1111-0"
        },
        "componentAcronym" : {
          "type" : "string",
          "example" : "ACO UI"
        },
        "description" : {
          "type" : "string"
        },
        "componentRetirementYear" : {
          "type" : "string",
          "example" : "2030"
        },
        "componentName" : {
          "type" : "string",
          "example" : "Marketplace Assister Technical Support"
        }
      }
    },
    "PersonFindResponse" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "count" : {
          "type" : "integer",
          "format" : "int32"
        },
        "Users" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Person"
          }
        }
      }
    },
    "PageUrlsAddRequest" : {
      "type" : "object",
      "required" : [ "count" ],
      "properties" : {
        "systemId" : {
          "type" : "string",
          "example" : "123"
        },
        "count" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 123
        },
        "Urls" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Urls"
          }
        },
        "pageName" : {
          "type" : "string",
          "example" : "System Components"
        }
      }
    }
  }
}