// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/cmsgov/easi-app/pkg/cedar/gen/models"
)

// SystemsGET1Reader is a Reader for the SystemsGET1 structure.
type SystemsGET1Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SystemsGET1Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSystemsGET1OK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 401:
		result := NewSystemsGET1Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSystemsGET1OK creates a SystemsGET1OK with default headers values
func NewSystemsGET1OK() *SystemsGET1OK {
	return &SystemsGET1OK{}
}

/*SystemsGET1OK handles this case with default header values.

OK
*/
type SystemsGET1OK struct {
	Payload *models.SystemsGETResponse
}

func (o *SystemsGET1OK) Error() string {
	return fmt.Sprintf("[GET /systems][%d] systemsGET1OK  %+v", 200, o.Payload)
}

func (o *SystemsGET1OK) GetPayload() *models.SystemsGETResponse {
	return o.Payload
}

func (o *SystemsGET1OK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SystemsGETResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSystemsGET1Unauthorized creates a SystemsGET1Unauthorized with default headers values
func NewSystemsGET1Unauthorized() *SystemsGET1Unauthorized {
	return &SystemsGET1Unauthorized{}
}

/*SystemsGET1Unauthorized handles this case with default header values.

Access Denied
*/
type SystemsGET1Unauthorized struct {
}

func (o *SystemsGET1Unauthorized) Error() string {
	return fmt.Sprintf("[GET /systems][%d] systemsGET1Unauthorized ", 401)
}

func (o *SystemsGET1Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
