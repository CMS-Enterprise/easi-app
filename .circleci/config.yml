---
version: 2
jobs:
  pre_test:
    docker:
      - image: trussworks/circleci-docker-primary:tf12-5ee2cb35bc081dbc91da46afc3904ef0e1c111fb
    steps:
      - checkout
      - restore_cache:
          keys:
            - pre-commit-dot-cache-{{ checksum ".pre-commit-config.yaml" }}
      - restore_cache:
          keys:
            - yarn-deps-cache-{{ checksum "yarn.lock" }}
      - run:
          name: Install dependencies for pre-commit in yarn (temporary?)
          command: yarn install
      - run:
          name: Run pre-commit checks
          command: pre-commit run --all-files --show-diff-on-failure
      - run:
          name: Run Frontend Tests
          command: yarn test
      - save_cache:
          key: pre-commit-dot-cache-{{ checksum ".pre-commit-config.yaml" }}
          paths:
            - ~/.cache/pre-commit
      - save_cache:
          key: yarn-deps-cache-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

  build_tag_push:
    docker:
      - image: trussworks/circleci-docker-primary:tf12-5ee2cb35bc081dbc91da46afc3904ef0e1c111fb
        environment:
          AWS_DEFAULT_REGION: us-west-2
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build the app and push to ECR
          command: |
            ./scripts/build_docker_image

  deploy_dev:
    docker:
      - image: trussworks/circleci-docker-primary:tf12-5ee2cb35bc081dbc91da46afc3904ef0e1c111fb
        environment:
          AWS_DEFAULT_REGION: us-west-2
          APP_ENV: dev
          OKTA_CLIENT_ID: 0oa2e913coDQeG19S297
          REACT_APP_OKTA_CLIENT_ID: 0oa2e913coDQeG19S297
          REACT_APP_OKTA_DOMAIN: https://test.idp.idm.cms.gov
          REACT_APP_OKTA_SERVER_ID: aus2e96etlbFPnBHt297
          REACT_APP_OKTA_ISSUER: https://test.idp.idm.cms.gov/oauth2/aus2e96etlbFPnBHt297
          OKTA_ISSUER: https://test.idp.idm.cms.gov/oauth2/aus2e96etlbFPnBHt297
          REACT_APP_OKTA_REDIRECT_URI: https://dev.easi.cms.gov/implicit/callback
    steps:
      - checkout
      - run:
          name: Restart ECS service
          command: |
            ./scripts/restart_ecs
      - run:
          name: Build static assets and release to S3
          command: |
            ./scripts/release_static $STATIC_S3_BUCKET_DEV

  deploy_impl:
    docker:
      - image: trussworks/circleci-docker-primary:tf12-5ee2cb35bc081dbc91da46afc3904ef0e1c111fb
        environment:
          AWS_DEFAULT_REGION: us-west-2
          APP_ENV: impl
          OKTA_CLIENT_ID: 0oa2sjdaxkwy3TrW1297
          REACT_APP_OKTA_CLIENT_ID: 0oa2sjdaxkwy3TrW1297
          REACT_APP_OKTA_DOMAIN: https://impl.idp.idm.cms.gov
          REACT_APP_OKTA_SERVER_ID: aus2e96etlbFPnBHt297 # confirm
          REACT_APP_OKTA_ISSUER: https://impl.idp.idm.cms.gov/oauth2/
          OKTA_ISSUER: https://impl.idp.idm.cms.gov/oauth2/
          REACT_APP_OKTA_REDIRECT_URI: https://impl.easi.cms.gov/implicit/callback
    steps:
      - checkout
      - run:
          name: Setup custom environment variables
          command: |
            temp_role=$(aws sts assume-role \
                    --role-arn arn:aws:iam::$AWS_ACCOUNT_ID_IMPL:role/circleci \
                    --role-session-name circleci)
            echo "export AWS_ACCESS_KEY_ID=$(echo $temp_role | jq .Credentials.AccessKeyId | xargs)" >> $BASH_ENV
            echo "export AWS_SECRET_ACCESS_KEY=$(echo $temp_role | jq .Credentials.SecretAccessKey | xargs)" >> $BASH_ENV
            echo "export AWS_SESSION_TOKEN=$(echo $temp_role | jq .Credentials.SessionToken | xargs)" >> $BASH_ENV
      - run:
          name: Restart ECS service
          command: |
            ./scripts/restart_ecs
      - run:
          name: Build static assets and release to S3
          command: |
            ./scripts/release_static $STATIC_S3_BUCKET_IMPL

  test:
    docker:
      - image: trussworks/circleci-docker-primary:tf12-5ee2cb35bc081dbc91da46afc3904ef0e1c111fb
    steps:
      - checkout
      - run:
          name: Run easi app tests
          command: |
            ./scripts/build
            ./scripts/testsuite

workflows:
  version: 2
  compile:
    jobs:
      - pre_test
      - test
      - build_tag_push:
          requires:
            - pre_test
            - test
      - deploy_dev:
          requires:
            - build_tag_push
      - deploy_impl:
          requires:
            - deploy_dev
