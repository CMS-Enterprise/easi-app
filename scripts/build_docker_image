#!/usr/bin/env bash
#
# build `easi` in docker and push to ECR
#

# log in to ECR
if bash +x -o nounset -c "$(aws ecr get-login --no-include-email --region "us-west-2" --registry-ids "${AWS_ACCOUNT_ID}")" ; then
  # build & tag the docker image, then push to ECR
  APPLICATION_VERSION="${CIRCLE_SHA1:-"$(git rev-parse HEAD)"}"
  APPLICATION_DATETIME="$(date --rfc-3339='seconds' --utc)"
  APPLICATION_TS="$(date '+%s')"
  target="${AWS_ACCOUNT_ID}.dkr.ecr.us-west-2.amazonaws.com/easi-backend"
  builddir="$(git rev-parse --show-toplevel)"

  ( set -x -u
    if docker build --build-arg ARG_APPLICATION_VERSION="$APPLICATION_VERSION" --build-arg ARG_APPLICATION_DATETIME="$APPLICATION_DATETIME" --build-arg ARG_APPLICATION_TS="$APPLICATION_TS" --no-cache --tag "easi" "$builddir" ; then
        docker tag "easi:latest" "${target}:${APPLICATION_VERSION}" && docker push "${target}:${APPLICATION_VERSION}" || exit
        docker tag "easi:latest" "${target}:latest" && docker push "${target}:latest" || exit
        docker tag "easi:latest" "${target}:dev" && docker push "${target}:dev" || exit

        if [[ "$CIRCLE_BRANCH" = "master" ]]; then
          docker tag "easi:latest" "${target}:impl" && docker push "${target}:impl" || exit
        fi
    else
      exit
    fi
  )
else
  status=$?
  echo "FATAL: ECR login failed" 1>&2
  exit "$status"
fi
