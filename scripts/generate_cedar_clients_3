#!/usr/bin/env bash

# --- 1. Tool Checks ---
if ! command -v jq &> /dev/null
then
    echo "jq could not be found."
    echo "Install jq from https://stedolan.github.io/jq/download/"
    exit 1
fi

if ! command -v oapi-codegen &> /dev/null
then
    echo "oapi-codegen could not be found."
    echo "Install oapi-codegen: go install github.com/oapi-codegen/oapi-codegen/v2/cmd/oapi-codegen@latest"
    exit 2
fi

# Exit on first error
set -o errexit

# set up common paths
repoRootPath=$(git rev-parse --show-toplevel)

# --- 2. Paths and Variables ---

# Core API
coreSwaggerFile="cedar_core_3.json"
coreFolderPath="${repoRootPath}/pkg/cedar/core"
coreOutputFile="./gen/openapi_client.gen.go"

# --- 3. Core API Generation ---
echo "--- Processing Core API ---"
cd "$coreFolderPath"

# A. Create a temporary file for safe JSON transformation
coreTempFile=$(mktemp /tmp/core_oas3.XXXXXX.json)
cp "$coreSwaggerFile" "$coreTempFile"

# B. Update 'schemes' (old 2.0 structure) to 'servers' (OAS 3.0 structure) for https using jq
jq -c '.servers = [{"url": "https://{host}"}] | .servers[0].variables = {"host": {"default": "api.cedar.example.com"}}' "$coreTempFile" > "$coreSwaggerFile"
rm "$coreTempFile"

# C. Run oapi-codegen using only the core 'types' and 'client' flags.
oapi-codegen \
    -package gen \
    -generate "types,client" \
    "$coreSwaggerFile" > "$coreOutputFile"

echo "âœ… Core API client generated successfully (Basic Mode)."