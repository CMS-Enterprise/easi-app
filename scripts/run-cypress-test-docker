#!/usr/bin/env bash

set -eu -o pipefail

PROJECT_NAME=easi-app
CYPRESS_CONTAINER="${PROJECT_NAME}"_cypress_1
EASI_CONTAINER="${PROJECT_NAME}"_easi_1

SERVER_CERT="$(cat ./config/tls/devlocal-https.crt)"
SERVER_KEY="$(cat ./config/tls/devlocal-https.key)"
export SERVER_CERT
export SERVER_KEY

# Running in CircleCI
if [[ -n "${CIRCLECI+x}" ]]; then
  if (set +x -o nounset; aws ecr get-login-password --region "${AWS_DEFAULT_REGION}" | docker login --username AWS --password-stdin "${AWS_ACCOUNT_ID}".dkr.ecr."${AWS_DEFAULT_REGION}".amazonaws.com) ; then
    # copy easi_client static asset build from CircleCI workspace to the 'build' directory expected by Dockerfile.client_circleci
    cp -r /tmp/builds/build /home/circleci/project/build || exit

    docker-compose --project-name "${PROJECT_NAME}" -f docker-compose.yml -f docker-compose.circleci.yml pull db_migrate easi

    docker-compose --project-name "${PROJECT_NAME}" -f docker-compose.yml -f docker-compose.circleci.yml build --parallel easi_client cypress db_seed

    docker-compose --project-name "${PROJECT_NAME}" -f docker-compose.yml -f docker-compose.circleci.yml up -d db
    docker-compose --project-name "${PROJECT_NAME}" -f docker-compose.yml -f docker-compose.circleci.yml up --exit-code-from db_migrate db_migrate
    docker-compose --project-name "${PROJECT_NAME}" -f docker-compose.yml -f docker-compose.circleci.yml up --exit-code-from db_seed db_seed
    docker-compose --project-name "${PROJECT_NAME}" -f docker-compose.yml -f docker-compose.circleci.yml up -d easi easi_client

    EASI_EXIT_CODE=$(docker container inspect --format='{{.State.ExitCode}}' "${EASI_CONTAINER}")

    if [[ "${EASI_EXIT_CODE}" -ne 0 ]]; then
      echo "Docker container ${EASI_CONTAINER} exited unexpectedly. No tests will be run."
      docker-compose --project-name "${PROJECT_NAME}" -f docker-compose.yml -f docker-compose.circleci.yml logs --tail="all" easi
      exit 1
    fi

    docker-compose --project-name "${PROJECT_NAME}" -f docker-compose.yml -f docker-compose.circleci.yml up cypress

    docker container cp "${CYPRESS_CONTAINER}":/cypress/screenshots cypress/ || echo "No cypress screenshots copied"
    docker container cp "${CYPRESS_CONTAINER}":/cypress/videos cypress/ || echo "No cypress videos copied"
    CYPRESS_EXIT_CODE=$(docker container inspect --format='{{.State.ExitCode}}' "${CYPRESS_CONTAINER}")
    echo "done"
    exit "${CYPRESS_EXIT_CODE}"
  else
    exit 1
  fi
# Running locally
else
  # Clean up first
  docker-compose --project-name "${PROJECT_NAME}" -f docker-compose.yml -f docker-compose.cypress_local.yml down

  docker-compose --project-name "${PROJECT_NAME}" -f docker-compose.yml -f docker-compose.cypress_local.yml build --parallel

  docker-compose --project-name "${PROJECT_NAME}" -f docker-compose.yml -f docker-compose.cypress_local.yml up -d db db_migrate
  docker-compose --project-name "${PROJECT_NAME}" -f docker-compose.yml -f docker-compose.cypress_local.yml up -d db_seed
  docker-compose --project-name "${PROJECT_NAME}" -f docker-compose.yml -f docker-compose.cypress_local.yml up -d easi easi_client

  EASI_EXIT_CODE=$(docker container inspect --format='{{.State.ExitCode}}' "${EASI_CONTAINER}")

  if [[ "${EASI_EXIT_CODE}" -ne 0 ]]; then
    echo "Docker container ${EASI_CONTAINER} exited unexpectedly. No tests will be run."
    docker-compose --project-name "${PROJECT_NAME}" -f docker-compose.yml -f docker-compose.cypress_local.yml logs --tail="all" easi
    exit 1
  fi

  docker-compose --project-name "${PROJECT_NAME}" -f docker-compose.yml -f docker-compose.cypress_local.yml up cypress

  CYPRESS_EXIT_CODE=$(docker container inspect --format='{{.State.ExitCode}}' "${CYPRESS_CONTAINER}")

  # Clean up
  docker-compose --project-name "${PROJECT_NAME}" -f docker-compose.yml -f docker-compose.cypress_local.yml down

  exit "${CYPRESS_EXIT_CODE}"
fi
