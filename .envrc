#! /usr/bin/env bash

#########################
# Project Configuration #
#########################

##########################################
# DO NOT MAKE LOCAL CHANGES TO THIS FILE #
#                                        #
# Vars in this file can be overridden by #
# exporting them in .envrc.local         #
##########################################

# Helpers for .envrc
APP_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Use "ALT_JOB_CODES" so that the non-prod job codes are used locally instead of the production ones
export ALT_JOB_CODES=true

# Set environment to local to avoid deployed environment specifics (like auth)
export APP_ENV=local
export CLIENT_PROTOCOL=http
export CLIENT_DOMAIN=localhost
export CLIENT_PORT=3000
export CLIENT_HOSTNAME=$CLIENT_DOMAIN:$CLIENT_PORT
export CLIENT_ADDRESS=$CLIENT_PROTOCOL://$CLIENT_HOSTNAME
export API_PORT=8080
export REACT_APP_API_ADDRESS=$CLIENT_PROTOCOL://$CLIENT_DOMAIN:$API_PORT/api/v1
export REACT_APP_GRAPHQL_ADDRESS=$CLIENT_PROTOCOL://$CLIENT_DOMAIN:$API_PORT/api/graph/query
export REACT_APP_APP_ENV=$APP_ENV
export LOCAL_AUTH_ENABLED=true
export REACT_APP_LOCAL_AUTH_ENABLED=true

# Email variables
export EMAIL_TEMPLATE_DIR=$APP_DIR/pkg/email/templates
export GRT_EMAIL=success@simulator.amazonses.com
export IT_INVESTMENT_EMAIL=it_investment_email@cms.gov
export ACCESSIBILITY_TEAM_EMAIL=success@simulator.amazonses.com
export EASI_HELP_EMAIL=success@simulator.amazonses.com
export TRB_EMAIL=success@simulator.amazonses.com

# AWS variables
export AWS_REGION=us-west-2
export AWS_SES_SOURCE="\"EASi Local\" <no-reply-$APP_ENV@info.easi.cms.gov>"
export AWS_SES_SOURCE_ARN=ses-arn
export AWS_S3_FILE_UPLOAD_BUCKET=easi-app-file-uploads

# Setup a local lambda to generate PDFs
export LAMBDA_FUNCTION_PRINCE=handler
export LAMBDA_ENDPOINT="http://localhost:9001"

# OKTA variables
export OKTA_CLIENT_ID=0oa2e913coDQeG19S297
export OKTA_CLIENT_ID_DEV=0oa2e913coDQeG19S297
export REACT_APP_OKTA_CLIENT_ID=$OKTA_CLIENT_ID
export OKTA_DOMAIN=https://test.idp.idm.cms.gov
export REACT_APP_OKTA_DOMAIN=$OKTA_DOMAIN
export OKTA_SERVER_ID=aus2e96etlbFPnBHt297
export OKTA_SERVER_ID_DEV=aus2e96etlbFPnBHt297
export REACT_APP_OKTA_SERVER_ID=$OKTA_SERVER_ID
export OKTA_ISSUER=$OKTA_DOMAIN/oauth2/$OKTA_SERVER_ID
export REACT_APP_OKTA_ISSUER=$OKTA_ISSUER
export OKTA_REDIRECT_URI=http://localhost:3000/implicit/callback
export REACT_APP_OKTA_REDIRECT_URI=$OKTA_REDIRECT_URI

# OKTA test account
# Needed to run Cypress tests. Look in 1Password.
export OKTA_TEST_USERNAME=
export OKTA_TEST_PASSWORD=
export OKTA_TEST_SECRET=

# Launch Darkly configuration
export FLAG_SOURCE=LOCAL # LAUNCH_DARKLY, LOCAL, or FILE
export LD_SDK_KEY="check 1Password to find this value"
export REACT_APP_LD_CLIENT_ID=63231d448bd05a111f06195b # Points to our "local" environment
export LD_TIMEOUT_SECONDS=30
export FLAGDATA_FILE="./cypress/fixtures/flagdata.json" # File to load LD flag data from when FLAG_SOURCE=FILE

# Default minio credentials for local use
export MINIO_ACCESS_KEY='minioadmin'
export MINIO_SECRET_KEY='minioadmin'

# If not on Windows+WSL, run `scripts/dev hosts:check` to ensure this will resolve!
export MINIO_ADDRESS="http://host.docker.internal:9000"

# For connecting to a local postgres instance
export PGHOST=localhost
export PGPORT=5432
export PGDATABASE=postgres
export PGUSER=postgres
export PGPASS=mysecretpassword
export PGPASSWORD=mysecretpassword
export PGSSLMODE=disable
export DB_MAX_CONNECTIONS=20

# For exposing a locally running app to other machines via Tailscale
export TAILSCALE_HOSTNAME=$(hostname | awk '{gsub(/\.local$/,""); print tolower($0)}').truss.works.beta.tailscale.net
export TAILSCALE_CLIENT_ADDRESS="http://${TAILSCALE_HOSTNAME}:3000"
export TAILSCALE_REACT_APP_API_ADDRESS="http://${TAILSCALE_HOSTNAME}:8080/api/v1"
export TAILSCALE_REACT_GRAPHQL_ADDRESS="http://${TAILSCALE_HOSTNAME}:8080/api/graph/query"
export TAILSCALE_MINIO_ADDRESS="http://${TAILSCALE_HOSTNAME}:9000"

export USE_TLS=false

# Add local paths for binaries and scripts
PATH_add ./bin

export CEDAR_ENV=dev
export CEDAR_API_URL="webmethods-apigw.cedardev.cms.gov"
export CEDAR_CACHE_INTERVAL="30m"
export CEDAR_CORE_API_VERSION="2.0.0"

# Frontend Dev
export ESLINT_NO_DEV_ERRORS=true

# Backend Debug
export AIR_CONFIG=" "
export AIR_CONFIG_DEBUG="-c .airDebug.conf"
export AIR_CONFIG_DEBUG_WAIT="-c .airDebugWait.conf"

# Fix job codes when sending email locally
export ALT_JOB_CODES=true




# Load a local overrides file. Any changes you want to make for your local
# environment should live in that file.

if [ -e .envrc.local ]
then
  source_env .envrc.local
fi
