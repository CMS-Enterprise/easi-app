{
	"info": {
		"_postman_id": "e419bb52-6eb6-4e55-b8e1-13739f505412",
		"name": "EASI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32724285"
	},
	"item": [
		{
			"name": "System Intake",
			"item": [
				{
					"name": "Admin Actions (v2)",
					"item": [
						{
							"name": "Issue LCID",
							"item": [
								{
									"name": "Issue LCID, with existing LCID specified",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation IssueLCID ($input: SystemIntakeIssueLCIDInput!) {\r\n    createSystemIntakeActionIssueLCID(input:$input) {\r\n        userErrors {\r\n            message\r\n            path\r\n        }\r\n        systemIntake {\r\n            step\r\n            state\r\n            decisionState\r\n            lcid\r\n            lcidExpiresAt\r\n            lcidScope\r\n            lcidCostBaseline\r\n            decisionNextSteps\r\n            trbFollowUpRecommendation\r\n        }\r\n    }\r\n}",
												"variables": "{\r\n    \"input\": {\r\n        \"systemIntakeID\": \"{{systemIntakeID}}\",\r\n        \"notificationRecipients\": {\r\n            \"regularRecipientEmails\": [\r\n                \"{{testEmailAddress}}\"\r\n            ],\r\n            \"shouldNotifyITGovernance\": false,\r\n            \"shouldNotifyITInvestment\": false\r\n        },\r\n        \"lcid\": \"123456\",\r\n        \"expiresAt\": \"2030-07-28T20:12:31.703Z\",\r\n        \"scope\": \"scope for existing LCID\",\r\n        \"nextSteps\": \"enjoy recycling LCIDs, you're saving the environment\",\r\n        \"trbFollowUp\": \"RECOMMENDED_BUT_NOT_CRITICAL\",\r\n        \"costBaseline\": \"one milllllion dollars\",\r\n        \"additionalInfo\": \"some info for the email about the existing LCID being referenced\",\r\n        \"adminNote\": \"don't you think they should maybe ask for more than a million dollars?\"\r\n    }\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Issue LCID, generating new LCID",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation IssueLCID ($input: SystemIntakeIssueLCIDInput!) {\r\n    createSystemIntakeActionIssueLCID(input:$input) {\r\n        userErrors {\r\n            message\r\n            path\r\n        }\r\n        systemIntake {\r\n            step\r\n            state\r\n            decisionState\r\n            lcid\r\n            lcidExpiresAt\r\n            lcidScope\r\n            decisionNextSteps\r\n            trbFollowUpRecommendation\r\n            lcidCostBaseline\r\n        }\r\n    }\r\n}",
												"variables": "{\r\n    \"input\": {\r\n        \"systemIntakeID\": \"{{systemIntakeID}}\",\r\n        \"notificationRecipients\": {\r\n            \"regularRecipientEmails\": [\r\n                \"{{testEmailAddress}}\"\r\n            ],\r\n            \"shouldNotifyITGovernance\": false,\r\n            \"shouldNotifyITInvestment\": false\r\n        },\r\n        \"expiresAt\": \"2040-07-28T20:12:31.703Z\",\r\n        \"scope\": \"scope for generated LCID\",\r\n        \"nextSteps\": \"do what you want with your fancy new LCID\",\r\n        \"trbFollowUp\": \"RECOMMENDED_BUT_NOT_CRITICAL\",\r\n        \"costBaseline\": \"one billion dollars\",\r\n        \"additionalInfo\": \"some info for the email about the new LCID\",\r\n        \"adminNote\": \"a billion here, a billion there, sooner or later you're talking real money\"\r\n    }\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Progress to New Step",
							"item": [
								{
									"name": "Progress to GRT meeting, with no date specified Copy",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation CreateSystemIntakeActionProgressToNewStep($input: SystemIntakeProgressToNewStepsInput!) {\r\n    createSystemIntakeActionProgressToNewStep(input: $input) {\r\n        systemIntake {\r\n            step\r\n            grtDate\r\n        }\r\n    }\r\n}\r\n",
												"variables": "{\r\n    \"input\": {\r\n        \"systemIntakeID\": \"{{systemIntakeID}}\",\r\n        \"notificationRecipients\": {\r\n            \"regularRecipientEmails\": [\r\n                \"{{testEmailAddress}}\"\r\n            ],\r\n            \"shouldNotifyITGovernance\": false,\r\n            \"shouldNotifyITInvestment\": false\r\n        },\r\n        \"newStep\": \"GRT_MEETING\",\r\n        \"feedback\": \"this is feedback\",\r\n        \"additionalInfo\": \"add'l info\",\r\n        \"adminNote\": \"Without a date specified in this query, if the existing date is in the past, the existing date will be cleared (a date in the future will be preserved)\"\r\n    }\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Progress to GRT meeting, with date in past",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation CreateSystemIntakeActionProgressToNewStep($input: SystemIntakeProgressToNewStepsInput!) {\r\n    createSystemIntakeActionProgressToNewStep(input: $input) {\r\n        systemIntake {\r\n            step\r\n            grtDate\r\n        }\r\n    }\r\n}\r\n",
												"variables": "{\r\n    \"input\": {\r\n        \"systemIntakeID\": \"{{systemIntakeID}}\",\r\n        \"notificationRecipients\": {\r\n            \"regularRecipientEmails\": [\r\n                \"{{testEmailAddress}}\"\r\n            ],\r\n            \"shouldNotifyITGovernance\": false,\r\n            \"shouldNotifyITInvestment\": false\r\n        },\r\n        \"newStep\": \"GRT_MEETING\",\r\n        \"meetingDate\": \"2022-07-28T20:12:31.703Z\",\r\n        \"feedback\": \"\",\r\n        \"additionalInfo\": \"add'l info\"\r\n    }\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Progress to GRT meeting, with date in future",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation CreateSystemIntakeActionProgressToNewStep($input: SystemIntakeProgressToNewStepsInput!) {\r\n    createSystemIntakeActionProgressToNewStep(input: $input) {\r\n        systemIntake {\r\n            step\r\n            grtDate\r\n        }\r\n    }\r\n}\r\n",
												"variables": "{\r\n    \"input\": {\r\n        \"systemIntakeID\": \"{{systemIntakeID}}\",\r\n        \"notificationRecipients\": {\r\n            \"regularRecipientEmails\": [\r\n                \"{{testEmailAddress}}\"\r\n            ],\r\n            \"shouldNotifyITGovernance\": false,\r\n            \"shouldNotifyITInvestment\": false\r\n        },\r\n        \"newStep\": \"GRT_MEETING\",\r\n        \"meetingDate\": \"2030-07-28T20:12:31.703Z\",\r\n        \"feedback\": \"this is more feedback\",\r\n        \"additionalInfo\": \"add'l info\"\r\n    }\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Progress to GRB meeting, with date in future Copy",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation CreateSystemIntakeActionProgressToNewStep($input: SystemIntakeProgressToNewStepsInput!) {\r\n    createSystemIntakeActionProgressToNewStep(input: $input) {\r\n        systemIntake {\r\n            step\r\n            grbDate\r\n        }\r\n    }\r\n}\r\n",
												"variables": "{\r\n    \"input\": {\r\n        \"systemIntakeID\": \"{{systemIntakeID}}\",\r\n        \"notificationRecipients\": {\r\n            \"regularRecipientEmails\": [\r\n                \"{{testEmailAddress}}\"\r\n            ],\r\n            \"shouldNotifyITGovernance\": false,\r\n            \"shouldNotifyITInvestment\": false\r\n        },\r\n        \"newStep\": \"GRB_MEETING\",\r\n        \"meetingDate\": \"2029-07-28T20:12:31.703Z\",\r\n        \"feedback\": \"this is more feedback\",\r\n        \"additionalInfo\": \"add'l info\"\r\n    }\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Progress to Draft Biz Case",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation CreateSystemIntakeActionProgressToNewStep($input: SystemIntakeProgressToNewStepsInput!) {\r\n    createSystemIntakeActionProgressToNewStep(input: $input) {\r\n        systemIntake {\r\n            step\r\n        }\r\n    }\r\n}\r\n",
												"variables": "{\r\n    \"input\": {\r\n        \"systemIntakeID\": \"{{systemIntakeID}}\",\r\n        \"notificationRecipients\": {\r\n            \"regularRecipientEmails\": [\r\n                \"{{testEmailAddress}}\"\r\n            ],\r\n            \"shouldNotifyITGovernance\": false,\r\n            \"shouldNotifyITInvestment\": false\r\n        },\r\n        \"newStep\": \"DRAFT_BUSINESS_CASE\",\r\n        \"feedback\": \"\",\r\n        \"additionalInfo\": \"add'l info\",\r\n        \"grbRecommendations\": \"\",\r\n        \"adminNote\": \"admin note\"\r\n    }\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Progress to Final Biz Case (with feedback)",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation CreateSystemIntakeActionProgressToNewStep($input: SystemIntakeProgressToNewStepsInput!) {\r\n    createSystemIntakeActionProgressToNewStep(input: $input) {\r\n        systemIntake {\r\n            step\r\n            governanceRequestFeedbacks {\r\n                id\r\n                feedback\r\n                sourceAction\r\n                targetForm\r\n                type\r\n                author {\r\n                    euaUserId\r\n                    commonName\r\n                    email\r\n                }\r\n            }\r\n            actions {\r\n                feedback\r\n                type\r\n            }\r\n            notes {\r\n                content\r\n                author {\r\n                    eua\r\n                    name\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n",
												"variables": "{\r\n    \"input\": {\r\n        \"systemIntakeID\": \"{{systemIntakeID}}\",\r\n        \"notificationRecipients\": {\r\n            \"regularRecipientEmails\": [\r\n                \"{{testEmailAddress}}\"\r\n            ],\r\n            \"shouldNotifyITGovernance\": false,\r\n            \"shouldNotifyITInvestment\": false\r\n        },\r\n        \"newStep\": \"FINAL_BUSINESS_CASE\",\r\n        \"feedback\": \"You're doing good!\",\r\n        \"additionalInfo\": \"This is a note in the email\",\r\n        \"adminNote\": \"Team - make sure this looks ready to go\",\r\n        \"grbRecommendations\": \"Make sure to ask the business owner how they plan to reverse the polarity of the neutron flow\"\r\n    }\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Request Edits",
							"item": [
								{
									"name": "Req Edits on Initial Form",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation CreateSystemIntakeActionRequestEdits($input: SystemIntakeRequestEditsInput!) {\r\n  createSystemIntakeActionRequestEdits(input: $input) {\r\n    systemIntake {\r\n      id\r\n      currentStage\r\n      step\r\n      state\r\n      requestFormState\r\n      grtMeetingState\r\n      grbMeetingState\r\n      draftBusinessCaseState\r\n      finalBusinessCaseState\r\n      fundingSources {\r\n        source\r\n        fundingNumber\r\n        __typename\r\n      }\r\n      costs {\r\n        expectedIncreaseAmount\r\n        __typename\r\n      }\r\n      annualSpending {\r\n        currentAnnualSpending\r\n        plannedYearOneSpending\r\n        __typename\r\n      }\r\n      contract {\r\n        contractor\r\n        endDate {\r\n          day\r\n          month\r\n          year\r\n          __typename\r\n        }\r\n        hasContract\r\n        startDate {\r\n          day\r\n          month\r\n          year\r\n          __typename\r\n        }\r\n      }\r\n      contractNumbers {\r\n        id\r\n        systemIntakeID\r\n        contractNumber\r\n        createdBy\r\n        createdAt\r\n        modifiedBy\r\n        modifiedAt\r\n        __typename\r\n      }\r\n      __typename\r\n    }\r\n    __typename\r\n  }\r\n}",
												"variables": "{\r\n    \"input\": {\r\n        \"systemIntakeID\": \"{{systemIntakeID}}\",\r\n        \"intakeFormStep\": \"INITIAL_REQUEST_FORM\",\r\n        \"notificationRecipients\": {\r\n            \"regularRecipientEmails\": [\r\n                \"{{testEmailAddress}}\"\r\n            ],\r\n            \"shouldNotifyITGovernance\": false,\r\n            \"shouldNotifyITInvestment\": false\r\n        },\r\n        \"emailFeedback\": \"email feedback goes here\",\r\n        \"additionalInfo\": \"additional info\",\r\n        \"adminNote\": \"my admin note\"\r\n    }\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Req Edits on Draft Business Case",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation CreateSystemIntakeActionRequestEdits($input: SystemIntakeRequestEditsInput!) {\r\n  createSystemIntakeActionRequestEdits(input: $input) {\r\n    systemIntake {\r\n      id\r\n      currentStage\r\n      step\r\n      state\r\n      requestFormState\r\n      grtMeetingState\r\n      grbMeetingState\r\n      draftBusinessCaseState\r\n      finalBusinessCaseState\r\n      fundingSources {\r\n        source\r\n        fundingNumber\r\n        __typename\r\n      }\r\n      costs {\r\n        expectedIncreaseAmount\r\n        __typename\r\n      }\r\n      annualSpending {\r\n        currentAnnualSpending\r\n        plannedYearOneSpending\r\n        __typename\r\n      }\r\n      contract {\r\n        contractor\r\n        endDate {\r\n          day\r\n          month\r\n          year\r\n          __typename\r\n        }\r\n        hasContract\r\n        startDate {\r\n          day\r\n          month\r\n          year\r\n          __typename\r\n        }\r\n        __typename\r\n      }\r\n      contractNumbers {\r\n        id\r\n        systemIntakeID\r\n        contractNumber\r\n        createdBy\r\n        createdAt\r\n        modifiedBy\r\n        modifiedAt\r\n        __typename\r\n      }\r\n      __typename\r\n    }\r\n    __typename\r\n  }\r\n}",
												"variables": "{\r\n    \"input\": {\r\n        \"systemIntakeID\": \"{{systemIntakeID}}\",\r\n        \"intakeFormStep\": \"DRAFT_BUSINESS_CASE\",\r\n        \"notificationRecipients\": {\r\n            \"regularRecipientEmails\": [\r\n                \"{{testEmailAddress}}\"\r\n            ],\r\n            \"shouldNotifyITGovernance\": false,\r\n            \"shouldNotifyITInvestment\": false\r\n        },\r\n        \"emailFeedback\": \"email feedback goes here\",\r\n        \"additionalInfo\": \"additional info\",\r\n        \"adminNote\": \"my admin note\"\r\n    }\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Req Edits on Final Business Case",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation CreateSystemIntakeActionRequestEdits($input: SystemIntakeRequestEditsInput!) {\r\n  createSystemIntakeActionRequestEdits(input: $input) {\r\n    systemIntake {\r\n      id\r\n      currentStage\r\n      step\r\n      state\r\n      requestFormState\r\n      grtMeetingState\r\n      grbMeetingState\r\n      draftBusinessCaseState\r\n      finalBusinessCaseState\r\n      fundingSources {\r\n        source\r\n        fundingNumber\r\n        __typename\r\n      }\r\n      costs {\r\n        expectedIncreaseAmount\r\n        __typename\r\n      }\r\n      annualSpending {\r\n        currentAnnualSpending\r\n        plannedYearOneSpending\r\n        __typename\r\n      }\r\n      contract {\r\n        contractor\r\n        endDate {\r\n          day\r\n          month\r\n          year\r\n          __typename\r\n        }\r\n        hasContract\r\n        startDate {\r\n          day\r\n          month\r\n          year\r\n          __typename\r\n        }\r\n        __typename\r\n      }\r\n      contractNumbers {\r\n        id\r\n        systemIntakeID\r\n        contractNumber\r\n        createdBy\r\n        createdAt\r\n        modifiedBy\r\n        modifiedAt\r\n        __typename\r\n      }\r\n      __typename\r\n    }\r\n    __typename\r\n  }\r\n}",
												"variables": "{\r\n    \"input\": {\r\n        \"systemIntakeID\": \"{{systemIntakeID}}\",\r\n        \"intakeFormStep\": \"FINAL_BUSINESS_CASE\",\r\n        \"notificationRecipients\": {\r\n            \"regularRecipientEmails\": [\r\n                \"{{testEmailAddress}}\"\r\n            ],\r\n            \"shouldNotifyITGovernance\": false,\r\n            \"shouldNotifyITInvestment\": false\r\n        },\r\n        \"emailFeedback\": \"email feedback goes here\",\r\n        \"additionalInfo\": \"additional info\",\r\n        \"adminNote\": \"my admin note\"\r\n    }\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Req Edits on Non-form Step",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation CreateSystemIntakeActionRequestEdits($input: SystemIntakeRequestEditsInput!) {\r\n  createSystemIntakeActionRequestEdits(input: $input) {\r\n    systemIntake {\r\n      id\r\n      currentStage\r\n      step\r\n      state\r\n      requestFormState\r\n      grtMeetingState\r\n      grbMeetingState\r\n      draftBusinessCaseState\r\n      finalBusinessCaseState\r\n      fundingSources {\r\n        source\r\n        fundingNumber\r\n        __typename\r\n      }\r\n      costs {\r\n        expectedIncreaseAmount\r\n        __typename\r\n      }\r\n      annualSpending {\r\n        currentAnnualSpending\r\n        plannedYearOneSpending\r\n        __typename\r\n      }\r\n      contract {\r\n        contractor\r\n        endDate {\r\n          day\r\n          month\r\n          year\r\n          __typename\r\n        }\r\n        hasContract\r\n        startDate {\r\n          day\r\n          month\r\n          year\r\n          __typename\r\n        }\r\n        __typename\r\n      }\r\n      contractNumbers {\r\n        id\r\n        systemIntakeID\r\n        contractNumber\r\n        createdBy\r\n        createdAt\r\n        modifiedBy\r\n        modifiedAt\r\n        __typename\r\n      }\r\n      __typename\r\n    }\r\n    __typename\r\n  }\r\n}",
												"variables": "{\r\n    \"input\": {\r\n        \"systemIntakeID\": \"{{systemIntakeID}}\",\r\n        \"intakeFormStep\": \"GRT_MEETING\",\r\n        \"notificationRecipients\": {\r\n            \"regularRecipientEmails\": [\r\n                \"{{testEmailAddress}}\"\r\n            ],\r\n            \"shouldNotifyITGovernance\": false,\r\n            \"shouldNotifyITInvestment\": false\r\n        },\r\n        \"emailFeedback\": \"email feedback goes here\",\r\n        \"additionalInfo\": \"additional info\",\r\n        \"adminNote\": \"my admin note\"\r\n    }\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Close Request",
							"item": [
								{
									"name": "Close Request",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation CreateSystemIntakeActionCloseRequest (\r\n    $input: SystemIntakeCloseRequestInput!\r\n    ) {\r\n    createSystemIntakeActionCloseRequest(input: $input) {\r\n        systemIntake {\r\n            id\r\n            state\r\n            step\r\n            decisionNextSteps\r\n            decisionState\r\n            updatedAt\r\n        }\r\n    }\r\n}",
												"variables": "{\r\n    \"input\": {\r\n        \"systemIntakeID\": \"{{systemIntakeID}}\",\r\n        \"notificationRecipients\": {\r\n            \"regularRecipientEmails\": [\r\n                \"{{testEmailAddress}}\"\r\n            ],\r\n            \"shouldNotifyITGovernance\": false,\r\n            \"shouldNotifyITInvestment\": false\r\n        },\r\n        \"reason\": \"email reason goes here\",\r\n        \"additionalInfo\": \"additional info\",\r\n        \"adminNote\": \"my admin note\"\r\n    }\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Reopen Request",
							"item": [
								{
									"name": "Reopen Request",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation CreateSystemIntakeActionReopenRequest (\r\n    $input: SystemIntakeReopenRequestInput!\r\n    ) {\r\n    createSystemIntakeActionReopenRequest(input: $input) {\r\n        systemIntake {\r\n            id\r\n            state\r\n            step\r\n            decisionNextSteps\r\n            decisionState\r\n            updatedAt\r\n        }\r\n    }\r\n}",
												"variables": "{\r\n    \"input\": {\r\n        \"systemIntakeID\": \"{{systemIntakeID}}\",\r\n        \"notificationRecipients\": {\r\n            \"regularRecipientEmails\": [\r\n                \"{{testEmailAddress}}\"\r\n            ],\r\n            \"shouldNotifyITGovernance\": false,\r\n            \"shouldNotifyITInvestment\": false\r\n        },\r\n        \"reason\": \"email reason goes here\",\r\n        \"additionalInfo\": \"additional info\",\r\n        \"adminNote\": \"my admin note\"\r\n    }\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Not IT Gov Request",
							"item": [
								{
									"name": "Issue Not IT Gov Decision",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation CreateSystemIntakeActionNotITGovRequest (\r\n    $input: SystemIntakeNotITGovReqInput!\r\n    ) {\r\n    createSystemIntakeActionNotITGovRequest(input: $input) {\r\n        systemIntake {\r\n            id\r\n            state\r\n            step\r\n            decisionNextSteps\r\n            decisionState\r\n            updatedAt\r\n        }\r\n    }\r\n}",
												"variables": "{\r\n    \"input\": {\r\n        \"systemIntakeID\": \"{{systemIntakeID}}\",\r\n        \"notificationRecipients\": {\r\n            \"regularRecipientEmails\": [\r\n                \"{{testEmailAddress}}\"\r\n            ],\r\n            \"shouldNotifyITGovernance\": false,\r\n            \"shouldNotifyITInvestment\": false\r\n        },\r\n        \"reason\": \"This is the reason\",\r\n        \"additionalInfo\": \"additional info\",\r\n        \"adminNote\": \"my admin note\"\r\n    }\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Confirm LCID",
							"item": [
								{
									"name": "Confirm LCID Action",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation CreateSystemIntakeActionConfirmLCID(\r\n    $input: SystemIntakeConfirmLCIDInput!\r\n) {\r\n    createSystemIntakeActionConfirmLCID(input: $input) {\r\n        userErrors {\r\n            message\r\n            path\r\n        }\r\n        systemIntake {\r\n            step\r\n            state\r\n            decisionState\r\n            lcid\r\n            lcidExpiresAt\r\n            lcidScope\r\n            lcidCostBaseline\r\n            decisionNextSteps\r\n            trbFollowUpRecommendation\r\n        }\r\n    }\r\n}",
												"variables": "{\r\n    \"input\":{\r\n        \"notificationRecipients\": {\r\n            \"regularRecipientEmails\": [\r\n                \"{{testEmailAddress}}\"\r\n            ],\r\n            \"shouldNotifyITGovernance\": false,\r\n            \"shouldNotifyITInvestment\": false\r\n        },\r\n        \"systemIntakeID\": \"{{systemIntakeID}}\",\r\n        \"expiresAt\": \"2024-04-02T15:04:05.999999999Z\",\r\n        \"scope\": \"<strong>A really great scope </strong>\",\r\n        \"nextSteps\": \"<li> look for new things to do </li>\",\r\n        \"costBaseline\": \"$20\",\r\n        \"additionalInfo\":\"<ul><li>1 Information piece</li> <li>2 Information piece</li></ul>\",\r\n        \"trbFollowUp\": \"RECOMMENDED_BUT_NOT_CRITICAL\",\r\n        \"adminNote\": \"my note here\"\r\n    }\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Update LCID",
							"item": [
								{
									"name": "Update LCID Action",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation CreateSystemIntakeActionUpdateLCID{\r\n        createSystemIntakeActionUpdateLCID(input:{\r\n            systemIntakeID: \"{{systemIntakeID}}\"\r\n            notificationRecipients: {\r\n                regularRecipientEmails: [\r\n                    \"{{testEmailAddress}}\"\r\n                ]\r\n                shouldNotifyITGovernance: false\r\n                shouldNotifyITInvestment: false\r\n            }\r\n            expiresAt: \"2024-04-02T15:04:05.999999999Z\"\r\n            scope: \"<strong>A really great scope </strong>\"\r\n            nextSteps: \"<li> look for new things to do </li><li> look for another new things to do </li>\"\r\n            costBaseline: \"$30\"\r\n            reason: \"<p> the lcid needed to be updated </p>\"\r\n            additionalInfo:\"<ul><li>1 Information piece</li> <li>2 Information piece</li><li>new info </li></ul>\"\r\n            adminNote: \"<strong>Wow! What a great LCID!</strong>\"\r\n        })\r\n{\r\n        userErrors {\r\n            message\r\n            path\r\n        }\r\n        systemIntake {\r\n            step\r\n            state\r\n            decisionState\r\n            lcid\r\n            lcidExpiresAt\r\n            lcidScope\r\n            lcidCostBaseline\r\n            decisionNextSteps\r\n            trbFollowUpRecommendation\r\n        }\r\n    }\r\n}",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Expire LCID",
							"item": [
								{
									"name": "Expire LCID",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation CreateSystemIntakeActionExpireLCID($input: SystemIntakeExpireLCIDInput!) {\r\n    createSystemIntakeActionExpireLCID(input: $input) {\r\n        userErrors {\r\n            message\r\n            path\r\n        }\r\n        systemIntake {\r\n            lcid\r\n            lcidExpiresAt\r\n            lcidStatus\r\n        }\r\n    }\r\n}",
												"variables": "{\r\n    \"input\": {\r\n        \"systemIntakeID\": \"{{systemIntakeID}}\",\r\n        \"notificationRecipients\": {\r\n            \"regularRecipientEmails\": [\r\n                \"{{testEmailAddress}}\"\r\n            ],\r\n            \"shouldNotifyITGovernance\": false,\r\n            \"shouldNotifyITInvestment\": false\r\n        },\r\n        \"reason\": \"Testing expiration LCID\",\r\n        \"nextSteps\": \"LCID expired; create a new LCID\",\r\n        \"additionalInfo\": \"im in ur intake, expiring ur lcid\",\r\n        \"adminNote\": \"look how I'm expiring this manually\"\r\n    }\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Retire LCID",
							"item": [
								{
									"name": "Retire LCID",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation RetireLCID($input: SystemIntakeRetireLCIDInput!) {\r\n    createSystemIntakeActionRetireLCID(input:$input) {\r\n        userErrors {\r\n            message\r\n            path\r\n        }\r\n        systemIntake {\r\n            lcidStatus\r\n            lcidRetiresAt\r\n        }\r\n    }\r\n}\r\n",
												"variables": "{\r\n    \"input\": {\r\n        \"notificationRecipients\": {\r\n            \"regularRecipientEmails\": [\r\n                \"{{testEmailAddress}}\"\r\n            ],\r\n            \"shouldNotifyITGovernance\": false,\r\n            \"shouldNotifyITInvestment\": false\r\n        },\r\n        \"systemIntakeID\": \"{{systemIntakeID}}\",\r\n        \"retiresAt\": \"2024-10-01T00:00:00.000Z\",\r\n        \"reason\": \"Testing retirement of LCID\",\r\n        \"additionalInfo\": \"Time to retire\",\r\n        \"adminNote\": \"Intake now retired, don't worry about it\"\r\n    }\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Change LCID Retirement Date",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation ChangeLCIDRetirementDate($input: SystemIntakeChangeLCIDRetirementDateInput!) {\r\n    createSystemIntakeActionChangeLCIDRetirementDate(input:$input) {\r\n        userErrors {\r\n            message\r\n            path\r\n        }\r\n        systemIntake {\r\n            lcidStatus\r\n            lcidRetiresAt\r\n        }\r\n    }\r\n}\r\n",
												"variables": "{\r\n    \"input\": {\r\n        \"systemIntakeID\": \"{{systemIntakeID}}\",\r\n        \"retiresAt\": \"2015-10-01T00:00:00.000Z\",\r\n        \"notificationRecipients\": {\r\n            \"regularRecipientEmails\": [\r\n                \"{{testEmailAddress}}\"\r\n            ],\r\n            \"shouldNotifyITGovernance\": false,\r\n            \"shouldNotifyITInvestment\": false\r\n        },\r\n        \"additionalInfo\": \"Here's a new retirement date\",\r\n        \"adminNote\": \"changing retirement around\"\r\n    }\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Inital Request",
					"item": [
						{
							"name": "SystemIntake Create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let responseData = pm.response.json().data.createSystemIntake",
											"",
											"systemIntakeID = responseData.id",
											"",
											"",
											"pm.collectionVariables.set(\"systemIntakeID\", systemIntakeID);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation createSystemIntake{\n  \n  createSystemIntake(input:{\n      requestType :MAJOR_CHANGES\n      requester: {\n          name: \"Mr. Fun Person\"\n      }\n    } )\n  \n  {\n    id\n    step\n    state\n    requestFormState\n\n  adminLead\n  archivedAt\n#   businessCase\n  businessNeed\n#   businessOwner\n  businessSolution\n  createdAt\n  currentStage\n  decisionNextSteps\n  eaCollaborator\n  eaCollaboratorName\n  euaUserId\n  existingFunding\n  grbDate\n  grtDate\n  id\n  lcid\n  lcidExpiresAt\n  lcidScope\n  lcidCostBaseline\n  needsEaSupport\n#   notes\n  oitSecurityCollaborator\n  oitSecurityCollaboratorName\n#   productManager\n  projectAcronym\n  rejectionReason\n  requestName\n  requestType\n#   requester\n#   status\n  submittedAt\n  trbCollaborator\n  trbCollaboratorName\n  updatedAt\n  grtReviewEmailBody\n  decidedAt\n  businessCaseId\n#   lastAdminNote\n  cedarSystemId\n#   documents\n  hasUiChanges\n    \n    \n  }\n  \n  \n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "SystemIntake Delete (archive)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{apiURL}}/system_intake/{{systemIntakeID}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"system_intake",
										"{{systemIntakeID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "CreateSystemIntakeContact (FORM1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let responseData = pm.response.json().data.createSystemIntakeContact",
											"",
											"systemIntakeContactID = responseData.systemIntakeContact.id",
											"",
											"",
											"pm.collectionVariables.set(\"systemIntakeContactID\", systemIntakeContactID);",
											"",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation CreateSystemIntakeContact($input: CreateSystemIntakeContactInput!) {\n  createSystemIntakeContact(input: $input) {\n    systemIntakeContact {\n      id\n      euaUserId\n      systemIntakeId\n      component\n      role\n      __typename\n    }\n    __typename\n  }\n}",
										"variables": "{\n  \"input\": {\n    \"euaUserId\": \"ABCD\",\n    \"component\": \"Center for Clinical Standards and Quality\",\n    \"role\": \"Requester\",\n    \"systemIntakeId\": \"{{systemIntakeID}}\"\n  }\n}"
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "UpdateSystemIntakeContact (FORM1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation UpdateSystemIntakeContact($input: UpdateSystemIntakeContactInput!) {\n  updateSystemIntakeContact(input: $input) {\n    #   \"{{$guid}}\" #use this to make a guid\n      #this gets submitted 3 times to provide all the contacts we need\n    systemIntakeContact {\n      id # NOTE, this is provided by the front end!\n      euaUserId\n      systemIntakeId\n      component\n      role\n      __typename\n    }\n    __typename\n  }\n}\n",
										"variables": "{\n  \"input\": {\n    \"id\": \"{{systemIntakeContactID}}\",\n    \"euaUserId\": \"ADMN\",\n    \"component\": \"Center for Clinical Standards and Quality\",\n    \"role\": \"Business Owner\",\n    \"systemIntakeId\": \"{{systemIntakeID}}\"\n  }\n}"
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "UpdateSystemIntakeContactDetails (FORM 1)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation UpdateSystemIntakeContactDetails($input: UpdateSystemIntakeContactDetailsInput!) {\n  updateSystemIntakeContactDetails(input: $input) {\n    systemIntake {\n      id\n      businessOwner {\n        component\n        name\n        __typename\n      }\n      governanceTeams {\n        isPresent\n        teams {\n          acronym\n          collaborator\n          key\n          label\n          name\n          __typename\n        }\n        __typename\n      }\n      isso {\n        isPresent\n        name\n        __typename\n      }\n      productManager {\n        component\n        name\n        __typename\n      }\n      requester {\n        component\n        name\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}",
										"variables": "{\n  \"input\": {\n    \"id\": \"{{systemIntakeID}}\",\n    \"requester\": {\n      \"name\": \"User ABCD\",\n      \"component\": \"Center for Clinical Standards and Quality\"\n    },\n    \"businessOwner\": {\n      \"name\": \"Caden Schmeler\",\n      \"component\": \"Center for Program Integrity\"\n    },\n    \"productManager\": {\n      \"name\": \"Zechariah Wyman\",\n      \"component\": \"Center for Consumer Information and Insurance Oversight\"\n    },\n    \"isso\": {\n      \"isPresent\": true,\n      \"name\": \"Alyce Haag\"\n    },\n    \"governanceTeams\": {\n      \"isPresent\": true,\n      \"teams\": [\n        {\n          \"name\": \"Technical Review Board\",\n          \"key\": \"technicalReviewBoard\",\n          \"collaborator\": \"Billy Bob\"\n        }\n      ]\n    }\n  }\n}\n\n"
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "UpdateSystemIntakeRequestDetails(FORM 2)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation UpdateSystemIntakeRequestDetails($input: UpdateSystemIntakeRequestDetailsInput!) {\n  updateSystemIntakeRequestDetails(input: $input) {\n    systemIntake {\n      id\n      status\n      requestName\n      businessNeed\n      businessSolution\n      needsEaSupport\n      hasUiChanges\n      __typename\n    }\n    __typename\n  }\n}",
										"variables": "{\n  \"input\": {\n    \"id\": \"{{systemIntakeID}}\",\n    \"requestName\": \"Happy Happy Fun TIme\",\n    \"businessNeed\": \"This will make sure everyone has a good day. Believe me\",\n    \"businessSolution\": \"Pizza parties every 3 hours.\",\n    \"currentStage\": \"I have done some initial research\",\n    \"needsEaSupport\": false,\n    \"hasUiChanges\": true\n  }\n}"
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "UpdateSystemIntakeContractDetails (FORM 3)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation UpdateSystemIntakeContractDetails($input: UpdateSystemIntakeContractDetailsInput!) {\n  updateSystemIntakeContractDetails(input: $input) {\n    systemIntake {\n      id\n      requestFormState\n      currentStage\n      statusRequester\n      statusAdmin\n      fundingSources {\n        source\n        fundingNumber\n        __typename\n      }\n      costs {\n        expectedIncreaseAmount\n        isExpectingIncrease\n        __typename\n      }\n      contract {\n        contractor\n        endDate {\n          day\n          month\n          year\n          __typename\n        }\n        hasContract\n        startDate {\n          day\n          month\n          year\n          __typename\n        }\n        __typename\n      }\n      contractNumbers {\n        id\n        systemIntakeID\n        contractNumber\n        createdBy\n        createdAt\n        modifiedBy\n        modifiedAt\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}",
										"variables": "{\n  \"input\": {\n    \"id\": \"{{systemIntakeID}}\",\n    \"fundingSources\": {\n      \"existingFunding\": true,\n      \"fundingSources\": [\n        {\n          \"fundingNumber\": \"656909\",\n          \"source\": \"Other\"\n        },\n        {\n          \"fundingNumber\": \"867530\",\n          \"source\": \"Recovery Audit Contractors\"\n        }\n      ]\n    },\n    \"costs\": {\n      \"expectedIncreaseAmount\": \"$10 every 3 hours\",\n      \"isExpectingIncrease\": \"YES\"\n    },\n    \"contract\": {\n      \"contractor\": \"\",\n      \"endDate\": null,\n      \"hasContract\": \"NOT_STARTED\",\n      \"startDate\": null,\n      \"numbers\": []\n    }\n  }\n}"
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "SUBMIT INTAKE (Form 4)",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation SubmitIntake($input: SubmitIntakeInput!) {\n  submitIntake(input: $input) {\n    systemIntake {\n    requestFormState\n    status\n      id\n      __typename\n            id\n#   actions\n  adminLead\n  archivedAt\n#   businessCase\n  businessNeed\n#   businessOwner\n  businessSolution\n#   contract\n#   costs\n  createdAt\n  currentStage\n  decisionNextSteps\n  eaCollaborator\n  eaCollaboratorName\n  euaUserId\n  existingFunding\n#   fundingSources\n#   governanceTeams\n  grbDate\n  grtDate\n#   grtFeedbacks\n  id\n#   isso\n  lcid\n  lcidExpiresAt\n  lcidScope\n  lcidCostBaseline\n  needsEaSupport\n#   notes\n  oitSecurityCollaborator\n  oitSecurityCollaboratorName\n#   productManager\n  projectAcronym\n  rejectionReason\n  requestName\n  requestType\n#   requester\n  status\n  submittedAt\n  trbCollaborator\n  trbCollaboratorName\n  updatedAt\n  grtReviewEmailBody\n  decidedAt\n  businessCaseId\n#   lastAdminNote\n  cedarSystemId\n#   documents\n  hasUiChanges\n    \n\n    }\n    __typename\n  }\n}",
										"variables": "{\n  \"input\": {\n    \"id\": \"{{systemIntakeID}}\"\n  }\n}"
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "BusinessCase",
					"item": [
						{
							"name": "Business Case Create",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"businessCaseID = pm.response.json().id",
											"",
											"pm.collectionVariables.set(\"businessCaseID\", businessCaseID);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "//NOTE, you actually create a new buisness case each time you click this, there is no constraint in the DB. This also creates an action\n{\n  \"status\": \"OPEN\",\n  \"systemIntakeId\": \"{{systemIntakeID}}\",\n  \"projectName\": \"\",\n  \"requester\": \"\",\n  \"requesterPhoneNumber\": \"\",\n  \"businessOwner\": \"\",\n  \"businessNeed\": \"\",\n  \"currentSolutionSummary\": \"\",\n  \"cmsBenefit\": \"\",\n  \"priorityAlignment\": \"\",\n  \"successIndicators\": \"\",\n  \"preferredTitle\": \"\",\n  \"preferredSummary\": \"\",\n  \"preferredAcquisitionApproach\": \"\",\n  \"preferredSecurityIsApproved\": null,\n  \"preferredSecurityisBeingReviewed\": \"\",\n  \"preferredHostingType\": \"\",\n  \"preferredHostingLocation\": \"\",\n  \"preferredHostingCloudServiceType\": \"\",\n  \"preferredHasUI\": \"\",\n  \"preferredPros\": \"\",\n  \"preferredCons\": \"\",\n  \"preferredCostSavings\": \"\",\n  \"alternativeATitle\": \"\",\n  \"alternativeASummary\": \"\",\n  \"alternativeAAcquisitionApproach\": \"\",\n  \"alternativeASecurityIsApproved\": null,\n  \"alternativeASecurityisBeingReviewed\": \"\",\n  \"alternativeAHostingType\": \"\",\n  \"alternativeAHostingLocation\": \"\",\n  \"alternativeAHostingCloudServiceType\": \"\",\n  \"alternativeAHasUI\": \"\",\n  \"alternativeAPros\": \"\",\n  \"alternativeACons\": \"\",\n  \"alternativeACostSavings\": \"\",\n  \"alternativeBTitle\": null,\n  \"alternativeBSummary\": null,\n  \"alternativeBAcquisitionApproach\": null,\n  \"alternativeBSecurityIsApproved\": null,\n  \"alternativeBSecurityisBeingReviewed\": null,\n  \"alternativeBHostingType\": null,\n  \"alternativeBHostingLocation\": null,\n  \"alternativeBHostingCloudServiceType\": null,\n  \"alternativeBHasUI\": null,\n  \"alternativeBPros\": null,\n  \"alternativeBCons\": null,\n  \"alternativeBCostSavings\": null,\n  \"lifecycleCostLines\": [\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Development\",\n      \"cost\": null,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Development\",\n      \"cost\": null,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Development\",\n      \"cost\": null,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Development\",\n      \"cost\": null,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Development\",\n      \"cost\": null,\n      \"year\": \"5\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Operations and Maintenance\",\n      \"cost\": null,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Operations and Maintenance\",\n      \"cost\": null,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Operations and Maintenance\",\n      \"cost\": null,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Operations and Maintenance\",\n      \"cost\": null,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Operations and Maintenance\",\n      \"cost\": null,\n      \"year\": \"5\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Help desk/call center\",\n      \"cost\": null,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Help desk/call center\",\n      \"cost\": null,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Help desk/call center\",\n      \"cost\": null,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Help desk/call center\",\n      \"cost\": null,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Help desk/call center\",\n      \"cost\": null,\n      \"year\": \"5\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Software licenses\",\n      \"cost\": null,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Software licenses\",\n      \"cost\": null,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Software licenses\",\n      \"cost\": null,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Software licenses\",\n      \"cost\": null,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Software licenses\",\n      \"cost\": null,\n      \"year\": \"5\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Planning, support, and professional services\",\n      \"cost\": null,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Planning, support, and professional services\",\n      \"cost\": null,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Planning, support, and professional services\",\n      \"cost\": null,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Planning, support, and professional services\",\n      \"cost\": null,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Planning, support, and professional services\",\n      \"cost\": null,\n      \"year\": \"5\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Infrastructure\",\n      \"cost\": null,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Infrastructure\",\n      \"cost\": null,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Infrastructure\",\n      \"cost\": null,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Infrastructure\",\n      \"cost\": null,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Infrastructure\",\n      \"cost\": null,\n      \"year\": \"5\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"OIT services, tools, and pilots\",\n      \"cost\": null,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"OIT services, tools, and pilots\",\n      \"cost\": null,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"OIT services, tools, and pilots\",\n      \"cost\": null,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"OIT services, tools, and pilots\",\n      \"cost\": null,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"OIT services, tools, and pilots\",\n      \"cost\": null,\n      \"year\": \"5\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Other\",\n      \"cost\": null,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Other\",\n      \"cost\": null,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Other\",\n      \"cost\": null,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Other\",\n      \"cost\": null,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Other\",\n      \"cost\": null,\n      \"year\": \"5\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Development\",\n      \"cost\": null,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Development\",\n      \"cost\": null,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Development\",\n      \"cost\": null,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Development\",\n      \"cost\": null,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Development\",\n      \"cost\": null,\n      \"year\": \"5\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Operations and Maintenance\",\n      \"cost\": null,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Operations and Maintenance\",\n      \"cost\": null,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Operations and Maintenance\",\n      \"cost\": null,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Operations and Maintenance\",\n      \"cost\": null,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Operations and Maintenance\",\n      \"cost\": null,\n      \"year\": \"5\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Help desk/call center\",\n      \"cost\": null,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Help desk/call center\",\n      \"cost\": null,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Help desk/call center\",\n      \"cost\": null,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Help desk/call center\",\n      \"cost\": null,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Help desk/call center\",\n      \"cost\": null,\n      \"year\": \"5\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Software licenses\",\n      \"cost\": null,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Software licenses\",\n      \"cost\": null,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Software licenses\",\n      \"cost\": null,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Software licenses\",\n      \"cost\": null,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Software licenses\",\n      \"cost\": null,\n      \"year\": \"5\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Planning, support, and professional services\",\n      \"cost\": null,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Planning, support, and professional services\",\n      \"cost\": null,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Planning, support, and professional services\",\n      \"cost\": null,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Planning, support, and professional services\",\n      \"cost\": null,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Planning, support, and professional services\",\n      \"cost\": null,\n      \"year\": \"5\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Infrastructure\",\n      \"cost\": null,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Infrastructure\",\n      \"cost\": null,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Infrastructure\",\n      \"cost\": null,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Infrastructure\",\n      \"cost\": null,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Infrastructure\",\n      \"cost\": null,\n      \"year\": \"5\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"OIT services, tools, and pilots\",\n      \"cost\": null,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"OIT services, tools, and pilots\",\n      \"cost\": null,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"OIT services, tools, and pilots\",\n      \"cost\": null,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"OIT services, tools, and pilots\",\n      \"cost\": null,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"OIT services, tools, and pilots\",\n      \"cost\": null,\n      \"year\": \"5\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Other\",\n      \"cost\": null,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Other\",\n      \"cost\": null,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Other\",\n      \"cost\": null,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Other\",\n      \"cost\": null,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Other\",\n      \"cost\": null,\n      \"year\": \"5\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiURL}}/business_case",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"business_case"
									]
								}
							},
							"response": []
						},
						{
							"name": "Business Case Update",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": \"{{businessCaseID}}\",\n  \"euaUserId\": \"{{euaUserId}}\",\n  \"status\": \"OPEN\",\n  \"systemIntakeId\": \"{{systemIntakeID}}\",\n  \"projectName\": \"Happy Happy Fun Time\",\n  \"requester\": \"User ABCD\",\n  \"requesterPhoneNumber\": \"0008675309\",\n  \"businessOwner\": \"Caden Schmeler\",\n  \"businessNeed\": \"This will make sure everyone has a good day. Believe me\",\n  \"currentSolutionSummary\": \"It is going good\",\n  \"cmsBenefit\": \"More Pizza\",\n  \"priorityAlignment\": \"Yes it does\",\n  \"successIndicators\": \"By everyone's happiness\",\n  \"preferredTitle\": \"Pizza Parties R Us\",\n  \"preferredSummary\": \"We make Pizza Parties!\",\n  \"preferredAcquisitionApproach\": \"We buy pizza\",\n  \"preferredSecurityIsApproved\": true,\n  \"preferredSecurityisBeingReviewed\": \"\",\n  \"preferredHostingType\": \"none\",\n  \"preferredHostingLocation\": \"\",\n  \"preferredHostingCloudServiceType\": \"\",\n  \"preferredHasUI\": \"NO\",\n  \"preferredPros\": \"Pizza\",\n  \"preferredCons\": \"time between eating pizza\",\n  \"preferredCostSavings\": \"Less cost because everyone wants pizza\",\n  \"alternativeATitle\": \"Spaghetti Parties\",\n  \"alternativeASummary\": \"It's spaghetti!\",\n  \"alternativeAAcquisitionApproach\": \"Buy spaghetti\",\n  \"alternativeASecurityIsApproved\": false,\n  \"alternativeASecurityisBeingReviewed\": \"NOT_SURE\",\n  \"alternativeAHostingType\": \"dataCenter\",\n  \"alternativeAHostingLocation\": \"Spaghetti Land\",\n  \"alternativeAHostingCloudServiceType\": \"\",\n  \"alternativeAHasUI\": \"NO\",\n  \"alternativeAPros\": \"Spaghetti!\",\n  \"alternativeACons\": \"No PIzza\",\n  \"alternativeACostSavings\": \"25 bucks a quarter\",\n  \"alternativeBTitle\": null,\n  \"alternativeBSummary\": null,\n  \"alternativeBAcquisitionApproach\": null,\n  \"alternativeBSecurityIsApproved\": null,\n  \"alternativeBSecurityisBeingReviewed\": null,\n  \"alternativeBHostingType\": null,\n  \"alternativeBHostingLocation\": null,\n  \"alternativeBHostingCloudServiceType\": null,\n  \"alternativeBHasUI\": null,\n  \"alternativeBPros\": null,\n  \"alternativeBCons\": null,\n  \"alternativeBCostSavings\": null,\n  \"lifecycleCostLines\": [\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Development\",\n      \"cost\": 50,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Development\",\n      \"cost\": 50,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Development\",\n      \"cost\": 50,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Development\",\n      \"cost\": 50,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Development\",\n      \"cost\": 50,\n      \"year\": \"5\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Operations and Maintenance\",\n      \"cost\": 50,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Operations and Maintenance\",\n      \"cost\": 50,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Operations and Maintenance\",\n      \"cost\": 50,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Operations and Maintenance\",\n      \"cost\": 50,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Operations and Maintenance\",\n      \"cost\": 50,\n      \"year\": \"5\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Help desk/call center\",\n      \"cost\": 50,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Help desk/call center\",\n      \"cost\": 50,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Help desk/call center\",\n      \"cost\": 50,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Help desk/call center\",\n      \"cost\": 50,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Help desk/call center\",\n      \"cost\": 50,\n      \"year\": \"5\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Software licenses\",\n      \"cost\": 50,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Software licenses\",\n      \"cost\": 50,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Software licenses\",\n      \"cost\": 50,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Software licenses\",\n      \"cost\": 50,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Software licenses\",\n      \"cost\": 50,\n      \"year\": \"5\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Planning, support, and professional services\",\n      \"cost\": 50,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Planning, support, and professional services\",\n      \"cost\": 50,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Planning, support, and professional services\",\n      \"cost\": 50,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Planning, support, and professional services\",\n      \"cost\": 50,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Planning, support, and professional services\",\n      \"cost\": 50,\n      \"year\": \"5\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Infrastructure\",\n      \"cost\": 50,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Infrastructure\",\n      \"cost\": 50,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Infrastructure\",\n      \"cost\": 50,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Infrastructure\",\n      \"cost\": 50,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Infrastructure\",\n      \"cost\": 50,\n      \"year\": \"5\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"OIT services, tools, and pilots\",\n      \"cost\": 50,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"OIT services, tools, and pilots\",\n      \"cost\": 50,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"OIT services, tools, and pilots\",\n      \"cost\": 50,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"OIT services, tools, and pilots\",\n      \"cost\": 50,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"OIT services, tools, and pilots\",\n      \"cost\": 50,\n      \"year\": \"5\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Other\",\n      \"cost\": 50,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Other\",\n      \"cost\": 50,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Other\",\n      \"cost\": 50,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Other\",\n      \"cost\": 50,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"Preferred\",\n      \"phase\": \"Other\",\n      \"cost\": 50,\n      \"year\": \"5\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Development\",\n      \"cost\": 50,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Development\",\n      \"cost\": 50,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Development\",\n      \"cost\": 25,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Development\",\n      \"cost\": 25,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Development\",\n      \"cost\": 25,\n      \"year\": \"5\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Operations and Maintenance\",\n      \"cost\": 25,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Operations and Maintenance\",\n      \"cost\": 25,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Operations and Maintenance\",\n      \"cost\": 25,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Operations and Maintenance\",\n      \"cost\": 25,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Operations and Maintenance\",\n      \"cost\": 25,\n      \"year\": \"5\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Help desk/call center\",\n      \"cost\": 50,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Help desk/call center\",\n      \"cost\": 50,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Help desk/call center\",\n      \"cost\": 50,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Help desk/call center\",\n      \"cost\": 50,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Help desk/call center\",\n      \"cost\": 50,\n      \"year\": \"5\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Software licenses\",\n      \"cost\": 50,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Software licenses\",\n      \"cost\": 50,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Software licenses\",\n      \"cost\": 50,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Software licenses\",\n      \"cost\": 50,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Software licenses\",\n      \"cost\": 50,\n      \"year\": \"5\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Planning, support, and professional services\",\n      \"cost\": 50,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Planning, support, and professional services\",\n      \"cost\": 50,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Planning, support, and professional services\",\n      \"cost\": 50,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Planning, support, and professional services\",\n      \"cost\": 50,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Planning, support, and professional services\",\n      \"cost\": 50,\n      \"year\": \"5\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Infrastructure\",\n      \"cost\": 50,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Infrastructure\",\n      \"cost\": 50,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Infrastructure\",\n      \"cost\": 50,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Infrastructure\",\n      \"cost\": 50,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Infrastructure\",\n      \"cost\": 50,\n      \"year\": \"5\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"OIT services, tools, and pilots\",\n      \"cost\": 50,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"OIT services, tools, and pilots\",\n      \"cost\": 50,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"OIT services, tools, and pilots\",\n      \"cost\": 50,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"OIT services, tools, and pilots\",\n      \"cost\": 50,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"OIT services, tools, and pilots\",\n      \"cost\": 50,\n      \"year\": \"5\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Other\",\n      \"cost\": 50,\n      \"year\": \"1\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Other\",\n      \"cost\": 50,\n      \"year\": \"2\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Other\",\n      \"cost\": 50,\n      \"year\": \"3\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Other\",\n      \"cost\": 50,\n      \"year\": \"4\"\n    },\n    {\n      \"solution\": \"A\",\n      \"phase\": \"Other\",\n      \"cost\": 50,\n      \"year\": \"5\"\n    }\n  ]\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiURL}}/business_case/{{businessCaseID}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"business_case",
										"{{businessCaseID}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Submit Draft Business Case",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"intakeId\": \"{{systemIntakeID}}\",\n  \"actionType\": \"SUBMIT_BIZ_CASE\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiURL}}/system_intake/{{systemIntakeID}}/actions",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"system_intake",
										"{{systemIntakeID}}",
										"actions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Submit Final Business Case",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"intakeId\": \"{{systemIntakeID}}\",\n  \"actionType\": \"SUBMIT_FINAL_BIZ_CASE\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiURL}}/system_intake/{{systemIntakeID}}/actions",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"system_intake",
										"{{systemIntakeID}}",
										"actions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get_Business_Case",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{apiURL}}/business_case/{{businessCaseID}}",
									"host": [
										"{{apiURL}}"
									],
									"path": [
										"business_case",
										"{{businessCaseID}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Set Intake Relations",
					"item": [
						{
							"name": "Set New System",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation SetSystemIntakeRelationNewSystem ($input: SetSystemIntakeRelationNewSystemInput!) {\r\n    setSystemIntakeRelationNewSystem(input:$input) {\r\n        userErrors {\r\n            message\r\n            path\r\n        }\r\n        systemIntake {\r\n            id\r\n            step\r\n            state\r\n            relationType\r\n            contractName\r\n            contractNumbers {\r\n                contractNumber\r\n            }\r\n            systems {\r\n                id\r\n                name\r\n                acronym\r\n            }\r\n        }\r\n    }\r\n}",
										"variables": "{\r\n    \"input\": {\r\n        \"systemIntakeID\": \"{{systemIntakeID}}\",\r\n        \"contractNumbers\": [\r\n            \"12345\",\r\n            \"67890\"\r\n        ]\r\n    }\r\n}"
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set Existing Service/Contract",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation SetSystemIntakeRelationExistingService ($input: SetSystemIntakeRelationExistingServiceInput!) {\r\n    setSystemIntakeRelationExistingService(input:$input) {\r\n        userErrors {\r\n            message\r\n            path\r\n        }\r\n        systemIntake {\r\n            id\r\n            step\r\n            state\r\n            relationType\r\n            contractName\r\n            contractNumbers {\r\n                contractNumber\r\n            }\r\n            systems {\r\n                id\r\n                name\r\n                acronym\r\n            }\r\n        }\r\n    }\r\n}",
										"variables": "{\r\n    \"input\": {\r\n        \"systemIntakeID\": \"{{systemIntakeID}}\",\r\n        \"contractName\": \"New name!\",\r\n        \"contractNumbers\": [\r\n            \"09876\",\r\n            \"54321\"\r\n        ]\r\n    }\r\n}"
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set Existing System",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation SetSystemIntakeRelationExistingSystem ($input: SetSystemIntakeRelationExistingSystemInput!) {\r\n    setSystemIntakeRelationExistingSystem(input:$input) {\r\n        userErrors {\r\n            message\r\n            path\r\n        }\r\n        systemIntake {\r\n            id\r\n            step\r\n            state\r\n            relationType\r\n            contractName\r\n            contractNumbers {\r\n                contractNumber\r\n            }\r\n            systems {\r\n                id\r\n                name\r\n                acronym\r\n            }\r\n        }\r\n    }\r\n}",
										"variables": "{\r\n    \"input\": {\r\n        \"systemIntakeID\": \"{{systemIntakeID}}\",\r\n        \"contractNumbers\": [\r\n            \"abcde\",\r\n            \"fghij\"\r\n        ],\r\n        \"cedarSystemIDs\": [\r\n            \"{11AB1A00-1234-5678-ABC1-1A001B00CC1B}\",\r\n            \"{11AB1A00-1234-5678-ABC1-1A001B00CC2C}\"\r\n        ]\r\n    }\r\n}"
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Unlink",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation UnlinkSystemIntakeRelation ($intakeID: UUID!) {\r\n    unlinkSystemIntakeRelation(intakeID: $intakeID) {\r\n        userErrors {\r\n            message\r\n            path\r\n        }\r\n        systemIntake {\r\n            id\r\n            step\r\n            state\r\n            relationType\r\n            contractName\r\n            contractNumbers {\r\n                contractNumber\r\n            }\r\n        }\r\n    }\r\n}",
										"variables": "{\r\n    \"intakeID\": \"{{systemIntakeID}}\"\r\n}"
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "SystemIntake Get",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query systemIntake {\n  systemIntake(id:\"{{systemIntakeID}}\") {\n    step\n    state\n    archivedAt\n    requestFormState\n    draftBusinessCaseState\n    grtMeetingState\n    finalBusinessCaseState\n    grbMeetingState\n    decisionState\n    itGovTaskStatuses {      \n        intakeFormStatus\n        feedbackFromInitialReviewStatus\n        decisionAndNextStepsStatus\n        bizCaseDraftStatus\n        grtMeetingStatus\n        bizCaseFinalStatus\n        grbMeetingStatus\n    }\n    id\n    actions {\n        type\n        actor {\n            name\n        }\n        step\n        feedback\n    }\n    contractName\n#   adminLead\n# #   businessCase\n#   businessNeed\n# #   businessOwner\n#   businessSolution\n# #   contract\n# #   costs\n#   createdAt\n#   currentStage\n#   decisionNextSteps\n#   eaCollaborator\n#   eaCollaboratorName\n#   euaUserId\n#   existingFunding\n# #   fundingSources\n# #   governanceTeams\n#   grbDate\n#   grtDate\n# #   grtFeedbacks\n#   id\n# #   isso\n#   lcid\n#   lcidExpiresAt\n#   lcidScope\n#   lcidCostBaseline\n#   needsEaSupport\n# #   notes\n#   oitSecurityCollaborator\n#   oitSecurityCollaboratorName\n# #   productManager\n#   projectAcronym\n#   rejectionReason\n#   requestName\n#   requestType\n# #   requester\n#   status\n#   submittedAt\n#   trbCollaborator\n#   trbCollaboratorName\n#   updatedAt\n#   grtReviewEmailBody\n#   decidedAt\n#   businessCaseId\n# #   lastAdminNote\n#   cedarSystemId\n# #   documents\n#   hasUiChanges\n    \n    \n  }\n  \n  \n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}",
							"host": [
								"{{url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "SystemIntake Get Homepage Admin Table",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query systemIntake {\n  systemIntake(id:\"{{systemIntakeID}}\") {\n    step\n    state\n    archivedAt\n    requestFormState\n    draftBusinessCaseState\n    grtMeetingState\n    finalBusinessCaseState\n    grbMeetingState\n    decisionState\n    itGovTaskStatuses {      \n        intakeFormStatus\n        feedbackFromInitialReviewStatus\n        decisionAndNextStepsStatus\n        bizCaseDraftStatus\n        grtMeetingStatus\n        bizCaseFinalStatus\n        grbMeetingStatus\n    }\n    id\n    actions {\n        type\n        actor {\n            name\n        }\n        step\n        feedback\n    }\n#   adminLead\n# #   businessCase\n#   businessNeed\n# #   businessOwner\n#   businessSolution\n# #   contract\n# #   costs\n#   createdAt\n#   currentStage\n#   decisionNextSteps\n#   eaCollaborator\n#   eaCollaboratorName\n#   euaUserId\n#   existingFunding\n# #   fundingSources\n# #   governanceTeams\n#   grbDate\n#   grtDate\n# #   grtFeedbacks\n#   id\n# #   isso\n#   lcid\n#   lcidExpiresAt\n#   lcidScope\n#   lcidCostBaseline\n#   needsEaSupport\n# #   notes\n#   oitSecurityCollaborator\n#   oitSecurityCollaboratorName\n# #   productManager\n#   projectAcronym\n#   rejectionReason\n#   requestName\n#   requestType\n# #   requester\n#   status\n#   submittedAt\n#   trbCollaborator\n#   trbCollaboratorName\n#   updatedAt\n#   grtReviewEmailBody\n#   decidedAt\n#   businessCaseId\n# #   lastAdminNote\n#   cedarSystemId\n# #   documents\n#   hasUiChanges\n    \n    \n  }\n  \n  \n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}",
							"host": [
								"{{url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "SystemIntake Get My Requests",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query systemIntake {\n    # first does nothing and should be removed later\n  requests(first: -1) {\n      edges {\n        node {\n          id\n          name\n          submittedAt\n          type\n          status\n          statusRequester\n          statusCreatedAt\n          lcid\n          nextMeetingDate\n        }\n      }\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}",
							"host": [
								"{{url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "SystemIntake Get (Workflow state/statuses)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query systemIntake {\n  systemIntake(id:\"{{systemIntakeID}}\")\n  {\n    step\n    state\n    requestFormState\n    draftBusinessCaseState\n    grtDate\n    grtMeetingState\n    finalBusinessCaseState\n    grbDate\n    grbMeetingState\n    decisionState\n    statusAdmin\n    statusRequester\n    itGovTaskStatuses {      \n        intakeFormStatus\n        feedbackFromInitialReviewStatus\n        bizCaseDraftStatus\n        grtMeetingStatus\n        bizCaseFinalStatus\n        grbMeetingStatus\n        decisionAndNextStepsStatus\n    }\n  }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}",
							"host": [
								"{{url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "SystemIntake Get (Feedback)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n  systemIntake(id:\"{{systemIntakeID}}\") {\n    requestName\n    governanceRequestFeedbacks {\n      id\n      feedback\n      sourceAction\n      targetForm\n      type\n      author {\n          euaUserId\n          commonName\n          email\n      }\n    }\n    actions {\n        feedback\n        type\n        step\n    }\n    notes {\n        content\n        author {\n            eua\n            name\n        }\n    }\n  }\n}",
								"variables": "{\r\n    \"id\": \"{{systemIntakeID}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}",
							"host": [
								"{{url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "SystemIntake Get (Feedback with LCID Change History)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n  systemIntake(id:\"{{systemIntakeID}}\") {\n    requestName\n    governanceRequestFeedbacks {\n      id\n      feedback\n      sourceAction\n      targetForm\n      type\n      author {\n          euaUserId\n          commonName\n          email\n      }\n    }\n    actions {\n        feedback\n        type\n        step\n        previousRetirementDate\n        newRetirementDate\n        lcidExpirationChange{\n            previousDate\n            newDate\n            previousScope\n            newScope\n            previousNextSteps\n            newNextSteps\n            previousCostBaseline\n            newCostBaseline\n        }\n    }\n    notes {\n        content\n        author {\n            eua\n            name\n        }\n    }\n  }\n}",
								"variables": "{\r\n    \"id\": \"{{systemIntakeID}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}",
							"host": [
								"{{url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "SystemIntake Get (WITH LCIDS)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query systemIntakesWithLcids{\n  \n  systemIntakesWithLcids()\n  \n  {\n    id\n#   actions\n  adminLead\n  archivedAt\n#   businessCase\n  businessNeed\n#   businessOwner\n  businessSolution\n#   contract\n#   costs\n  createdAt\n  currentStage\n  decisionNextSteps\n  eaCollaborator\n  eaCollaboratorName\n  euaUserId\n  existingFunding\n#   fundingSources\n#   governanceTeams\n  grbDate\n  grtDate\n#   grtFeedbacks\n  id\n#   isso\n  lcid\n  lcidExpiresAt\n  lcidScope\n  lcidCostBaseline\n  needsEaSupport\n#   notes\n  oitSecurityCollaborator\n  oitSecurityCollaboratorName\n#   productManager\n  projectAcronym\n  rejectionReason\n  requestName\n  requestType\n#   requester\n  submittedAt\n  trbCollaborator\n  trbCollaboratorName\n  updatedAt\n  grtReviewEmailBody\n  decidedAt\n  businessCaseId\n#   lastAdminNote\n  cedarSystemId\n#   documents\n  hasUiChanges\n    \n    \n  }\n  \n  \n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}",
							"host": [
								"{{url}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "SystemIntake Get (Decision)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n  systemIntake(id:\"{{systemIntakeID}}\") {\n    state\n    decisionState\n    decisionNextSteps\n    trbFollowUpRecommendation\n    lcid\n    lcidExpiresAt\n    lcidScope\n    lcidCostBaseline\n    lcidStatus\n    rejectionReason\n    lcidRetiresAt\n  }\n}",
								"variables": "{\r\n    \"id\": \"{{systemIntakeID}}\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}",
							"host": [
								"{{url}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "TRB",
			"item": [
				{
					"name": "TRB Requests",
					"item": [
						{
							"name": "TRBRequestCreate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let responseData = pm.response.json().data.createTRBRequest",
											"",
											"trbRequestID = responseData.id",
											"trbRequestFormID = responseData.form.id",
											"",
											"pm.collectionVariables.set(\"trbRequestFormID\", trbRequestFormID);",
											"",
											"",
											"pm.collectionVariables.set(\"trbRequestID\", trbRequestID);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation createTRBRequest{\n  \n  createTRBRequest(requestType: FOLLOWUP ){\n    id\n    name\n    archived\n    type\n    status\n    taskStatuses {\n        formStatus\n        feedbackStatus\n        consultPrepStatus\n    }\n    form {\n        id\n        trbRequestId\n        component\n        needsAssistanceWith\n        hasSolutionInMind\n        whereInProcess\n        hasExpectedStartEndDates\n        collabGroups\n\n        createdBy\n        createdAt\n        modifiedBy\n        modifiedAt\n    }\n    createdBy\n    createdAt\n    modifiedBy\n    modifiedAt\n    \n    \n  }\n  \n  \n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "TRBRequestUpdate",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation updateTRBRequest{\n  \n  updateTRBRequest(id: \"{{trbRequestID}}\", changes: {\n      name: \"My newly archived request\"\n      archived: true\n  } ){\n    id\n    name\n    archived\n    type\n    status\n    createdBy\n    createdAt\n    modifiedBy\n    modifiedAt\n    \n    \n  }\n  \n  \n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/graph/query",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"graph",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "TRBRequestGetByID",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query TRBRequestGetByID{\n  \n  trbRequest(id: \"{{trbRequestID}}\"){\n    id\n    name\n    archived\n    type\n    status\n    taskStatuses {\n        formStatus\n        feedbackStatus\n        consultPrepStatus\n    }\n    feedback {\n        id\n        trbRequestId\n        feedbackMessage\n        copyTrbMailbox\n        notifyEuaIds\n        action\n        createdBy\n        createdAt\n        modifiedBy\n        modifiedAt\n    }\n    createdBy\n    createdAt\n    modifiedBy\n    modifiedAt\n    # form {\n    #     status\n    #     id\n    #     trbRequestId\n    #     component\n    #     needsAssistanceWith\n    #     hasSolutionInMind\n    #     whereInProcess\n    #     hasExpectedStartEndDates\n    #     collabGroups\n\n    #     createdBy\n    #     createdAt\n    #     modifiedBy\n    #     modifiedAt\n    # }\n    attendees{\n        id\n        euaUserId\n        # userInfo {\n        #     euaUserId\n        #     commonName\n        #     email\n        # }\n        trbRequestId\n        component\n        role\n    }\n    \n    \n  }\n  \n  \n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "TRBRequestCollection",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query trbRequests{\n trbRequests(archived: false){\n id\n name\n archived\n type\n status\n relationType\n contractName\n contractNumbers {\n contractNumber\n }\n createdBy\n createdAt\n modifiedBy\n modifiedAt\n }\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/graph/query",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"graph",
										"query"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TRB Form",
					"item": [
						{
							"name": "TRBRequestFormUpdate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\n  updateTRBRequestForm(input: {\n    trbRequestId: \"{{trbRequestID}}\",\n    isSubmitted: true\n    component: \"Drive Through\",\n    needsAssistanceWith: \"Stuff\",\n    hasSolutionInMind: true,\n    proposedSolution: \"Instead of coming in the restaurant, drive through it!\",\n    whereInProcess: OTHER,\n    hasExpectedStartEndDates: true,\n    expectedStartDate: \"2022-10-13T15:15:20.358346Z\",\n    expectedEndDate: \"2022-10-13T15:15:20.358346Z\",\n    collabGroups: [SECURITY, CLOUD, OTHER]\n    collabDateSecurity: \"2022-12-13T15:15:20.358346Z\",\n    collabDateEnterpriseArchitecture: \"2022-12-13T15:15:20.358346Z\",\n    collabDateCloud: \"2022-12-13T15:15:20.358346Z\",\n    collabDatePrivacyAdvisor: \"2022-12-13T15:15:20.358346Z\",\n    collabDateGovernanceReviewBoard: \"2022-12-13T15:15:20.358346Z\"\n    collabDateOther: \"2022-12-13T15:15:20.358346Z\",\n    # collabGroupOther: \"The restaurant advisory board\",\n  }) {\n        trbRequestId\n        \n        component\n        needsAssistanceWith\n        hasSolutionInMind\n        proposedSolution\n        whereInProcess\n        hasExpectedStartEndDates\n        expectedStartDate\n        expectedEndDate\n        collabGroups\n        collabDateSecurity\n        collabDateEnterpriseArchitecture\n        collabDateCloud\n        collabDatePrivacyAdvisor\n        collabDateGovernanceReviewBoard\n        collabDateOther\n        collabGroupOther\n        status\n\n        createdBy\n        createdAt\n        modifiedBy\n        modifiedAt\n  }\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TRB Feedback",
					"item": [
						{
							"name": "TRBRequestFeedbackCreate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\n  createTRBRequestFeedback(input: {\n    trbRequestId: \"{{trbRequestID}}\",\n    feedbackMessage: \"This is TRB request is NICE!\",\n    copyTrbMailbox: true,\n    notifyEuaIds: [\"FAKE\", \"REAL\", \"LOLZ\"],\n    action: READY_FOR_CONSULT,\n  }) {\n    id\n    trbRequestId\n    feedbackMessage\n    copyTrbMailbox\n    notifyEuaIds\n    action\n    createdBy\n    createdAt\n    modifiedBy\n    modifiedAt\n  }\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "TRB Rich Text",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation CreateTrbRequestFeedback($input: CreateTRBRequestFeedbackInput!) {\n  createTRBRequestFeedback(input: $input) {\n        id\n        trbRequestId\n        feedbackMessage\n        copyTrbMailbox\n        notifyEuaIds\n        action\n        createdBy\n        createdAt\n        modifiedBy\n        modifiedAt\n  }\n}",
										"variables": "{\n  \"input\": {\n    \"copyTrbMailbox\": true,\n    \"feedbackMessage\": \"<p><strong>Notification email</strong></p><p>A <a href=\\\"asdasd\\\" target=\\\"_blank\\\">notification</a> email will be sent to the requester when you complete this action. If you would like, you may also send a copy to the TRB mailbox and/or to any additional attendees.</p><p>Choose recipients</p><ol><li><p>asd</p></li><li><p>asd</p></li><li><p>asdewg</p></li></ol><ul><li><p>Hello</p></li><li><p><em>;l;lk;kl;</em></p></li></ul><script>This is a script that will be sanitized</script>\",\n    \"notifyEuaIds\": [\n      \"USR1\"\n    ],\n    \"trbRequestId\": \"{{trbRequestID}}\",\n    \"action\": \"READY_FOR_CONSULT\"\n  }\n}"
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "TRBRequestFeedbackGetByID",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query TRBRequestGetByID{\n  \n  trbRequest(id: \"{{trbRequestID}}\"){\n    id\n    feedback {\n        id\n        trbRequestId\n        feedbackMessage\n        copyTrbMailbox\n        notifyEuaIds\n        action\n        createdBy\n        createdAt\n        modifiedBy\n        modifiedAt\n    }\n    \n  }\n  \n  \n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TRB Attendees",
					"item": [
						{
							"name": "TRBRequestAttendeesCREATE",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"let responseData = pm.response.json().data.createTRBRequestAttendee",
											"",
											"trbAttendeeID = responseData.id",
											"",
											"pm.collectionVariables.set(\"trbAttendeeID\", trbAttendeeID);",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\n  createTRBRequestAttendee(input: { euaUserId: \"ADMN\", trbRequestId: \"{{trbRequestID}}\", component: \"Awesome component\", role: PRODUCT_OWNER}) {\n    id\n    euaUserId\n    userInfo {\n        euaUserId\n        commonName\n        email\n    }\n    \n    trbRequestId\n    component\n    role\n    createdBy\n    createdAt\n    modifiedBy\n    modifiedAt\n  }\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/graph/query",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"graph",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "TRBRequestAttendeesUPDATE",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\n  updateTRBRequestAttendee(input: { \n      id: \"{{trbAttendeeID}}\"\n      , component: \"Services\", role: PRIVACY_ADVISOR}) {\n    id\n    euaUserId\n    trbRequestId\n    component\n    role\n    createdBy\n    createdAt\n    modifiedBy\n    modifiedAt\n  }\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/graph/query",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"graph",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "TRBRequestAttendeesDelete",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\n  deleteTRBRequestAttendee(id:\"{{trbAttendeeID}}\") {\n    id\n    euaUserId\n    trbRequestId\n    component\n    role\n    createdBy\n    createdAt\n    modifiedBy\n    modifiedAt\n  }\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "http://localhost:8080/api/graph/query",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"api",
										"graph",
										"query"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TRB Advice Letter and Recommendations",
					"item": [
						{
							"name": "Get Recommendations for Advice Letter",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query {\r\n    trbRequest(id: \"{{trbRequestID}}\") {\r\n        id\r\n        name\r\n        adviceLetter {\r\n            id\r\n            recommendations {\r\n                id\r\n                title\r\n                recommendation\r\n                links\r\n            }\r\n        }\r\n    }\r\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create Recommendation",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation CreateRecommendation($input: CreateTRBAdviceLetterRecommendationInput!) {\r\n    createTRBAdviceLetterRecommendation(input: $input) {\r\n        id\r\n        title\r\n        recommendation\r\n    }\r\n}",
										"variables": "{\r\n    \"input\": {\r\n        \"trbRequestId\": \"{{trbRequestID}}\",\r\n        \"title\": \"manuallyCreatedRec1\",\r\n        \"recommendation\": \"testing 1\",\r\n        \"links\": []\r\n    }\r\n}"
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Recommendation Order",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation UpdateRecommendationOrder($input: UpdateTRBAdviceLetterRecommendationOrderInput!) {\r\n    updateTRBAdviceLetterRecommendationOrder(input: $input) {\r\n        id\r\n        title\r\n        recommendation\r\n    }\r\n}",
										"variables": "{\r\n    \"input\": {\r\n        \"trbRequestId\": \"{{trbRequestID}}\",\r\n        \"newOrder\": [\r\n            \"0a277d1c-0c64-4a5b-9d22-2d8c01e98fa6\",\r\n            \"898065c3-0ade-4309-bb9d-21ee9911acff\",\r\n            \"52de3093-86c0-4076-9410-6333345a8bbf\"\r\n        ]\r\n    }\r\n}"
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete Recommendation",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation {\r\n    deleteTRBAdviceLetterRecommendation(id:\"db4f0bb0-1352-4428-92b1-eeab8131d379\") {\r\n        id\r\n        trbRequestId\r\n        title\r\n        recommendation\r\n    }\r\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "TRB Admin Notes",
					"item": [
						{
							"name": "Create Admin Notes w/ specific categories",
							"item": [
								{
									"name": "Create TRB Admin Note - General Request",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation CreateTRBNoteInGeneralRequestCategory($input:CreateTRBAdminNoteGeneralRequestInput!) {\r\n    createTRBAdminNoteGeneralRequest(input: $input) {\r\n        id\r\n    }\r\n}",
												"variables": "{\r\n    \"input\": {\r\n        \"trbRequestId\": \"{{trbRequestID}}\",\r\n        \"noteText\": \"test note - general request\"\r\n    }\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create TRB Admin Note - Initial Request Form",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation CreateTRBNoteInInitialRequestFormsCategory($input:CreateTRBAdminNoteInitialRequestFormInput!) {\r\n    createTRBAdminNoteInitialRequestForm(input: $input) {\r\n        id\r\n    }\r\n}",
												"variables": "{\r\n    \"input\": {\r\n        \"trbRequestId\": \"{{trbRequestID}}\",\r\n        \"noteText\": \"test note - initial request form\",\r\n        \"appliesToBasicRequestDetails\": true,\r\n        \"appliesToSubjectAreas\": false,\r\n        \"appliesToAttendees\": true\r\n    }\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create TRB Admin Note - Supporting Documents",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "# Note - documentIDs in input need to be manually set, based on other queries/reading the database\r\nmutation CreateTRBNoteInSupportingDocumentsCategory($input:CreateTRBAdminNoteSupportingDocumentsInput!) {\r\n    createTRBAdminNoteSupportingDocuments(input: $input) {\r\n        id\r\n    }\r\n}",
												"variables": "{\r\n    \"input\": {\r\n        \"trbRequestId\": \"{{trbRequestID}}\",\r\n        \"noteText\": \"test note - supporting documents\",\r\n        \"documentIDs\": [\r\n            \"501cd8f0-4784-4cac-9772-cf01aef4f1d9\",\r\n            \"0949bd6e-ed6f-48ee-853f-487e0808de0a\"\r\n        ]\r\n    }\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create TRB Admin Note - Consult Session",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation CreateTRBNoteInConsultSessionCategory($input:CreateTRBAdminNoteConsultSessionInput!) {\r\n    createTRBAdminNoteConsultSession(input: $input) {\r\n        id\r\n    }\r\n}",
												"variables": "{\r\n    \"input\": {\r\n        \"trbRequestId\": \"{{trbRequestID}}\",\r\n        \"noteText\": \"test note - consult session\"\r\n    }\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create TRB Admin Note - Advice Letter",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "# Note - recommendationIDs in input need to be manually set, based on other queries/reading the database\r\nmutation CreateTRBNoteInAdviceLetterCategory($input:CreateTRBAdminNoteAdviceLetterInput!) {\r\n    createTRBAdminNoteAdviceLetter(input: $input) {\r\n        id\r\n    }\r\n}",
												"variables": "{\r\n    \"input\": {\r\n        \"trbRequestId\": \"{{trbRequestID}}\",\r\n        \"noteText\": \"test note - advice letter\",\r\n        \"appliesToMeetingSummary\": true,\r\n        \"appliesToNextSteps\": false,\r\n        \"recommendationIDs\": [\r\n            \"b620fe80-cce1-44a4-be05-35dd0585627d\",\r\n            \"51d6691b-f98c-4bee-9207-27832cd4986e\"\r\n        ]\r\n    }\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Get Admin Notes, with category-specific fields",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query {\r\n    trbRequest(id:\"{{trbRequestID}}\") {\r\n        adminNotes {\r\n            id\r\n            category\r\n            noteText\r\n            categorySpecificData {\r\n                ... on TRBAdminNoteGeneralRequestCategoryData {\r\n                    placeholderField\r\n                }\r\n                ... on TRBAdminNoteInitialRequestFormCategoryData {\r\n                    appliesToBasicRequestDetails\r\n                    appliesToSubjectAreas\r\n                    appliesToAttendees\r\n                }\r\n                ... on TRBAdminNoteSupportingDocumentsCategoryData {\r\n                    documents {\r\n                        id\r\n                        fileName\r\n                        deletedAt\r\n                    }\r\n                }\r\n                ... on TRBAdminNoteConsultSessionCategoryData {\r\n                    placeholderField\r\n                }\r\n                ... on TRBAdminNoteAdviceLetterCategoryData {\r\n                    appliesToMeetingSummary\r\n                    appliesToNextSteps\r\n                    recommendations {\r\n                        id\r\n                        title\r\n                        deletedAt\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}",
										"variables": ""
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Set TRB Relations",
					"item": [
						{
							"name": "Set New System",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation SetTRBRequestRelationNewSystem ($input: SetTRBRequestRelationNewSystemInput!) {\n    setTRBRequestRelationNewSystem(input:$input) {\n        id\n        relationType\n        contractName\n        contractNumbers {\n            contractNumber\n        }\n        systems {\n            id\n            name\n        }\n    }\n}",
										"variables": "{\n    \"input\": {\n        \"trbRequestID\": \"{{trbRequestID}}\",\n        \"contractNumbers\": [\"123\", \"456\"]\n    }\n}"
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set Existing Service/Contract",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation SetTRBRequestRelationExistingService ($input: SetTRBRequestRelationExistingServiceInput!) {\n    setTRBRequestRelationExistingService(input:$input) {\n        id\n        contractName\n        relationType\n        contractNumbers {\n            contractNumber\n        }\n        systems {\n            id\n            name\n        }\n    }\n}",
										"variables": "{\n    \"input\": {\n        \"trbRequestID\": \"{{trbRequestID}}\",\n        \"contractName\": \"New name!\",\n        \"contractNumbers\": [\n            \"123\",\n            \"456\",\n            \"789\"\n        ]\n    }\n}"
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set Existing System",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation SetTRBRequestRelationExistingSystem ($input: SetTRBRequestRelationExistingSystemInput!) {\n    setTRBRequestRelationExistingSystem(input:$input) {\n        id\n        contractName\n        relationType\n        contractNumbers {\n            contractNumber\n        }\n        systems {\n            id\n            name\n        }\n    }\n}",
										"variables": "{\n    \"input\": {\n        \"trbRequestID\": \"{{trbRequestID}}\",\n        \"contractNumbers\": [\"123\"],\n        \"cedarSystemIDs\": [\n            \"{11AB1A00-1234-5678-ABC1-1A001B00CC0A}\",\n            \"{11AB1A00-1234-5678-ABC1-1A001B00CC2C}\"\n        ]\n    }\n}"
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Unlink",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation UnlinkTRBRequestRelation($trbRequestID: UUID!) {\n    unlinkTRBRequestRelation(trbRequestID: $trbRequestID) {\n        id\n        name\n        contractName\n        relationType\n        contractNumbers {\n            contractNumber\n        }\n        systems {\n            id\n            name\n        }\n    }\n}",
										"variables": "{\n    \"trbRequestID\": \"{{trbRequestID}}\"\n}"
									}
								},
								"url": {
									"raw": "{{url}}",
									"host": [
										"{{url}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "CEDAR",
			"item": [
				{
					"name": "Core",
					"item": [
						{
							"name": "Direct Requests",
							"item": [
								{
									"name": "Get Systems",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{CedarApiUrl}}/gateway/CEDAR%20Core%20API/2.0.0/system/summary?includeInSurvey=true&state=active",
											"host": [
												"{{CedarApiUrl}}"
											],
											"path": [
												"gateway",
												"CEDAR%20Core%20API",
												"2.0.0",
												"system",
												"summary"
											],
											"query": [
												{
													"key": "includeInSurvey",
													"value": "true"
												},
												{
													"key": "state",
													"value": "active"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get My Systems",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{CedarApiUrl}}/gateway/CEDAR%20Core%20API/2.0.0/system/summary?includeInSurvey=true&state=active&userName={{EUAID}}",
											"host": [
												"{{CedarApiUrl}}"
											],
											"path": [
												"gateway",
												"CEDAR%20Core%20API",
												"2.0.0",
												"system",
												"summary"
											],
											"query": [
												{
													"key": "includeInSurvey",
													"value": "true"
												},
												{
													"key": "state",
													"value": "active"
												},
												{
													"key": "userName",
													"value": "{{EUAID}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get ATO By System ID (Authority To Operate)",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{CedarApiUrl}}/gateway/CEDAR%20Core%20API/2.0.0/authorityToOperate?systemId={{CedarSystemId}}",
											"host": [
												"{{CedarApiUrl}}"
											],
											"path": [
												"gateway",
												"CEDAR%20Core%20API",
												"2.0.0",
												"authorityToOperate"
											],
											"query": [
												{
													"key": "systemId",
													"value": "{{CedarSystemId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Budget By System ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{CedarApiUrl}}/gateway/CEDAR%20Core%20API/2.0.0/budget?systemId={{CedarSystemId}}",
											"host": [
												"{{CedarApiUrl}}"
											],
											"path": [
												"gateway",
												"CEDAR%20Core%20API",
												"2.0.0",
												"budget"
											],
											"query": [
												{
													"key": "systemId",
													"value": "{{CedarSystemId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Budget System Cost By System ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{CedarApiUrl}}/gateway/CEDAR%20Core%20API/2.0.0/budgetSystemCost?systemId={{CedarSystemId}}",
											"host": [
												"{{CedarApiUrl}}"
											],
											"path": [
												"gateway",
												"CEDAR%20Core%20API",
												"2.0.0",
												"budgetSystemCost"
											],
											"query": [
												{
													"key": "systemId",
													"value": "{{CedarSystemId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Contract By System ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{CedarApiUrl}}/gateway/CEDAR%20Core%20API/2.0.0/contract?systemId={{CedarSystemId}}",
											"host": [
												"{{CedarApiUrl}}"
											],
											"path": [
												"gateway",
												"CEDAR%20Core%20API",
												"2.0.0",
												"contract"
											],
											"query": [
												{
													"key": "systemId",
													"value": "{{CedarSystemId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Deployment By System ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{CedarApiUrl}}/gateway/CEDAR%20Core%20API/2.0.0/deployment?systemId={{CedarSystemId}}",
											"host": [
												"{{CedarApiUrl}}"
											],
											"path": [
												"gateway",
												"CEDAR%20Core%20API",
												"2.0.0",
												"deployment"
											],
											"query": [
												{
													"key": "systemId",
													"value": "{{CedarSystemId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Exchange By System ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{CedarApiUrl}}/gateway/CEDAR%20Core%20API/2.0.0/exchange?systemId={{CedarSystemId}}&direction=both",
											"host": [
												"{{CedarApiUrl}}"
											],
											"path": [
												"gateway",
												"CEDAR%20Core%20API",
												"2.0.0",
												"exchange"
											],
											"query": [
												{
													"key": "systemId",
													"value": "{{CedarSystemId}}"
												},
												{
													"key": "direction",
													"value": "both"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Roles By System ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{CedarApiUrl}}/gateway/CEDAR%20Core%20API/2.0.0/role?objectId={{CedarSystemId}}&application=alfabet",
											"host": [
												"{{CedarApiUrl}}"
											],
											"path": [
												"gateway",
												"CEDAR%20Core%20API",
												"2.0.0",
												"role"
											],
											"query": [
												{
													"key": "objectId",
													"value": "{{CedarSystemId}}"
												},
												{
													"key": "application",
													"value": "alfabet"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Software Products By System ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{CedarApiUrl}}/gateway/CEDAR%20Core%20API/2.0.0/softwareProducts?id={{CedarSystemId}}",
											"host": [
												"{{CedarApiUrl}}"
											],
											"path": [
												"gateway",
												"CEDAR%20Core%20API",
												"2.0.0",
												"softwareProducts"
											],
											"query": [
												{
													"key": "id",
													"value": "{{CedarSystemId}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Threats By ATO IDs",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{CedarApiUrl}}/gateway/CEDAR%20Core%20API/2.0.0/threat?ids={66F07935-7A48-4a83-AAC9-3D05DAE3F318}",
											"host": [
												"{{CedarApiUrl}}"
											],
											"path": [
												"gateway",
												"CEDAR%20Core%20API",
												"2.0.0",
												"threat"
											],
											"query": [
												{
													"key": "ids",
													"value": "{66F07935-7A48-4a83-AAC9-3D05DAE3F318}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Get URL By System ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{CedarApiUrl}}/gateway/CEDAR%20Core%20API/2.0.0/url/{{CedarSystemId}}",
											"host": [
												"{{CedarApiUrl}}"
											],
											"path": [
												"gateway",
												"CEDAR%20Core%20API",
												"2.0.0",
												"url",
												"{{CedarSystemId}}"
											]
										}
									},
									"response": []
								}
							],
							"description": "These requests bypass the EASi GraphQL API and make calls directly to CEDAR.",
							"auth": {
								"type": "apikey",
								"apikey": [
									{
										"key": "key",
										"value": "x-Gateway-APIKey",
										"type": "string"
									},
									{
										"key": "value",
										"value": "{{CedarApiKey}}",
										"type": "string"
									}
								]
							},
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"packages": {},
										"exec": [
											""
										]
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"packages": {},
										"exec": [
											""
										]
									}
								}
							]
						},
						{
							"name": "Roles",
							"item": [
								{
									"name": "RolesGet",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query Roles{\n  roleTypes {\n    id\n    application\n    name\n    description\n  }\n}",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "EASiCedarSystemRolesGet",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query($cedarSystemId: String!) {\n  cedarSystemDetails(cedarSystemId: $cedarSystemId) {\n    cedarSystem {\n      name\n    }\n    roles {\n      roleID\n      assigneeUsername\n      roleTypeID\n      roleTypeName\n    }\n  }\n}",
												"variables": "{\r\n    \"cedarSystemId\": \"{{CedarSystemId}}\"\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "EASiCedarSystemSetRoles",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "mutation {\n  setRolesForUserOnSystem(input:{\n    cedarSystemID:\"408-4104-0\"\n    euaUserId:\"ADMN\"\n    desiredRoleTypeIDs:[\n       \"238-2-0\",\"238-29-0\"\n    ]\n  })\n}",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "System Summary",
							"item": [
								{
									"name": "Get Systems",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query {\n  cedarSystems{\n    id\n    name\n    description\n    acronym\n    status\n    businessOwnerOrg\n    businessOwnerOrgComp\n    systemMaintainerOrg\n    systemMaintainerOrgComp\n  }\n}",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get My Systems",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query {\n  myCedarSystems{\n    id\n    name\n    description\n    acronym\n    status\n    businessOwnerOrg\n    businessOwnerOrgComp\n    systemMaintainerOrg\n    systemMaintainerOrgComp\n  }\n}",
												"variables": ""
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get System",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query($systemID: String!) {\n  cedarSystem(cedarSystemId: $systemID){\n    id\n    name\n    description\n    acronym\n    status\n    businessOwnerOrg\n    businessOwnerOrgComp\n    systemMaintainerOrg\n    systemMaintainerOrgComp\n  }\n}",
												"variables": "{\r\n    \"systemID\": \"{9F23BC7D-4A61-4b89-97B2-BFB5597DF5D1}\"\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Sub Systems",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query ($cedarSystemID: String!) {\n    cedarSubSystems(cedarSystemId: $cedarSystemID) {\n        id\n        name\n        acronym\n        description\n    }\n}",
												"variables": "{\n    \"cedarSystemID\": \"{FE44CFAB-51CB-4650-A13C-87D3C2541DEB}\"\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Contracts",
							"item": [
								{
									"name": "Get Contracts By System",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query($systemID: String!) {\n  cedarContractsBySystem(cedarSystemId: $systemID){\n    endDate\n    startDate\n    contractName\n    contractNumber\n    description\n    isDeliveryOrg\n    systemID\n    serviceProvided\n  }\n}",
												"variables": "{\r\n    \"systemID\": \"{{CedarSystemId}}\"\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Software Products",
							"item": [
								{
									"name": "Get Software Products By System",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query($systemID: String!) {\n  cedarSoftwareProducts(cedarSystemId: $systemID){\n    apiDataArea\n    apiDescPublished\n    apiDescPubLocation\n    apiFHIRUse\n    softwareProducts {\n        apiGatewayUse\n    }\n  }\n}",
												"variables": "{\r\n    \"systemID\": \"{{CedarSystemId}}\"\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Authority To Operate",
							"item": [
								{
									"name": "Get ATOs By System",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query($systemID: String!) {\n  cedarAuthorityToOperate(cedarSystemID: $systemID) {\n    cedarId\n    uuid\n    actualDispositionDate\n    containsPersonallyIdentifiableInformation\n    countOfTotalNonPrivilegedUserPopulation\n    countOfOpenPoams\n    countOfTotalPrivilegedUserPopulation\n    dateAuthorizationMemoExpires\n    dateAuthorizationMemoSigned\n    eAuthenticationLevel\n    fips199OverallImpactRating\n    fismaSystemAcronym\n    fismaSystemName\n    isAccessedByNonOrganizationalUsers\n    isPiiLimitedToUserNameAndPass\n    isProtectedHealthInformation\n    lastActScaDate\n    lastAssessmentDate\n    lastContingencyPlanCompletionDate\n    lastPenTestDate\n    piaCompletionDate\n    primaryCyberRiskAdvisor\n    privacySubjectMatterExpert\n    recoveryPointObjective\n    recoveryTimeObjective\n    systemOfRecordsNotice\n    tlcPhase\n    xlcPhase\n  }\n}",
												"variables": "{\r\n    \"systemID\": \"{{CedarSystemId}}\"\r\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Threat",
							"item": [
								{
									"name": "Get Threats By System",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query GetThreatsBySystem($cedarSystemId: String!) {\n cedarThreat(cedarSystemId: $cedarSystemId){\n   alternativeId\n   controlFamily\n   daysOpen\n   id\n   parentId\n   type\n   weaknessRiskLevel\n }\n}",
												"variables": "{\n    \"cedarSystemId\": \"{{CedarSystemId}}\"\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Deployment",
							"item": [
								{
									"name": "Get Deployments By System",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query GetDeploymentsBySystem($cedarSystemId: String!, $deploymentType: String, $state: String, $status: String){\n    deployments(cedarSystemId: $cedarSystemId, deploymentType: $deploymentType, state: $state, status: $status) {\n        id\n        name\n        systemID\n        startDate\n        endDate\n        isHotSite\n        description\n        contractorName\n        systemVersion\n        hasProductionData\n        replicatedSystemElements\n        deploymentType\n        systemName\n        deploymentElementID\n        state\n        status\n        wanType\n        dataCenter {\n            id\n            name\n            version\n            description\n            state\n            status\n            startDate\n            endDate\n            address1\n            address2\n            city\n            addressState\n            zip\n        }\n    }\n}",
												"variables": "{\n    \"cedarSystemId\": \"{{CedarSystemId}}\",\n    \"deploymentType\": \"\",\n    \"state\": \"\",\n    \"status\": \"\"\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "System Details",
							"item": [
								{
									"name": "Get System Details",
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "graphql",
											"graphql": {
												"query": "query cedarSystemDetails($cedarSystemId: String!) {\n    cedarSystemDetails(cedarSystemId: $cedarSystemId){\n        cedarSystem {\n            id\n            name\n            description\n            acronym\n            status\n            businessOwnerOrg\n            businessOwnerOrgComp\n            businessOwnerRoles {\n                application\n                objectID\n                roleTypeID\n                assigneeType\n                assigneeUsername\n                assigneeEmail\n                assigneeOrgID\n                assigneeOrgName\n                assigneeFirstName\n                assigneeLastName\n                assigneePhone\n                assigneeDesc\n                roleTypeName\n                roleTypeDesc\n                roleID\n                objectType\n            }\n            systemMaintainerOrg\n            systemMaintainerOrgComp\n            versionId\n        }\n        systemMaintainerInformation {\n            agileUsed\n            businessArtifactsOnDemand\n            deploymentFrequency\n            devCompletionPercent\n            devWorkDescription\n            ecapParticipation\n            frontendAccessType\n            hardCodedIPAddress\n            ip6EnabledAssetPercent\n            ip6TransitionPlan\n            ipEnabledAssetCount\n            majorRefreshDate\n            netAccessibility\n            omDocumentationOnDemand\n            plansToRetireReplace\n            quarterToRetireReplace\n            recordsManagementBucket\n            sourceCodeOnDemand\n            systemCustomization\n            systemDesignOnDemand\n            systemProductionDate\n            systemRequirementsOnDemand\n            testPlanOnDemand\n            testReportsOnDemand\n            testScriptsOnDemand\n            yearToRetireReplace\n        }\n        businessOwnerInformation {\n            beneficiaryAddressPurpose\n            beneficiaryAddressPurposeOther\n            beneficiaryAddressSource\n            beneficiaryAddressSourceOther\n            costPerYear\n            isCmsOwned\n            numberOfContractorFte\n            numberOfFederalFte\n            numberOfSupportedUsersPerMonth\n            storesBankingData\n            storesBeneficiaryAddress\n        }\n        roles {\n            application\n            objectID\n            roleTypeID\n            assigneeType\n            assigneeUsername\n            assigneeEmail\n            assigneeOrgID\n            assigneeOrgName\n            assigneeFirstName\n            assigneeLastName\n            assigneePhone\n            assigneeDesc\n            roleTypeName\n            roleTypeDesc\n            roleID\n            objectType\n        }\n        deployments {\n            id\n            name\n            systemID\n            startDate\n            endDate\n            isHotSite\n            description\n            contractorName\n            systemVersion\n            hasProductionData\n            replicatedSystemElements\n            deploymentType\n            systemName\n            deploymentElementID\n            state\n            status\n            wanType\n            dataCenter {\n                id\n                name\n                version\n                description\n                state\n                status\n                startDate\n                endDate\n                address1\n                address2\n                city\n                addressState\n                zip\n            }\n        }\n        threats {\n            alternativeId\n            controlFamily\n            daysOpen\n            id\n            parentId\n            type\n            weaknessRiskLevel\n        }\n        urls {\n            id\n            address\n            isBehindWebApplicationFirewall\n            isAPIEndpoint\n            isVersionCodeRepository\n            urlHostingEnv\n        }\n    }\n}",
												"variables": "{\n    \"cedarSystemId\": \"{11AB1A00-1234-5678-ABC1-1A001B00CC0A}\"\n}"
											}
										},
										"url": {
											"raw": "{{url}}",
											"host": [
												"{{url}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "CedarPersons",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n  cedarPersonsByCommonName(commonName: \"Aaron\") {\n   commonName\n   email\n   euaUserId\n  \n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}",
							"host": [
								"{{url}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "UserAccount",
			"item": [
				{
					"name": "UserAccountGetByUsername",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\n  userAccount(username: \"EASI_SYSTEM\") {\n    id\n    username\n    commonName\n    familyName\n    givenName\n    email\n    locale\n    }\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}",
							"host": [
								"{{url}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{authHeader}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "Authorization",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "EUAID",
			"value": "USR1",
			"type": "string"
		},
		{
			"key": "testEmailAddress",
			"value": "user.one@local.fake",
			"type": "string"
		},
		{
			"key": "jobCodes",
			"value": "[\"EASI_USER\", \"EASI_D_GOVTEAM\",\"EASI_TRB_ADMIN_D\"]",
			"type": "string"
		},
		{
			"key": "authHeader",
			"value": "Local {\"EUAID\":\"{{EUAID}}\",\"jobCodes\":{{jobCodes}},\"favorLocalAuth\":true}",
			"type": "string"
		},
		{
			"key": "trbAttendeeID",
			"value": ""
		},
		{
			"key": "trbRequestID",
			"value": ""
		},
		{
			"key": "trbRequestFormID",
			"value": ""
		},
		{
			"key": "host",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "url",
			"value": "{{host}}/api/graph/query",
			"type": "string"
		},
		{
			"key": "systemIntakeID",
			"value": ""
		},
		{
			"key": "systemIntakeContactID",
			"value": ""
		},
		{
			"key": "apiURL",
			"value": "{{host}}/api/v1",
			"type": "string"
		},
		{
			"key": "businessCaseID",
			"value": ""
		},
		{
			"key": "CedarApiKey",
			"value": "",
			"type": "string"
		},
		{
			"key": "CedarApiUrl",
			"value": "",
			"type": "string"
		},
		{
			"key": "CedarSystemId",
			"value": "",
			"type": "string"
		}
	]
}