name: build_db_clean_image

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

# on:
#   schedule:
#     - cron:  '0 6 * * 6'

env:
  AWS_DEFAULT_REGION: us-west-2

jobs:
  build_db_clean_image:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # v2.3.4
      - name: Login to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9 # v1.10.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@13d241b293754004c80624b5567555c4a39ffbe3 # v1.5.10
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2 # v1.3.3
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: easi-db-clean
          IMAGE_TAG: ${{ github.sha }}
          TAG: $ECR_REGISTRY/$ECR_REPOSITORY:latest:-$IMAGE_TAG
        run: |
          builddir="$(git rev-parse --show-toplevel)"
          docker build --quiet --no-cache --tag "$ECR_REPOSITORY" . --file "Dockerfile.db_clean"
          docker tag $ECR_REPOSITORY $TAG
          docker push $TAG



      # - name: Build the db cleaner image and push to ECR
      #   env:
      #     AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      #   run: |
      #     ./scripts/build_db_image "Dockerfile.db_clean" "easi-db-clean" "latest"
      # - name: Announce failure
      #   if: ${{ failure() }}
      #   run: |
      #     ./scripts/github-action-announce-broken-branch
