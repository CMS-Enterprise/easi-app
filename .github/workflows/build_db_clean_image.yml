name: build_db_clean_image

on:
  schedule:
    - cron:  '0 6 * * 6'

env:
  AWS_DEFAULT_REGION: us-west-2
  DOCKER_BUILDKIT: 1

jobs:
  build_db_clean_image:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # v2.3.4
      - name: Login to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9 # v1.10.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@0d9a5be0dceea74e09396820e1e522ba4a110d2f # v1.5.10
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@aaf69d68aa3fb14c1d5a6be9ac61fe15b48453a2 # v1.3.3
      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: easi-db-clean
        run: |
          docker build --quiet --no-cache --tag "$ECR_REGISTRY/$ECR_REPOSITORY:latest" --file "Dockerfile.db_clean" .
          docker push "$ECR_REGISTRY/$ECR_REPOSITORY:latest"
