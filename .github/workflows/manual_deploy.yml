name: Manual Deployment

on:
  workflow_dispatch:
    inputs:
      env: 
        required: true
        default: 'dev'
        type: choice 
        options: 
        - dev 
        - impl 
        - prod 
    

env:
  EASI_APP_NODE_VERSION: "16.14.0"
  EASI_APP_GO_VERSION: "1.16.6"
  IMAGE_TAG: ${{ github.event.pull_request.head.sha || github.sha }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  DOCKER_BUILDKIT: 1


jobs:
  Build_Application_Images:
    uses: ./.github/workflows/build_application_images.yml
    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}

  Run_Tests:
    uses: ./.github/workflows/run_tests.yml
    needs: Build_Application_Images
    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
      DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_SES_SOURCE_ARN: ${{ secrets.AWS_SES_SOURCE_ARN }}
      OKTA_TEST_PASSWORD: ${{ secrets.OKTA_TEST_PASSWORD }}
      OKTA_TEST_SECRET: ${{ secrets.OKTA_TEST_SECRET }}
      OKTA_TEST_USERNAME: ${{ secrets.OKTA_TEST_USERNAME }}
      AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME_DEV }}

  deploy_dev:
    needs: Run_Tests
    if: ${{ github.event.inputs.env == 'dev' }}
    uses: ./.github/workflows/deploy_to_environment.yml
    with:
      env: dev
    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      LD_CLIENT_ID: ${{ secrets.LD_CLIENT_ID_DEV }}
      OKTA_CLIENT_ID: ${{ secrets.OKTA_CLIENT_ID_DEV }}
      OKTA_SERVER_ID: ${{ secrets.OKTA_SERVER_ID_DEV }}
      STATIC_S3_BUCKET: ${{ secrets.STATIC_S3_BUCKET_DEV }}
      AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME_DEV }}
      ECR_REGISTRY: ${{secrets.ECR_REGISTRY }}

  deploy_impl:
    needs: Run_Tests
    if: ${{ github.event.inputs.env == 'impl' }}
    uses: ./.github/workflows/deploy_to_environment.yml
    with:
      env: impl
    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      LD_CLIENT_ID: ${{ secrets.LD_CLIENT_ID_IMPL }}
      OKTA_CLIENT_ID: ${{ secrets.OKTA_CLIENT_ID_IMPL }}
      OKTA_SERVER_ID: ${{ secrets.OKTA_SERVER_ID_IMPL }}
      STATIC_S3_BUCKET: ${{ secrets.STATIC_S3_BUCKET_IMPL }}
      AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME_IMPL }}
      ECR_REGISTRY: ${{secrets.ECR_REGISTRY }}

  deploy_prod:
    needs: Run_Tests
    if: ${{ github.event.inputs.env == 'dev' }}
    uses: ./.github/workflows/deploy_to_environment.yml
    with:
      env: prod
    secrets:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      LD_CLIENT_ID: ${{ secrets.LD_CLIENT_ID_PROD }}
      OKTA_CLIENT_ID: ${{ secrets.OKTA_CLIENT_ID_PROD }}
      OKTA_SERVER_ID: ${{ secrets.OKTA_SERVER_ID_PROD }}
      STATIC_S3_BUCKET: ${{ secrets.STATIC_S3_BUCKET_PROD }}
      AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME_PROD }}
      ECR_REGISTRY: ${{secrets.ECR_REGISTRY }}