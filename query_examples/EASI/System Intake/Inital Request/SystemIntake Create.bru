meta {
  name: SystemIntake Create
  type: graphql
  seq: 1
}

post {
  url: {{url}}
  body: graphql
  auth: inherit
}

body:graphql {
  mutation createSystemIntake {
    createSystemIntake(
      input: { requestType: MAJOR_CHANGES, requester: { name: "Mr. Fun Person" } }
    ) {
      id
      step
      state
      requestFormState
      contacts {
        requester {
          id
        }
        allContacts {
          id
          isRequester
          userID
          userAccount {
            id
            commonName
            username
            email
          }
          systemIntakeId
          component
          roles
        }
      }
  
      adminLead
      archivedAt
      #   businessCase
      businessNeed
      #   businessOwner
      businessSolution
      createdAt
      currentStage
      decisionNextSteps
      collaborator508
      collaboratorName508
      euaUserId
      existingFunding
      grbDate
      grtDate
      id
      lcid
      lcidExpiresAt
      lcidScope
      lcidCostBaseline
      needsEaSupport
      #   notes
      oitSecurityCollaborator
      oitSecurityCollaboratorName
      #   productManager
      projectAcronym
      rejectionReason
      requestName
      requestType
      requester {
        id
        roles
        component
        isRequester
        userID
        userAccount {
          id
          commonName
          username
          email
        }
      }
      #   status
      submittedAt
      trbCollaborator
      trbCollaboratorName
      updatedAt
      grtReviewEmailBody
      decidedAt
      businessCaseId
      #   lastAdminNote
      cedarSystemId
      #   documents
      hasUiChanges
      grbReviewType
    }
  }
  
}

script:post-response {
  let responseData = res.getBody().data.createSystemIntake
  
  var systemIntakeID = responseData.id
  
  var requesterContactID = responseData.contacts.requester.id
  
  
  bru.setVar("systemIntakeID", systemIntakeID);
  bru.setVar("requesterContactID",requesterContactID)
  bru.setVar("systemIntakeContactID", requesterContactID);
  
  
  
}

settings {
  encodeUrl: true
}
